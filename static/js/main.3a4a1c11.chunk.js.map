{"version":3,"sources":["GlobalVariables.js","mainpages/Register.js","pages/Addtask.js","mainpages/Login.js","pages/Dashboard.js","components/SidebarData.js","pages/Userlist.js","pages/Dropdownitems.js","pages/Print.js","components/Child.js","mainpages/Checkuser.js","pages/Version.js","App.js","reportWebVitals.js","index.js","components/Navbar.js"],"names":["global","User_retrive","Navbarclick","employeid","task_retrive","DB_HOST_PORT","onsubmittxtCheck","initialState","empid","empname","emailid","mobileno","password","designation","dob","designsector","perimeter","responsible","worklocation","leadaccess","company","Register","useState","state","setState","Date","navigate","useHistory","setArrayDesignation","designsectorRetrive","setdesignsector","Arry_loaddesignsector","a","axios","get","response","data","perimeterRetrive","setperimeter","Arry_loadperimeter","worklocationRetrive","setWorklocation","Arry_loadworklocation","companyRetrive","setCompanyRetrive","Arry_loadCompany","loadarraydesignation","useEffect","id","useParams","dateField","setDateField","then","resp","dateFormat","handleInputChange","e","target","name","value","setCalender","format","DOB_Database_Format","Check2","console","log","align","className","style","backgroundColor","height","width","size","color","elevation","float","margin","padding","label","placeholder","fullWidth","required","onChange","error","type","triggerDateChange","map","val","onClick","preventDefault","put","setTimeout","toast","success","err","post","to","class","actuid","project","partname","econo","pa","list","leadeid","taskassign","reqby","taskcategory","taskdesc","ioreceived","reqdate","targetdate","completion","taskstatus","deldate","spendhr","plmlink","qualityaccpt","signofact","remarks","query","querystatus","Addtask","bodyMovel","dobr","maxWidth","display","disabled","variant","multiline","rows","handlereqdate","handletargetdate","st","handledeldate","paddingTop","marginRight","marginTop","rel","href","Login","initialsearchstate","fproject","fpartname","fperimeter","fdesignsector","ftaskassign","fleadname","fcompletion","ftaskstatus","fquerystatus","Dashboard","Retrivefunction","setRowdata","columns","field","headerClassName","sortable","renderCell","cellValues","event","headerName","valueFormatter","deletelist","row","setData","loadData","settableFilter","alert","makeStyles","theme","table","minWidth","status","fontWeight","fontSize","borderRadius","textAlign","useStyle","setValue","tableFilter","window","confirm","delete","catch","searchstate","setSearchstate","handleSearchInputChange","showSearchbox","setshowSearchbox","filterTable","filter","o","Object","keys","some","k","String","toLowerCase","includes","marginLeft","component","Paper","maxHeight","sx","pageSize","rowsPerPageOptions","checkboxSelection","components","Toolbar","GridToolbar","onRowClick","params","SidebarData","title","path","icon","cName","Userlist","tablecell","deleteUserlist","length","item","index","scope","Dropdownitems","tablebody","buttonValue","setButtonValue","stateValue","setStateValue","txtinput","createdby","createddate","ClearAllStatevariable","document","getElementById","loaddata","setLoaddata","load_designsector","load_perimeter","load_worklocation","load_company","handleRefresh","AddNewcategoryList","inputProps","delete_designsector","delete_perimeter","delete_worklocation","delete_company","componentRef","useRef","bodyMovel_3","trigger","content","current","ref","Checkuser","Grid","Avatar","TextField","Version","Navbar","App","position","exact","element","Print","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","sidebar","setSidebar","showSidebar","show","Provider"],"mappings":"8GAAAA,cAAOC,aAAa,KACpBD,EAAOE,YAAY,KACnBF,EAAOG,UAAU,GACjBH,EAAOI,aAAa,KACpBJ,EAAOK,aAAa,0B,kZCoBhBC,EAAiB,KAGfC,EAAa,CACfC,MAAM,GACNC,QAAQ,GACRC,QAAQ,GACRC,SAAS,GACTC,SAAS,GACTC,YAAY,GACZC,IAAI,GACJC,aAAa,GACbC,UAAU,GACVC,YAAY,GACZC,aAAa,GACbC,WAAW,GACXC,QAAQ,IAmjBGC,IA7iBA,WAUX,MAAwBC,mBAAS,4CAAjC,mBAMA,GANA,UAMsBA,mBAASf,IAA/B,mBAAMgB,EAAN,KAAYC,EAAZ,KAEA,EAAgCF,mBAAS,IAAIG,MAA7C,mBAEOjB,GAFP,UAE4Ie,EAArIf,OAAMC,EAA+Hc,EAA/Hd,QAAQC,EAAuHa,EAAvHb,QAAQC,EAA+GY,EAA/GZ,SAAUC,EAAqGW,EAArGX,SAAUC,EAA2FU,EAA3FV,YAAaC,EAA8ES,EAA9ET,IAAKC,EAAyEQ,EAAzER,aAAcC,EAA2DO,EAA3DP,UAAWC,EAAgDM,EAAhDN,YAAaC,EAAmCK,EAAnCL,aAAcC,EAAqBI,EAArBJ,WAAYC,EAASG,EAATH,QAEnI,EAA0CE,mBAAS,UAAnD,mBAGMI,GAHN,UAGiBC,eAGrB,EAA6CL,mBAAS,CAAC,CAAC,aAAe,2BAA2B,CAAC,aAAe,QAAQ,CAAC,aAAe,YAA1I,mBAAwBM,GAAxB,WAGA,EAA2CN,mBAAS,IAApD,oBAAMO,GAAN,MAA0BC,GAA1B,MAEMC,GAAqB,uCAAE,4BAAAC,EAAA,sEACJC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,yBADI,OACnB8B,EADmB,OAEzBL,GAAgBK,EAASC,MAFA,2CAAF,qDAQ3B,GAAqCd,mBAAS,IAA9C,qBAAMe,GAAN,MAAuBC,GAAvB,MAEMC,GAAkB,uCAAE,4BAAAP,EAAA,sEACDC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,sBADC,OAChB8B,EADgB,OAEtBG,GAAaH,EAASC,MAFA,2CAAF,qDASxB,GAA2Cd,mBAAS,IAApD,qBAAMkB,GAAN,MAA0BC,GAA1B,MAEMC,GAAqB,uCAAE,4BAAAV,EAAA,sEACJC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,yBADI,OACnB8B,EADmB,OAEzBM,GAAgBN,EAASC,MAFA,2CAAF,qDAS3B,GAAwCd,mBAAS,IAAjD,qBAAMqB,GAAN,MAAqBC,GAArB,MAEMC,GAAgB,uCAAE,4BAAAb,EAAA,sEACCC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,oBADD,OACd8B,EADc,OAEpBS,GAAkBT,EAASC,MAFP,2CAAF,qDASZU,GAAoB,uCAAE,4BAAAd,EAAA,sEACLC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,aADK,OACpB8B,EADoB,OAE1BP,EAAoBO,EAASC,MAFH,2CAAF,qDAK5BW,qBAAU,WACTD,KACAD,KACAH,KACAH,KACAR,OACE,IAGD,IAAOiB,GAAKC,cAALD,GAaH,GAAkC1B,mBAAS,IAA3C,qBAAO4B,GAAP,MAAkBC,GAAlB,MAKKJ,qBAAU,WAEHC,IACIf,IACHC,IADG,UACIlC,EAAOK,aADX,oBACmC2C,KACtCI,MAAK,SAACC,GACH7B,EAAS,eAAI6B,EAAKjB,KAAK,KACvBe,GAAaG,YAAWD,EAAKjB,KAAK,GAAGtB,IAAK,gBAC3Cd,EAAOC,aAAa,SACnBD,EAAOC,aAAa,WAQ3B,CAAC+C,KAQd,IA0FMO,GAAkB,SAACC,GACtB,MAAmBA,EAAEC,OAAdC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,MACXnC,EAAS,2BAAID,GAAL,kBAAYmC,EAAMC,MAU9B,GAAkCrC,mBAAS,IAAIG,MAA/C,qBAEA,IAFA,YAEqBH,mBAAS,CAACR,KAA/B,qBAEA,IAFA,YAE4BQ,mBAAS,KAArC,qBAAesC,IAAf,aAEA,GAAqBtC,oBAAS,GAA9B,iCACAyB,qBAAU,WACNa,GAAYC,YAAO,IAAIpC,KAAO,iBAIhC,IACF,IAaOqC,GAAoB,WACjBtC,EAAS,2BAAID,GAAL,IAAWT,IAAIwC,YAAWxC,EAAI,iBACtCU,EAAS,2BAAID,GAAL,IAAWf,MAAM,YAMlCuC,qBAAU,cAET,CAACxB,IAEF,IAAMwC,GAAO,WACVC,QAAQC,IAAI1C,IA+BhB,IAUA,GAAqCD,oBAAS,GAA9C,iCAIA,OACI,8BAGA,eAAC,IAAD,WAGQ,cAAC,IAAD,CAAM4C,MAAM,SAAZ,SAEI,sBAAKC,UAAU,OAAf,UACA,qBAAKA,UAAU,SACf,sBAAKA,UAAU,aAAf,UACA,cAAC,IAAD,CAAQC,MAzBN,CAACC,gBAAgB,QAAQC,OAAO,OAAOC,MAAM,QAyBnBJ,UAAU,aAAtC,SACA,mCAAM,cAAC,IAAD,CAAmBK,KAAK,OAAOC,MAAM,YAA3C,SAEA,uBAAON,UAAU,SAAjB,uCAEA,qBAAKA,UAAU,cAKnB,eAAC,IAAD,CAAOO,UAAW,GAAIN,MApCjB,CAAEE,OAAO,OAAOC,MAAM,MAAMI,MAAM,SAAUC,OAAO,YAAYP,gBAAgB,SAoCpF,UACA,sBAAKD,MAnCD,CAACS,QAAQ,GAAGN,MAAM,MAAMI,MAAM,QAmClC,UAKQ,cAAC,IAAD,CAEA3B,GAAG,QACHU,KAAK,QACLoB,MAAM,cACNC,YAAY,cACZC,WAAS,EACTC,UAAQ,EACRd,UAAU,WACVR,MAAOnD,GAAS,GAChB0E,SAAU3B,GACV4B,OAAQ3E,GAA2B,OAAlBF,IAIrB,qBAAK6D,UAAU,SAEf,cAAC,IAAD,CACAnB,GAAG,UACHU,KAAK,UACLoB,MAAM,gBACNC,YAAY,gBACZC,WAAS,EACTC,UAAQ,EACRd,UAAU,WACVR,MAAOlD,GAAW,GAClByE,SAAU3B,GACV4B,OAAQ1E,IAER,qBAAK0D,UAAU,SAEf,cAAC,IAAD,CACAnB,GAAG,UACHU,KAAK,UACLoB,MAAM,WACNC,YAAY,WACZC,WAAS,EAACC,UAAQ,EAClBd,UAAU,WACVR,MAAOjD,GAAW,GAClBwE,SAAU3B,KAEV,qBAAKY,UAAU,SAEf,cAAC,IAAD,CACAnB,GAAG,WACHU,KAAK,WACLoB,MAAM,aACNC,YAAY,aACZC,WAAS,EACTC,UAAQ,EACRd,UAAU,WACVR,MAAOhD,GAAY,GACnBuE,SAAU3B,KAEV,qBAAKY,UAAU,SAEf,cAAC,IAAD,CACAnB,GAAG,WACHU,KAAK,WACLoB,MAAM,eACNC,YAAY,gBACZK,KAAK,WACLJ,WAAS,EACTC,UAAQ,EACRtB,MAAO/C,GAAY,GACnBsE,SAAU3B,KAEV,qBAAKY,UAAU,SAYf,cAAC,IAAD,CACAnB,GAAG,cACHU,KAAK,cACLoB,MAAM,cACNC,YAAY,cACZC,WAAS,EACTC,UAAQ,EACRd,UAAU,WACVR,MAAO9C,GAAe,GACtBqE,SAAU3B,KAEV,qBAAKY,UAAU,SAEf,gCACA,cAAC,IAAD,CAAYC,MAlIjB,CAACS,QAAQ,EAAEN,MAAM,OAAOI,MAAM,QAkIzB,kBACA,cAAC,IAAD,CAAaP,MAlIlB,CAACG,MAAM,OAAOI,MAAM,QAkIf,SAEA,uBAAOS,KAAK,OAAOpC,GAAG,MAAMU,KAAK,MAAMqB,YAAY,aAAapB,MAAOT,GAAWgC,SAAU,SAAC1B,GAAD,OA9VlF,SAACA,GAGhBL,GAAaK,EAAEC,OAAOE,OACtBnC,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoBT,IAAI0C,EAAEC,OAAOE,WAG3CI,KAuVuGsB,CAAkB7B,IAAGW,UAAU,uBAkBpI,sBAAKC,MAzJD,CAACS,QAAQ,GAAGN,MAAM,MAAMI,MAAM,SAyJlC,UAcI,eAAC,IAAD,CAAaK,WAAS,EAAtB,UACA,cAAC,IAAD,6BACA,cAAC,IAAD,CAAQhC,GAAG,eAAeU,KAAK,eAAeoB,MAAM,gBAAgBC,YAAY,4BAA6BC,WAAS,EAACC,UAAQ,EAACd,UAAU,WAAWR,MAAO5C,GAAgB,GAAImE,SAAU3B,GAA1L,SACC1B,GAAoByD,KAAI,SAACC,GAAD,OAAS,cAAC,IAAD,CAAU5B,MAAO4B,EAAIxE,aAArB,SAAoCwE,EAAIxE,uBAK1E,qBAAKoD,UAAU,SAMf,eAAC,IAAD,CAAaa,WAAS,EAAtB,UACA,cAAC,IAAD,yBACA,cAAC,IAAD,CAAQhC,GAAG,YAAYU,KAAK,YAAYoB,MAAM,YAAYC,YAAY,wBAAyBC,WAAS,EAACC,UAAQ,EAACd,UAAU,WAAWR,MAAO3C,GAAa,GAAIkE,SAAU3B,GAAzK,SACClB,GAAiBiD,KAAI,SAACC,GAAD,OAAS,cAAC,IAAD,CAAU5B,MAAO4B,EAAIvE,UAArB,SAAiCuE,EAAIvE,oBAMpE,qBAAKmD,UAAU,SAEf,cAAC,IAAD,CAAWnB,GAAG,cAAcU,KAAK,cAAcoB,MAAM,cAAcC,YAAY,wBAAwBC,WAAS,EAACC,UAAQ,EAACd,UAAU,WAAYR,MAAO1C,GAAe,GAAKiE,SAAU3B,KACrL,qBAAKY,UAAU,SAEf,eAAC,IAAD,CAAaa,WAAS,EAAtB,UACF,cAAC,IAAD,6BACE,cAAC,IAAD,CAAQhC,GAAG,eAAeU,KAAK,eAAeoB,MAAM,gBAAgBC,YAAY,2BAA4BC,WAAS,EAACC,UAAQ,EAACd,UAAU,WAAWR,MAAOzC,GAAgB,GAAIgE,SAAU3B,GAAzL,SACCf,GAAoB8C,KAAI,SAACC,GAAD,OAAS,cAAC,IAAD,CAAU5B,MAAO4B,EAAIrE,aAArB,SAAoCqE,EAAIrE,uBAM1E,qBAAKiD,UAAU,SACf,eAAC,IAAD,CAAaa,WAAS,EAAtB,UACF,cAAC,IAAD,2BACE,eAAC,IAAD,CAAShC,GAAG,aAAaU,KAAK,aAAaoB,MAAM,cAAcC,YAAY,0BAA0BC,WAAS,EAACC,UAAQ,EAACd,UAAU,WAAWR,MAAOxC,GAAc,GAAI+D,SAAU3B,GAAhL,UACA,cAAC,IAAD,CAAUI,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,KAAhB,sBAGA,qBAAKQ,UAAU,SAEf,eAAC,IAAD,CAAaa,WAAS,EAAtB,UACF,cAAC,IAAD,uBACE,cAAC,IAAD,CAAQhC,GAAG,UAAUU,KAAK,UAAUoB,MAAM,UAAUC,YAAY,sBAAuBC,WAAS,EAACC,UAAQ,EAACd,UAAU,WAAWR,MAAOvC,GAAW,GAAI8D,SAAU3B,GAA/J,SACCZ,GAAe2C,KAAI,SAACC,GAAD,OAAS,cAAC,IAAD,CAAU5B,MAAO4B,EAAInE,QAArB,SAA+BmE,EAAInE,kBAQhE,qBAAK+C,UAAU,SAEf,cAAC,IAAD,IAMA,qBAAKA,UAAU,SACX,wBAAQiB,KAAK,SAASjB,UAAU,WAAWC,MAtOpD,CAACG,MAAM,QAAQI,MAAM,SAsO4Ca,QAzZxD,SAAChC,GAIjB,GAFAA,EAAEiC,iBAEEjF,GAAUC,GAAYC,GAAYC,GAAaC,GAAaC,GAAgBE,GACtEC,GAAaC,GAAgBC,GAAiBC,GAAeC,EAMnE,GAAIN,EAIX,GADWgD,KACPd,GAwBG,IAEIf,IAAMyD,IAAN,UAAa1F,EAAOK,aAApB,+BAAuD2C,IAAK,CACxDxC,QACJC,UACAC,UACAC,WACAC,WACAC,cACAC,MACAC,eACAC,YACAC,cACAC,eACAC,aACAC,YAGAuE,YAAW,kBAAKjE,EAAS,OAAK,KAC9BkE,IAAMC,QAAN,sCAA6C7C,KAEhD,MAAM8C,GACPF,IAAMT,MAAM,8BAChBnB,QAAQC,IAAI6B,EAAI3D,SAASC,WA9CxB,IACGH,IAAM8D,KAAN,UAAc/F,EAAOK,aAArB,aAA6C,CACzCG,QACAC,UACAC,UACAC,WACAC,WACAC,cACAC,MACAC,eACAC,YACAC,cACAC,eACAC,aACAC,YAEAwE,IAAMC,QAAQ,2BACdF,YAAW,kBAAKjE,EAAS,OAAK,KAEpC,MAAMoE,GACJF,IAAMT,MAAM,8BAChBnB,QAAQC,IAAI6B,EAAI3D,SAASC,WAzBFwD,IAAMT,MAAM,4BAN9BS,IAAMT,MAAM,+BACZ7E,EAAiB,OAkZN,wBACA,cAAC,IAAD,CAAM0F,GAAG,IAAT,SACA,yBAAQZ,KAAK,SAASjB,UAAU,WAAWC,MAvOpD,CAACG,MAAM,QAAQI,MAAM,QAuOZ,cAA0D,mBAAGsB,MAAM,eAAnE,8B,yVC7iBlB1F,EAAa,CACf2F,OAAO,GACPC,QAAS,GACTnF,UAAW,GACXD,aAAc,GACdqF,SAAU,GACVC,MAAO,GACPC,GAAI,GACJC,KAAM,GACNC,QAAS,GACTC,WAAY,GACZC,MAAO,GACPC,aAAc,GACdC,SAAU,GACVC,WAAY,GACZC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,WAAY,GACZC,QAAS,GACTC,QAAS,IACTC,QAAS,GACTC,aAAc,GACdC,UAAW,GACXC,QAAS,GACTC,MAAO,IACPC,YAAa,UAmhBFC,IA7gBD,WAGR,MAAsBpG,mBAASf,GAA/B,mBAAMgB,EAAN,KAAYC,EAAZ,KAEF,EAAwCF,mBAAS,IAAIG,MAArD,mBAGAyE,GAHA,UA4Be3E,EAzBf2E,QACAC,EAwBe5E,EAxBf4E,QACAnF,EAuBeO,EAvBfP,UACAD,EAsBeQ,EAtBfR,aACAqF,EAqBe7E,EArBf6E,SACAC,EAoBe9E,EApBf8E,MACAC,EAmBe/E,EAnBf+E,GACAC,EAkBehF,EAlBfgF,KACAC,EAiBejF,EAjBfiF,QACAC,EAgBelF,EAhBfkF,WACAC,EAeenF,EAffmF,MACAC,EAcepF,EAdfoF,aACAC,EAaerF,EAbfqF,SACAC,EAYetF,EAZfsF,WACAC,EAWevF,EAXfuF,QACAC,EAUexF,EAVfwF,WACAC,EASezF,EATfyF,WACAC,EAQe1F,EARf0F,WACAC,EAOe3F,EAPf2F,QACAC,EAMe5F,EANf4F,QACAC,EAKe7F,EALf6F,QACAC,EAIe9F,EAJf8F,aACAC,EAGe/F,EAHf+F,UACAC,GAEehG,EAFfgG,QACAC,GACejG,EADfiG,MACAC,GAAelG,EAAfkG,YAEA,GAA0CnG,mBAAS,UAAnD,qBAMJ,IANI,YAGiBK,cAGwBL,mBAAS,CAAC,CAAC,aAAe,2BAA2B,CAAC,aAAe,QAAQ,CAAC,aAAe,aAA1I,qBAAwBM,IAAxB,aAGA,GAA2CN,mBAAS,IAApD,qBAAMO,GAAN,MAA0BC,GAA1B,MAEMC,GAAqB,uCAAE,4BAAAC,EAAA,sEACJC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,yBADI,OACnB8B,EADmB,OAEzBL,GAAgBK,EAASC,MAFA,2CAAF,qDAQ3B,GAAqCd,mBAAS,IAA9C,qBAAMe,GAAN,MAAuBC,GAAvB,MAEMC,GAAkB,uCAAE,4BAAAP,EAAA,sEACDC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,sBADC,OAChB8B,EADgB,OAEtBG,GAAaH,EAASC,MAFA,2CAAF,qDASxB,GAA2Cd,mBAAS,IAApD,qBAA0BmB,IAA1B,aAEMC,GAAqB,uCAAE,4BAAAV,EAAA,sEACJC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,yBADI,OACnB8B,EADmB,OAEzBM,GAAgBN,EAASC,MAFA,2CAAF,qDAS3B,GAAwCd,mBAAS,IAAjD,qBAAqBsB,IAArB,aAEMC,GAAgB,uCAAE,4BAAAb,EAAA,sEACCC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,oBADD,OACd8B,EADc,OAEpBS,GAAkBT,EAASC,MAFP,2CAAF,qDASZU,GAAoB,uCAAE,4BAAAd,EAAA,sEACLC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,aADK,OACpB8B,EADoB,OAE1BP,GAAoBO,EAASC,MAFH,2CAAF,qDAK5BW,qBAAU,WACTD,KACAD,KACAH,KACAH,KACAR,OACE,IAGD,IAAOiB,GAAKC,cAALD,GAsBED,qBAAU,WAEHC,IACIf,IACHC,IADG,UACIlC,EAAOK,aADX,4BAC2C2C,KAC9CI,MAAK,SAACC,GACH7B,EAAS,eAAI6B,EAAKjB,KAAK,KACvBZ,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoBuF,QAASxD,YAAWD,EAAKjB,KAAK,GAAG0E,QAAS,mBACvEtF,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoBwF,WAAYzD,YAAWD,EAAKjB,KAAK,GAAG2E,WAAY,mBAC7EvF,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoB2F,QAAS5D,YAAWD,EAAKjB,KAAK,GAAG8E,QAAS,oBAExElH,EAAOI,aAAa,SACnBJ,EAAOI,aAAa,WAQ3B,CAAC4C,KAQd,IAuDMO,GAAkB,SAACC,GACtB,MAAmBA,EAAEC,OAAdC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,MACXnC,EAAS,2BAAID,GAAL,kBAAYmC,EAAMC,MAU9B,GAAkCrC,mBAAS,IAAIG,MAA/C,qBAEA,IAFA,YAEqBH,mBAAS,CAACwF,KAA/B,qBAEA,IAFA,YAE4BxF,mBAAS,KAArC,qBAAesC,IAAf,aAEA,GAAqBtC,oBAAS,GAA9B,iCACAyB,qBAAU,WACNa,GAAYC,YAAO,IAAIpC,KAAO,iBAIhC,IAWDsB,qBAAU,cAET,CAACxB,IAEF,IAUKoG,GAAU,CAAC9C,QAAQ,GAAGN,MAAM,SAASI,MAAM,QAM3CiD,GAAK,CAACrD,MAAM,OAAOI,MAAM,QAK/B,GAAqCrD,oBAAS,GAA9C,iCAIA,OACI,gCAGG,qBAAK2E,MAAM,SAAX,SAAqB,cAAC,IAAD,MAKf,cAAC,IAAD,UAID,eAAC,IAAD,CAAOvB,UAAW,GAAIN,MA9BjB,CAAEE,OAAO,QAAQuD,SAAS,QAAQlD,MAAM,SAAUC,OAAO,YAAYP,gBAAgB,SA8B1F,UACA,sBAAKD,MAAOuD,GAAZ,UAEI,sBAAKvD,MA9BD,CAAE0D,QAAQ,eA8Bd,UACI,cAAC,IAAD,CAAY9E,GAAG,SAASU,KAAK,SAASoB,MAAM,cAAcC,YAAY,cACrEC,WAAS,EAAC+C,UAAQ,EAACvD,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,SAC7DrE,MAAOuC,GAAU,GAAIhB,SAAU3B,KAEhC,eAAC,IAAD,CAAQY,UAAU,YAAYC,MAAO,CAACG,MAAM,SAA5C,uBAAgE,cAAC,IAAD,CAAqBC,KAAM,QAC3F,cAAC,IAAD,CAAQL,UAAU,YAAYC,MAAO,CAACG,MAAM,OAA5C,SAAoD,cAAC,IAAD,CAAoBC,KAAM,UAIlF,qBAAKL,UAAU,SACf,cAAC,IAAD,CAAYnB,GAAG,UAAUU,KAAK,UAAUoB,MAAM,UAAUC,YAAY,UAC/DC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAC7DrE,MAAOwC,GAAW,GAAIjB,SAAU3B,KAGrC,qBAAKY,UAAU,SACf,eAAC,IAAD,CAAaa,WAAS,EAAtB,UACA,cAAC,IAAD,yBACA,cAAC,IAAD,CAAQhC,GAAG,YAAYwB,KAAK,QAAQwD,QAAQ,WAAWtE,KAAK,YAAYoB,MAAM,YAAYC,YAAY,wBAAyBC,WAAS,EAACC,UAAQ,EAACd,UAAU,WAAWR,MAAO3C,GAAa,GAAIkE,SAAU3B,GAAzM,SACClB,GAAiBiD,KAAI,SAACC,GAAD,OAAS,cAAC,IAAD,CAAU5B,MAAO4B,EAAIvE,UAArB,SAAiCuE,EAAIvE,oBAGpE,qBAAKmD,UAAU,SAEf,eAAC,IAAD,CAAaa,WAAS,EAAtB,UACA,cAAC,IAAD,6BACA,cAAC,IAAD,CAAQhC,GAAG,eAAeU,KAAK,eAAeoB,MAAM,gBAAgBC,YAAY,4BAChFC,WAAS,EAACC,UAAQ,EAACd,UAAU,WAAWK,KAAK,QAAQwD,QAAQ,WAAWrE,MAAO5C,GAAgB,GAAImE,SAAU3B,GAD7G,SAEC1B,GAAoByD,KAAI,SAACC,GAAD,OAAS,cAAC,IAAD,CAAU5B,MAAO4B,EAAIxE,aAArB,SAAoCwE,EAAIxE,uBAG1E,qBAAKoD,UAAU,SAGf,cAAC,IAAD,CAAYnB,GAAG,WAAWU,KAAK,WAAWoB,MAAM,YAAYC,YAAY,YACnEC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAC7DrE,MAAOyC,GAAY,GAAIlB,SAAU3B,KAEtC,qBAAKY,UAAU,SAEf,cAAC,IAAD,CAAYnB,GAAG,QAAQU,KAAK,QAAQoB,MAAM,UAAUC,YAAY,UAC3DC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAC7DrE,MAAO0C,GAAS,GAAInB,SAAU3B,KAEnC,qBAAKY,UAAU,SAEf,cAAC,IAAD,CAAYnB,GAAG,KAAKU,KAAK,KAAKoB,MAAM,SAASC,YAAY,SACpDC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAC7DrE,MAAO2C,GAAM,GAAIpB,SAAU3B,KAEhC,qBAAKY,UAAU,SAEf,cAAC,IAAD,CAAYnB,GAAG,OAAOU,KAAK,OAAOoB,MAAM,cAAcC,YAAY,cAC7DC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAC7DrE,MAAO4C,GAAQ,GAAIrB,SAAU3B,KAElC,qBAAKY,UAAU,SAEf,cAAC,IAAD,CAAYnB,GAAG,UAAUU,KAAK,UAAUoB,MAAM,WAAWC,YAAY,WAChEC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAC7DrE,MAAO6C,GAAW,GAAItB,SAAU3B,KAErC,qBAAKY,UAAU,SAEf,cAAC,IAAD,CAAYnB,GAAG,aAAaU,KAAK,aAAaoB,MAAM,oBAAoBC,YAAY,oBAC/EC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAC7DrE,MAAO8C,GAAc,GAAIvB,SAAU3B,KAExC,qBAAKY,UAAU,YAKnB,sBAAKC,MAAOuD,GAAZ,UAEA,cAAC,IAAD,CAAY3E,GAAG,QAAQU,KAAK,QAAQoB,MAAM,oBAAoBC,YAAY,oBACjEC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAC7DrE,MAAO+C,GAAS,GAAIxB,SAAU3B,KAEnC,qBAAKY,UAAU,SACnB,cAAC,IAAD,CAAYnB,GAAG,eAAeU,KAAK,eAAeoB,MAAM,gBAAgBC,YAAY,gBAC3EC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAC7DrE,MAAOgD,GAAgB,GAAIzB,SAAU3B,KAEzC,qBAAKY,UAAU,SACnB,qBAAKA,UAAU,SACZ,cAAC,IAAD,CAAYnB,GAAG,WAAWU,KAAK,WAAWoB,MAAM,mBAAmBC,YAAY,mBAC1EC,WAAS,EAACC,UAAQ,EAAEgD,WAAS,EAACC,KAAM,GAAI1D,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAClFrE,MAAOiD,GAAY,GAAI1B,SAAU3B,KAEtC,qBAAKY,UAAU,SAEf,eAAC,IAAD,CAAaa,WAAS,EAAtB,UACF,cAAC,IAAD,kCACE,eAAC,IAAD,CAAShC,GAAG,aAAaU,KAAK,aAAaoB,MAAM,qBAAqBC,YAAY,qBAClFC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQwD,QAAQ,WAAW7D,UAAU,WAC5DR,MAAOkD,GAAc,GAAI3B,SAAU3B,GAFpC,UAGA,cAAC,IAAD,CAAUI,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,KAAhB,sBAIJ,qBAAKQ,UAAU,SAEX,sBAAKC,MAAO,CAACO,MAAM,QAAnB,UACA,cAAC,IAAD,kCACA,cAAC,IAAD,CAAaP,MAAOwD,GAApB,SACA,uBAAOxC,KAAK,OAAOpC,GAAG,UAAUU,KAAK,UAAUqB,YAAY,aAC3DpB,MAAOpC,EAAMuF,QAAS5B,SAAU,SAAC1B,GAAD,OAlS1B,SAACA,GAClBhC,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoBuF,QAAQtD,EAAEC,OAAOE,WAiSEwE,CAAc3E,IAAGW,UAAU,oBAIhE,qBAAKC,MAAO,CAACO,MAAM,QAAnB,SACI,4BAEJ,sBAAKP,MAAO,CAACO,MAAM,SAAnB,UACA,cAAC,IAAD,iCACA,cAAC,IAAD,CAAaP,MAAOwD,GAApB,SACA,uBAAOxC,KAAK,OAAOpC,GAAG,aAAaU,KAAK,aAAaqB,YAAY,aACjEpB,MAAOoD,EAAY7B,SAAU,SAAC1B,GAAD,OAxSpB,SAACA,GAClBhC,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoBwF,WAAWvD,EAAEC,OAAOE,WACjDnC,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoB2F,QAAQ1D,EAAEC,OAAOE,WAsSJyE,CAAiB5E,IAAGW,UAAU,uBAMpE,sBAAKC,MA1JD,CAACS,QAAQ,GAAGN,MAAM,SAASI,MAAM,SA0JrC,UAEA,eAAC,IAAD,CAAaK,WAAS,EAAtB,UACE,cAAC,IAAD,4BACE,eAAC,IAAD,CAAShC,GAAG,aAAaU,KAAK,aAAaoB,MAAM,qBAAqBC,YAAY,qBAClFC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQwD,QAAQ,WAAW7D,UAAU,WAAWR,MAAOqD,GAAc,GAAI9B,SAAU3B,GAD3G,UAEA,cAAC,IAAD,CAAUI,MAAM,KAAhB,gBACA,cAAC,IAAD,CAAUA,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,OAAhB,wBAGJ,qBAAKQ,UAAU,SAEf,eAAC,IAAD,CAAaa,WAAS,EAAtB,UACE,cAAC,IAAD,0BACE,eAAC,IAAD,CAAShC,GAAG,aAAaU,KAAK,aAAaoB,MAAM,cAAcC,YAAY,cAC3EC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQwD,QAAQ,WAAW7D,UAAU,WAAWR,MAAOsD,GAAc,GAAI/B,SAAU3B,GAD3G,UAEA,cAAC,IAAD,CAAUI,MAAM,UAAhB,qBACA,cAAC,IAAD,CAAUA,MAAM,UAAhB,qBACA,cAAC,IAAD,CAAUA,MAAM,WAAhB,sBACA,cAAC,IAAD,CAAUA,MAAM,SAAhB,0BAGJ,qBAAKQ,UAAU,SACf,sBAAKkE,IAAE,EAAP,UACA,sBAAKjE,MAAO,CAACO,MAAM,QAAnB,UACI,cAAC,IAAD,iCACA,cAAC,IAAD,CAAaP,MAAOwD,GAApB,SACA,uBAAOxC,KAAK,OAAQpC,GAAG,UAAUU,KAAK,UAAUqB,YAAY,aAC5DpB,MAAOuD,EAAShC,SAAU,SAAC1B,GAAD,OA1UpB,SAACA,GACnBhC,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoB2F,QAAQ1D,EAAEC,OAAOE,WAyUH2E,CAAc9E,IAAGW,UAAU,oBAI9D,cAAC,IAAD,CAAWC,MAAO,CAACO,MAAM,QAASJ,MAAM,QAAQgE,WAAW,QAASvF,GAAG,UAAUU,KAAK,UAAUoB,MAAM,mBAAmBC,YAAY,mBAC3HE,UAAQ,EAACT,KAAK,WAAWL,UAAU,WAAW6D,QAAQ,WACvDrE,MAAOwD,GAAW,GAAIjC,SAAU3B,QAKzC,qBAAKY,UAAU,OAAOa,WAAS,IAG3B,qBAAKb,UAAU,SACf,cAAC,IAAD,CAAYnB,GAAG,UAAUU,KAAK,UAAUoB,MAAM,oBAAoBC,YAAY,oBACzEC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WAC7DrE,MAAOyD,GAAW,GAAIlC,SAAU3B,KAIzC,qBAAKY,UAAU,SACf,eAAC,IAAD,CAAaa,WAAS,EAAtB,UACE,cAAC,IAAD,kCACE,eAAC,IAAD,CAAShC,GAAG,eAAeU,KAAK,eAAeoB,MAAM,qBAAqBC,YAAY,qBACtFC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQwD,QAAQ,WAAW7D,UAAU,WAAWR,MAAO0D,GAAgB,GAAInC,SAAU3B,GAD7G,UAEA,cAAC,IAAD,CAAUI,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,KAAhB,sBAIA,qBAAKQ,UAAU,SACf,eAAC,IAAD,CAAaa,WAAS,EAAtB,UACF,cAAC,IAAD,kCACE,eAAC,IAAD,CAAShC,GAAG,YAAYU,KAAK,YAAYoB,MAAM,sBAAsBC,YAAY,sBACjFC,WAAS,EAACC,UAAQ,EAACT,KAAK,QAAQwD,QAAQ,WAAW7D,UAAU,WAAWR,MAAO2D,GAAa,GAAIpC,SAAU3B,GAD1G,UAEA,cAAC,IAAD,CAAUI,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,KAAhB,sBAIA,qBAAKQ,UAAU,SACf,cAAC,IAAD,CAAYnB,GAAG,UAAUU,KAAK,UAAUoB,MAAM,UAAUC,YAAY,UAC/DC,WAAS,EAAGiD,WAAS,EAACC,KAAM,EAAG1D,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,WACzErE,MAAO4D,IAAW,GAAIrC,SAAU3B,KAG/B,qBAAKY,UAAU,OAAOa,WAAS,EAACZ,MAAO,CAACE,OAAO,UAC/C,sBAAKF,MAAO,CAACO,MAAM,QAAnB,UACE,cAAC,IAAD,CAAY3B,GAAG,QAASU,KAAK,QAAQoB,MAAM,QAAQC,YAAY,QAChEgD,UAAQ,EAACvD,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,SACnDrE,MAAO6D,IAAS,GAAItC,SAAU3B,GAC9Ba,MAAO,CAACO,MAAM,OAAQJ,MAAM,OAAOiE,YAAY,UAGhD,qBAAKrE,UAAU,OAAOa,WAAS,EAACZ,MAAO,CAACE,OAAO,OAAQK,MAAM,UAC9D,cAAC,IAAD,CAAY3B,GAAG,cAAcU,KAAK,cAAcoB,MAAM,eAAeC,YAAY,eAChFgD,UAAQ,EAACvD,KAAK,QAAQL,UAAU,WAAW6D,QAAQ,SACpDrE,MAAO8D,IAAe,GAAIvC,SAAU3B,GACpCa,MAAO,CAACO,MAAM,OAAQJ,MAAM,QAAQiE,YAAY,aAIrD,qBAAKrE,UAAU,SACf,8BACI,yBAAQiB,KAAK,SAASjB,UAAU,WAAWC,MAxPpD,CAACG,MAAM,QAAQI,MAAM,QAAQ8D,UAAU,QAwP0BjD,QAvWxD,SAAChC,GAIjB,GAFAA,EAAEiC,iBAEEU,EAMA,GAAIW,EAKP,IACG7E,IAAM8D,KAAN,UAAc/F,EAAOK,aAArB,oBAAoD,CAChD8F,UACAnF,YACAD,eACAqF,WACAC,QACAC,KACAC,OACAC,UACAC,aACAC,QACAC,eACAC,WACAC,aACAC,UACAC,aACAC,aACAC,aACAC,UACAC,UACAC,UACAC,eACAC,YACAC,WACAC,SACAC,iBAEA7B,IAAMC,QAAQ,2BAGpB,MAAMC,GACJF,IAAMT,MAAM,8BAChBnB,QAAQC,IAAI6B,EAAI3D,SAASC,WArCFwD,IAAMT,MAAM,gCAN9BS,IAAMT,MAAM,+BACK,OAiWN,cAAmFnC,GAAK,SAAU,oBAItG,sBAAM0F,IAAI,aAAaC,KAAK,kG,oDCjkBhD,yGA2EeC,IAhEH,WASR,OACI,8BAGA,cAAC,IAAD,UAEI,eAAC,IAAD,CAAOlE,UAAW,GAAIN,MAdb,CAAEE,OAAO,OAAOC,MAAM,IAAKK,OAAO,YAAYP,gBAAgB,SAcvE,UACI,cAAC,IAAD,CAAMH,MAAM,SAAZ,SAEI,sBAAKC,UAAU,OAAf,UACA,qBAAKA,UAAU,SACf,cAAC,IAAD,CAAQC,MAlBN,CAACC,gBAAgB,QAAQC,OAAO,OAAOC,MAAM,QAkB/C,SACA,mCAAM,cAAC,IAAD,CAAYC,KAAK,OAAOC,MAAM,YAApC,SAGA,uBAAON,UAAU,SAAjB,sBACA,qBAAKA,UAAU,cAMX,sBAAKC,MA5BV,CAACS,QAAQ,IA4BJ,UAEA,cAAC,IAAD,CAAYC,MAAM,cAAcC,YAAY,cAC5CC,WAAS,EAACC,UAAQ,EAACd,UAAU,WAAWe,SA7BxC,SAAC1B,GACjBxD,EAAOG,UAAUqD,EAAEC,OAAOE,SA6Bd,qBAAKQ,UAAU,SACX,cAAC,IAAD,CAAWW,MAAM,WAAWC,YAAY,WAAWK,KAAK,WAAWJ,WAAS,EAACC,UAAQ,IACrF,qBAAKd,UAAU,SACf,cAAC,IAAD,CAAM6B,GAAG,aAAT,SACA,wBAAQZ,KAAK,SAAUjB,UAAU,YAAjC,uBAEA,uBACA,qBAAKA,UAAU,SACf,cAAC,IAAD,CAAM6B,GAAG,YAAT,SACD,wBAAQ7B,UAAU,WAAlB,uCAEA,qBAAKA,UAAU,SAGf,cAAC,IAAD,CAAM6B,GAAG,aAAT,SACA,wBAAQ7B,UAAU,WAAlB,gD,oXC9BjB0E,EAAoB,CACxBC,SAAS,GACTC,UAAU,GACVC,WAAW,GACXC,cAAc,GACdC,YAAY,GACZC,UAAU,GACVC,YAAY,GACZC,YAAY,GACZC,aAAa,GACb9I,MAAMR,EAAOG,WAuYAoJ,IAjYf,WACE,MAAmCjI,mBAAS,MAA5C,mBACMkI,GADN,UACsB,WACpBxJ,EAAOC,aAAa,MACpB+D,QAAQC,IAAIjE,EAAOC,gBAEvB,EAA0BqB,mBAAS,MAAnC,mBAAcmI,GAAd,WAWQC,EAAU,CACd,CACEC,MAAM,OAAOpF,MAAM,EAAGqF,gBAAiB,sBAAsBC,UAAU,EACvEC,WAAY,SAACC,GACT,OACE,cAAC,IAAD,CAAM/D,GAAE,sBAAiB+D,EAAW/G,IAApC,SACF,yBAAQmB,UAAU,eAAeqB,QAAS,SAACwE,GACzCR,KADF,cAEM,cAAC,IAAD,WAKZ,CAAEG,MAAO,KAAMM,WAAY,KAAK1F,MAAO,GAAGqF,gBAAiB,uBAC3D,CAAED,MAAO,UAAWM,WAAY,UAAW1F,MAAO,IAAIqF,gBAAiB,uBACvE,CAAED,MAAO,YAAaM,WAAY,YAAa1F,MAAO,IAAIqF,gBAAiB,uBAC3E,CAAED,MAAO,eAAgBM,WAAY,gBAAiB1F,MAAO,IAAIqF,gBAAiB,uBAClF,CAAED,MAAO,WAAYM,WAAY,WAAY1F,MAAO,IAAIqF,gBAAiB,uBACzE,CAAED,MAAO,UAAWM,WAAY,WAAY1F,MAAO,IAAIqF,gBAAiB,uBACxE,CAAED,MAAO,aAAcM,WAAY,gBAAiB1F,MAAO,IAAIqF,gBAAiB,uBAChF,CAAED,MAAO,QAASM,WAAY,eAAgB1F,MAAO,IAAIqF,gBAAiB,uBAC1E,CAAED,MAAO,WAAYM,WAAY,aAAc1F,MAAO,IAAIqF,gBAAiB,uBAC3E,CAAED,MAAO,UAAWM,WAAY,YAAa1F,MAAO,IAAIqF,gBAAiB,sBAAuBxE,KAAM,OAAO8E,eAAe,YAAY,IAAVvG,EAAS,EAATA,MAAU,OAAOL,YAAWK,EAAM,gBAChK,CAAEgG,MAAO,aAAcM,WAAY,cAAe1F,MAAO,IAAIqF,gBAAiB,sBAAuBxE,KAAM,OAAO8E,eAAe,YAAY,IAAVvG,EAAS,EAATA,MAAU,OAAOL,YAAWK,EAAM,gBACrK,CAAEgG,MAAO,aAAcM,WAAY,aAAc1F,MAAO,IAAIqF,gBAAiB,uBAC7E,CAAED,MAAO,aAAcM,WAAY,cAAe1F,MAAO,IAAIqF,gBAAiB,uBAC9E,CAAED,MAAO,UAAWM,WAAY,gBAAiB1F,MAAO,IAAIqF,gBAAiB,sBAAuBxE,KAAM,OAAO8E,eAAe,YAAY,IAAVvG,EAAS,EAATA,MAAU,OAAOL,YAAWK,EAAM,gBACpK,CAAEgG,MAAO,QAASM,WAAY,QAAS1F,MAAO,GAAGqF,gBAAiB,uBAClE,CAAED,MAAO,cAAeM,WAAY,eAAgB1F,MAAO,IAAIqF,gBAAiB,uBAEhF,CACED,MAAM,SAASpF,MAAO,GAAGqF,gBAAiB,sBAAsBC,UAAU,EAC1EC,WAAY,SAACC,GACT,OACE,wBAAQ5F,UAAU,kBAAmBqB,QAAS,kBAAK2E,EAAWJ,EAAWK,IAAIpH,KAA7E,SAAmF,cAAC,IAAD,QAO3F,CACE2G,MAAM,OAAOpF,MAAO,GAAGqF,gBAAiB,sBAAsBC,UAAU,EACxEC,WAAY,SAACC,GACT,OACE,wBAAQ5F,UAAU,gBAAgBqB,QAAS,kBAAKxB,QAAQC,IAAI8F,EAAWK,IAAIpH,KAA3E,SAAiF,cAAC,IAAD,QAMzF,CACE2G,MAAM,QAAQpF,MAAM,EAAGqF,gBAAiB,sBAAsBC,UAAU,EACxEC,WAAY,SAACC,GACT,OACE,cAAC,IAAD,CAAM/D,GAAE,iBAAY+D,EAAW/G,IAA/B,SACF,yBAAQmB,UAAU,gBAAgBqB,QAAS,SAACwE,GAC1CR,KADF,cAEM,cAAC,IAAD,YAUd,EAAqBlI,mBAAS,IAA9B,mBAAOc,EAAP,KAAYiI,EAAZ,KAEMC,EAAQ,uCAAE,4BAAAtI,EAAA,sEACOC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,mBAAkD,CAACyI,cAD1D,OACR3G,EADQ,OAEdkI,EAAQlI,EAASC,MACjBmI,EAAepI,EAASC,MAExBoI,MAAMxK,EAAOK,cALC,2CAAF,qDAOhB0C,qBAAU,WACRuH,MACC,IAGcG,aAAW,SAACC,GAAD,MAAU,CACpCC,MAAO,CACLC,SAAS,KAGbC,OAAO,CACLC,WAAW,OACXC,SAAS,MACTtG,MAAM,QACNJ,gBAAgB,OAChB2G,aAAa,GACXlD,QAAQ,QACRlD,OAAQ,OACRC,QAAS,OACToG,UAAU,aAKAC,GAnBd,IAqBA,EAAsB5J,mBAAS,IAA/B,mBAAY6J,GAAZ,WAEA,EAAkC7J,mBAAS,IAA3C,mBAAM8J,EAAN,KAAkBb,EAAlB,KAEA,EAAsBjJ,mBAAS,IAA/B,6BAiBAyB,qBAAU,cAER,IAEF,IAAMoH,EAAY,SAACnH,GACdqI,OAAOC,QAAP,wEAAgFtI,EAAhF,QACCf,IAAMsJ,OAAN,UAAgBvL,EAAOK,aAAvB,8BAAyD2C,EAAzD,MACCI,MAAK,SAACjB,GACN6B,QAAQC,IAAI,qBAAsB9B,EAASC,SAE9CoJ,OAAM,SAAA1F,GACJ9B,QAAQmB,MAAMW,MAEdF,IAAMC,QAAN,UAAiB7C,EAAjB,+BACD2C,YAAW,kBAAI2E,MAAW,MAO/B,GAAkChJ,mBAASuH,GAA3C,qBAAM4C,GAAN,MAAkBC,GAAlB,MAGE5C,GACC2C,GADD3C,SAAUC,GACT0C,GADS1C,UAAWC,GACpByC,GADoBzC,WAAYC,GAChCwC,GADgCxC,cAAeC,GAC/CuC,GAD+CvC,YAAaC,GAC5DsC,GAD4DtC,UAAUC,GACtEqC,GADsErC,YAAaC,GACnFoC,GADmFpC,YAAaC,GAChGmC,GADgGnC,aAI7FqC,IAHHF,GAD6GjL,MAIlF,SAACgD,GAC7B,MAAmBA,EAAEC,OAAdC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,MACZ+H,GAAe,2BAAID,IAAL,kBAAkB/H,EAAMC,OAYxC,GAAqCrC,mBAAS,IAA9C,qBAAMe,GAAN,MAAuBC,GAAvB,MAEMC,GAAkB,uCAAE,4BAAAP,EAAA,sEACDC,IAAMC,IAAI,0CADT,OAChBC,EADgB,OAEtBG,GAAaH,EAASC,MAFA,2CAAF,qDASxB,GAA2Cd,mBAAS,IAApD,qBAAMO,GAAN,MAA0BC,GAA1B,MAEMC,GAAqB,uCAAE,4BAAAC,EAAA,sEACJC,IAAMC,IAAI,6CADN,OACnBC,EADmB,OAEzBL,GAAgBK,EAASC,MAFA,2CAAF,qDAuB3BW,qBAAU,WACRR,KACAR,OACE,IAEJ,OAAsCT,mBAAStB,EAAOE,aAAtD,qBAUA,IAVA,YAUuCoB,oBAAS,IAAhD,qBAAOsK,GAAP,MAAqBC,GAArB,MAEE,OACE,qCAGD,8BAAM,cAAC,IAAD,MAGL,gCACE,qBAAK1H,UAAU,QAEjB,cAAC,IAAD,CAAWe,SArHE,SAAC1B,GAChB,GAAqB,IAAlBA,EAAEC,OAAOE,MAAY,CACtBwH,EAAS3H,EAAEC,OAAOE,OAClB,IAAMmI,EAAY1J,EAAK2J,QAAO,SAAAC,GAAC,OAAEC,OAAOC,KAAKF,GAAGG,MAAK,SAAAC,GAAC,OACpDC,OAAOL,EAAEI,IAAIE,cAAcC,SAAS/I,EAAEC,OAAOE,MAAM2I,qBACnD/B,EAAe,YAAIuB,SAEnBvB,EAAe,YAAInI,KA8GY2C,YAAY,SAASZ,UAAU,YAAY6D,QAAQ,WAAW8C,WAAW,OAAOnG,MAAM,QAAvH,eACA,cAAC,IAAD,CAAUH,KAAK,OAAOL,UAAU,eAChC,eAAC,IAAD,CAAQA,UAAU,WAAWC,MAAO,CAACqE,UAAU,OAAO+D,WAAW,QAC7DhH,QAAS,WAGdqG,IAAkBD,KAJjB,cAMe,GAAfA,GAAsB,oBAAoB,oBAN1C,UAUA,gCACC,8BAECA,IAAiB,cAAC,IAAD,CAAgBa,UAAWC,IAAOtI,MAhC9B,CAAC4G,aAAa,GAAIpG,OAAO,aAAaiD,SAAS,QAAS8E,UAAU,QAgCtE,SACvB,sBAAKvI,MAAO,CAACqE,UAAU,OAAO+D,WAAW,QAAzC,UACK,cAAC,IAAD,CAAYxJ,GAAG,WAAWU,KAAK,WAAWoB,MAAM,UAAUC,YAAY,UACnEP,KAAK,QAAQL,UAAU,aAAa6D,QAAQ,WAAWvD,MAAM,UAC7Dd,MAAOmF,IAAY,GAAI5D,SAAUyG,GACjCvH,MAAO,CAACoI,WAAW,UAErB,cAAC,IAAD,CAAYxJ,GAAG,YAAYU,KAAK,YAAYoB,MAAM,YAAYC,YAAY,YACxEP,KAAK,QAAQL,UAAU,aAAa6D,QAAQ,WAAWvD,MAAM,UAC7Dd,MAAOoF,IAAa,GAAI7D,SAAUyG,GAClCvH,MAAO,CAACoI,WAAW,UACrB,eAAC,IAAD,WACD,cAAC,IAAD,wBACC,cAAC,IAAD,CAAQxJ,GAAG,aAAawB,KAAK,aAAawD,QAAQ,WAAWtE,KAAK,aAAaoB,MAAM,YAAYC,YAAY,wBAAyBZ,UAAU,aAAaR,MAAOqF,IAAc,GAAI9D,SAAUyG,GAAhM,SACCtJ,GAAiBiD,KAAI,SAACC,GAAD,OAAS,cAAC,IAAD,CAAU5B,MAAO4B,EAAIvE,UAArB,SAAiCuE,EAAIvE,oBAIpE,eAAC,IAAD,WACK,cAAC,IAAD,4BACJ,cAAC,IAAD,CAAQgC,GAAG,gBAAgBU,KAAK,gBAAgBoB,MAAM,gBAAgBC,YAAY,4BACjFZ,UAAU,aAAaK,KAAK,QAAQwD,QAAQ,WAAWrE,MAAOsF,IAAiB,GAAI/D,SAAUyG,GAD9F,SAEC9J,GAAoByD,KAAI,SAACC,GAAD,OAAS,cAAC,IAAD,CAAU5B,MAAO4B,EAAIxE,aAArB,SAAoCwE,EAAIxE,uBAOzE,eAAC,IAAD,WACG,cAAC,IAAD,4BACJ,cAAC,IAAD,CAAQiC,GAAG,cAAcU,KAAK,cAAcoB,MAAM,gBAAgBC,YAAY,4BAC7EZ,UAAU,aAAaK,KAAK,QAAQwD,QAAQ,WAAWrE,MAAOuF,IAAe,GAAIhE,SAAUyG,GAD5F,SAEC9J,GAAoByD,KAAI,SAACC,GAAD,OAAS,cAAC,IAAD,CAAU5B,MAAO4B,EAAIxE,aAArB,SAAoCwE,EAAIxE,uBAK1E,eAAC,IAAD,WACI,cAAC,IAAD,wBACJ,cAAC,IAAD,CAAQiC,GAAG,YAAYU,KAAK,YAAYoB,MAAM,gBAAgBC,YAAY,4BACzEZ,UAAU,aAAaK,KAAK,QAAQwD,QAAQ,WAAWrE,MAAOwF,IAAa,GAAIjE,SAAUyG,GAD1F,SAEC9J,GAAoByD,KAAI,SAACC,GAAD,OAAS,cAAC,IAAD,CAAU5B,MAAO4B,EAAIxE,aAArB,SAAoCwE,EAAIxE,uBAIxE,eAAC,IAAD,WACS,cAAC,IAAD,4BACE,eAAC,IAAD,CAASiC,GAAG,cAAcU,KAAK,cAAcoB,MAAM,qBAAqBC,YAAY,qBACnFP,KAAK,QAAQwD,QAAQ,WAAW7D,UAAU,aAAaR,MAAOyF,IAAe,GAAIlE,SAAUyG,GAD5F,UAEA,cAAC,IAAD,CAAUhI,MAAM,KAAhB,gBACA,cAAC,IAAD,CAAUA,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,MAAhB,iBACA,cAAC,IAAD,CAAUA,MAAM,OAAhB,wBAKJ,eAAC,IAAD,WACE,cAAC,IAAD,0BACE,eAAC,IAAD,CAASX,GAAG,cAAcU,KAAK,cAAcoB,MAAM,cAAcC,YAAY,cAC5EP,KAAK,QAAQwD,QAAQ,WAAW7D,UAAU,aAAaR,MAAO0F,IAAe,GAAInE,SAAUyG,GAD5F,UAEA,cAAC,IAAD,CAAUhI,MAAM,UAAhB,qBACA,cAAC,IAAD,CAAUA,MAAM,UAAhB,qBACA,cAAC,IAAD,CAAUA,MAAM,WAAhB,sBACA,cAAC,IAAD,CAAUA,MAAM,SAAhB,0BAIA,eAAC,IAAD,WACF,cAAC,IAAD,2BACE,eAAC,IAAD,CAASX,GAAG,eAAeU,KAAK,eAAeoB,MAAM,cAAcC,YAAY,cAC9EP,KAAK,QAAQwD,QAAQ,WAAW7D,UAAU,aAAaR,MAAO2F,IAAgB,GAAIpE,SAAUyG,GAD7F,UAEA,cAAC,IAAD,CAAUhI,MAAM,OAAhB,qBACA,cAAC,IAAD,CAAUA,MAAM,SAAhB,2BAGA,cAAC,IAAD,CAAQQ,UAAU,WAAWC,MAAO,CAACqE,UAAU,OAAO+D,WAAW,QAAShH,QAnKlE,WACxB8E,KAkKgB,oBACA,cAAC,IAAD,CAAQnG,UAAU,WAAWC,MAAO,CAACqE,UAAU,OAAO+D,WAAW,QAAShH,QA1IrE,WACvB,IAEEvD,IAAMyD,IAAN,UAAa1F,EAAOK,aAApB,2BAAmDL,EAAOG,WAAY,CACpE2I,YAAUC,aAAWC,cAAYC,iBAAeC,eAAaC,aAAUC,eAAaC,eAAaC,kBAGrG1D,IAAMC,QAAN,yBACD,MAAMC,GACPF,IAAMT,MAAM,8BACZnB,QAAQC,IAAI6B,EAAI3D,SAASC,QAgIL,gCAOhB,cAAC,IAAD,CACEwK,GAAI,CACFtI,OAAQ,IACRC,MAAO,OACP,yBAA0B,CACxBF,gBAAiB,UAAUI,MAAM,UAAUqG,WAAY,SAL7D,SASA,cAAC,IAAD,CAAgB2B,UAAWC,IAAOtI,MAlIjB,CAAC4G,aAAa,GAAIpG,OAAO,YAAYiD,SAAU,MAAO8E,UAAU,SAkIjF,SACA,qBAAKvI,MAAO,CAAEE,OAAQ,IAAKC,MAAO,QAAlC,SACE,cAAC,IAAD,aACE2D,KAAMkD,EACN1B,QAASA,EACTmD,SAAU,GACVC,mBAAoB,CAAC,IACrBC,mBAAmB,EACnBC,WAAY,CAAEC,QAASC,KAEvBC,WAxWe,SAACC,GAEpB3D,EAAW,UAAD,OAAW2D,EAAOhD,IAAIpH,GAAtB,gBAsW0BZ,mB,mDC/ZxC,4EAMaiL,EAAY,CACrB,CACIC,MAAM,YACNC,KAAK,aACLC,KAAK,cAAC,IAAD,IACLC,MAAM,YAEV,CACIH,MAAM,WACNC,KAAK,WACLC,KAAK,cAAC,IAAD,IACLC,MAAM,YAEV,CACIH,MAAM,YACNC,KAAK,YACLC,KAAK,cAAC,IAAD,IACLC,MAAM,YAEV,CACIH,MAAM,iBACNC,KAAK,iBACLC,KAAK,cAAC,IAAD,IACLC,MAAM,YAEV,CACIH,MAAM,UACNC,KAAK,WACLC,KAAK,cAAC,IAAD,IACLC,MAAM,c,2QC+LCC,IA9Mf,WAIE,MAAqBpM,mBAAS,IAA9B,mBAAOc,EAAP,KAAYiI,EAAZ,KAEMC,EAAQ,uCAAE,4BAAAtI,EAAA,sEACOC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,aADP,OACR8B,EADQ,OAEdkI,EAAQlI,EAASC,MAFH,2CAAF,qDAKhBW,qBAAU,WACRuH,MACC,IAEH,IAAMqD,EAAU,CAAClJ,MAAM,QAASqG,WAAW,OAAOzG,gBAAgB,UAAU4G,UAAU,UA6BtF,GA1BiBR,aAAW,SAACC,GAAD,MAAU,CACpCC,MAAO,CACLC,SAAS,KAIb+C,UAAU,GAIV9C,OAAO,CACLC,WAAW,OACXC,SAAS,MACTtG,MAAM,QACNJ,gBAAgB,OAChB2G,aAAa,GACXlD,QAAQ,QACRlD,OAAQ,OACRC,QAAS,OACToG,UAAU,aAKAC,GAEQ5J,mBAAS,KAA/B,mBAAMqC,EAAN,KAAYwH,EAAZ,KAEA,EAAkC7J,mBAAS,IAA3C,mBAAM8J,EAAN,KAAkBb,EAAlB,KAcAxH,qBAAU,cAER,IAEF,IAAM6K,EAAgB,SAAC5K,EAAGxC,EAAMC,GAC3B4K,OAAOC,QAAP,2DAAmE9K,EAAnE,qBAAqFC,EAArF,QACCwB,IAAMsJ,OAAN,UAAgBvL,EAAOK,aAAvB,uBAAkD2C,EAAlD,MACCI,MAAK,SAACjB,GACN6B,QAAQC,IAAI,qBAAsB9B,EAASC,SAE9CoJ,OAAM,SAAA1F,GACJ9B,QAAQmB,MAAMW,MAEdF,IAAMC,QAAN,UAAiBrF,EAAjB,+BACDmF,YAAW,kBAAI2E,MAAW,OAIzBd,EAAgB,WACpBxJ,EAAOC,aAAa,MACpB+D,QAAQC,IAAIjE,EAAOC,eAInB,OACE,qCAEA,cAAC,IAAD,IACA,gCACE,qBAAKkE,UAAU,QAEjB,cAAC,IAAD,CAAWe,SA3CE,SAAC1B,GAChB,GAAqB,IAAlBA,EAAEC,OAAOE,MAAY,CACtBwH,EAAS3H,EAAEC,OAAOE,OAClB,IAAMmI,EAAY1J,EAAK2J,QAAO,SAAAC,GAAC,OAAEC,OAAOC,KAAKF,GAAGG,MAAK,SAAAC,GAAC,OACpDC,OAAOL,EAAEI,IAAIE,cAAcC,SAAS/I,EAAEC,OAAOE,MAAM2I,qBACnD/B,EAAe,YAAIuB,SAEjBX,EAAS3H,EAAEC,OAAOE,OACnB0G,EAAQ,YAAIjI,KAmCkB2C,YAAY,SAASZ,UAAU,YAAY6D,QAAQ,WAAW8C,WAAW,OAAOnG,MAAM,QAAvH,eACA,cAAC,IAAD,CAAUH,KAAK,OAAOL,UAAU,kBAEhC,8BAEA,cAAC,IAAD,CAAgBsI,UAAWC,IAAOtI,MAhFjB,CAAC4G,aAAa,GAAIpG,OAAO,YAAYiD,SAAS,MAgF/D,SACA,eAAC,IAAD,CAAO1D,UAAU,eAAjB,UACU,cAAC,IAAD,UAEJ,eAAC,IAAD,WAC0B,cAAC,IAAD,CAAWC,MAAOuJ,EAAlB,iBACX,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,oBACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,sBACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,mBACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,yBACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,yBACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,2BACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,uBACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,yBACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,2BACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,kBACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,qBACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,yBAIT,gCAEKhK,EAAMkK,OAAS,EAAIzC,EAAY9F,KAAI,SAACwI,EAAKC,GAEtC,OACI,+BACI,qBAAIC,MAAM,MAAV,UAAiBD,EAAM,EAAvB,OACA,cAAC,IAAD,UAAaD,EAAKtN,QAClB,6BAAKsN,EAAKrN,UACV,6BAAKqN,EAAKpN,UACV,6BAAKoN,EAAKnN,WACV,6BAAKmN,EAAKjN,cACV,6BAAKiN,EAAK/M,eACV,6BAAK+M,EAAK9M,YACV,6BAAK8M,EAAK7M,cACV,6BAAK6M,EAAK5M,eACV,6BAAK4M,EAAK3M,aACV,6BAAM2M,EAAK1M,UACX,qBAAI+C,UAAU,UAAUC,MAAO,CAACG,MAAM,SAAtC,UAEF,cAAC,IAAD,CAAMyB,GAAE,kBAAa8H,EAAK9K,IAA1B,SACE,yBAAQmB,UAAU,gBAAgBqB,QAASgE,EAA3C,cAA8D,cAAC,IAAD,SAE9D,wBAAQrF,UAAU,kBAAmBqB,QAAS,kBAAKoI,EAAeE,EAAK9K,GAAI8K,EAAKtN,MAAMsN,EAAKrN,UAA3F,SAAsG,cAAC,IAAD,MAEtG,yBAAQ0D,UAAU,gBAAlB,UAAoC,cAAC,IAAD,IAApC,YApBK2J,EAAK9K,OA4CxBZ,EAAKkD,KAAI,SAACwI,EAAKC,GACb,OACI,+BACI,qBAAIC,MAAM,MAAV,UAAiBD,EAAM,EAAvB,OACA,6BAAKD,EAAKtN,QACV,6BAAKsN,EAAKrN,UACV,6BAAKqN,EAAKpN,UACV,6BAAKoN,EAAKnN,WACV,6BAAKmN,EAAKjN,cACV,6BAAKiN,EAAK/M,eACV,6BAAK+M,EAAK9M,YACV,6BAAK8M,EAAK7M,cACV,6BAAK6M,EAAK5M,eACV,6BAAK4M,EAAK3M,aACV,6BAAM2M,EAAK1M,UAEX,qBAAI+C,UAAU,UAAd,UAEE,cAAC,IAAD,CAAM6B,GAAE,kBAAa8H,EAAK9K,IAA1B,SACE,yBAAQmB,UAAU,gBAAgBqB,QAASgE,EAA3C,cAA+D,cAAC,IAAD,SAE/D,wBAAQrF,UAAU,kBAAmBqB,QAAS,kBAAKoI,EAAeE,EAAK9K,GAAI8K,EAAKtN,MAAMsN,EAAKrN,UAA3F,SAAsG,cAAC,IAAD,MACtG,wBAAQ0D,UAAU,gBAAlB,SAAoC,cAAC,IAAD,WApBnC2J,EAAK9K,sB,kSC2OvBiL,IA9Yf,WAEA,IAAMN,EAAU,CAAClJ,MAAM,QAASqG,WAAW,OAAOzG,gBAAgB,UAAU4G,UAAU,UAEhFiD,EAAU,CAACjD,UAAU,UAO3B,EAAmC3J,mBAAS,iBAA5C,mBAAO6M,EAAP,KAAmBC,EAAnB,KAEA,EAAgC9M,mBAAS,IAAzC,mBAAM+M,EAAN,KAAiBC,EAAjB,KACgBvN,GAAoEsN,EAA7EE,SAA6EF,EAApEtN,cAAaC,EAAuDqN,EAAvDrN,UAAUE,EAA6CmN,EAA7CnN,aAAaE,EAAgCiN,EAAhCjN,QAAQoN,EAAwBH,EAAxBG,UAAWC,EAAaJ,EAAbI,YA4DhEC,EAAsB,WACzBC,SAASC,eAAe,cAAcjL,MAAQ,GAC9C2K,EAAc,CAACD,aAAWtN,aAAa,MAU3C,EAA6BO,mBAAS,IAAtC,mBAAOuN,EAAP,KAAgBC,EAAhB,KAGQC,EAAiB,uCAAE,4BAAA/M,EAAA,sEACFC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,yBADE,OACjB8B,EADiB,OAEvB2M,EAAY3M,EAASC,MAFE,2CAAF,qDAKlB4M,EAAc,uCAAE,4BAAAhN,EAAA,sEACEC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,sBADF,OACb8B,EADa,OAEnB2M,EAAY3M,EAASC,MAFF,2CAAF,qDAKd6M,EAAiB,uCAAE,4BAAAjN,EAAA,sEACDC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,yBADC,OAChB8B,EADgB,OAEtB2M,EAAY3M,EAASC,MAFC,2CAAF,qDAKjB8M,EAAY,uCAAE,4BAAAlN,EAAA,sEACIC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,oBADJ,OACX8B,EADW,OAEjB2M,EAAY3M,EAASC,MAFJ,2CAAF,qDAMnBW,qBAAU,WACNoM,MAGD,IAIH,IAOMA,EAAc,WACA,iBAAbhB,GACCY,IAIa,aAAbZ,GACAa,IAGc,iBAAbb,GACDc,IAGc,WAAbd,GACDe,KAKFE,EAAmB,WAGrB,IAGoB,iBAAbjB,IAEKpN,GAGLkB,IAAM8D,KAAN,UAAc/F,EAAOK,aAArB,yBAAyD,CACzDU,eAAcyN,YAAWC,gBAEzBC,IACA9I,IAAMC,QAAQ,2BACdF,YAAW,kBAAIoJ,MAAoB,IAP9BnJ,IAAMT,MAAM,2BAeJ,aAAbgJ,IAEKnN,GAGJiB,IAAM8D,KAAN,UAAc/F,EAAOK,aAArB,sBAAsD,CAClDW,YAAWwN,YAAWC,gBAE1BC,IACA9I,IAAMC,QAAQ,2BACdF,YAAW,kBAAIqJ,MAAiB,IAP5BpJ,IAAMT,MAAM,2BAaH,iBAAbgJ,IACIjN,GAGJe,IAAM8D,KAAN,UAAc/F,EAAOK,aAArB,yBAAyD,CACrDa,eAAcsN,YAAWC,gBAE7BC,IACA9I,IAAMC,QAAQ,2BACdF,YAAW,kBAAIsJ,MAAoB,IAP/BrJ,IAAMT,MAAM,2BAaH,WAAbgJ,IACI/M,GAGJa,IAAM8D,KAAN,UAAc/F,EAAOK,aAArB,oBAAoD,CACpDe,UAASoN,YAAWC,gBAEpBC,IACA9I,IAAMC,QAAQ,2BACdF,YAAW,kBAAIuJ,MAAe,IAP1BtJ,IAAMT,MAAM,2BAevB,MAAMW,GACJF,IAAMT,MAAM,8BAChBnB,QAAQC,IAAI6B,EAAI3D,SAASC,QA+D1B,OACF,qCACA,cAAC,IAAD,IACA,gCACM,qBAAK+B,UAAU,QAEjB,cAAC,IAAD,CAAYY,YAAY,SAASZ,UAAU,YAAY6D,QAAQ,WAAW8C,WAAW,OAAOnG,MAAM,QAAlG,eACA,cAAC,IAAD,CAAUH,KAAK,OAAOL,UAAU,kBAEhC,gCACI,wBAAQA,UAAU,WAAWqB,QAnRZ,WACrB4I,EAAe,iBACfW,IACAL,KAgRI,6BACA,wBAAQvK,UAAU,WAAWqB,QA7Qf,WAClB4I,EAAe,aACfY,IACAN,KA0QI,yBACA,wBAAQvK,UAAU,WAAWqB,QAvQZ,WACrB4I,EAAe,iBACfa,IACAP,KAoQI,6BACA,wBAAQvK,UAAU,WAAWqB,QAjQf,WAClB4I,EAAe,WACfc,IACAR,KA8PI,0BAEJ,sBAAKvK,UAAU,cAAf,UACI,wBAAOA,UAAU,oBAAjB,oBAA6CgK,EAA7C,OACJ,cAAC,IAAD,CAAWpJ,YAAY,YACvB/B,GAAG,aACHU,KAAK,aACLc,KAAK,QACLwD,QAAQ,WACR8C,WAAW,OACXnG,MAAM,QACNO,SArQoB,SAAC1B,GAIL,iBAAb2K,GACCG,EAAc,2BAAID,GAAL,IAAgBtN,aAAayC,EAAEC,OAAOE,SAItC,aAAbwK,GACAG,EAAc,2BAAID,GAAL,IAAgBrN,UAAUwC,EAAEC,OAAOE,SAIlC,iBAAbwK,GACDG,EAAc,2BAAID,GAAL,IAAgBnN,aAAasC,EAAEC,OAAOE,SAIrC,WAAbwK,GACDG,EAAc,2BAAID,GAAL,IAAgBjN,QAAQoC,EAAEC,OAAOE,UAkPlDsB,UAAQ,EACRoK,WAAY,CAACjL,MAAO,CAAC2G,SAAU,GAAGD,WAAW,SAT7C,eAYA,yBAAQ3G,UAAU,WAAWqB,QAjMb,SAAChC,GAEjBA,EAAEiC,iBACF2J,KA8LA,UAAoD,cAAC,IAAD,CAAuBjL,UAAU,SAASC,MAAO,CAAEG,MAAO,GAAID,OAAQ,MAA1H,iBACA,yBAAQH,UAAU,WAAWqB,QAAS2J,EAAtC,UAAsD,cAAC,IAAD,CAA2BhL,UAAU,SAASC,MAAO,CAAEG,MAAO,GAAID,OAAQ,MAAhI,oBAIA,8BAEA,cAAC,IAAD,CAAgBmI,UAAWC,IAAOtI,MAtTjB,CAAC4G,aAAa,GAAIpG,OAAO,YAAYiD,SAAS,KAsT/D,SACA,eAAC,IAAD,CAAO1D,UAAU,eAAjB,UACU,cAAC,IAAD,UAEJ,eAAC,IAAD,WACe,cAAC,IAAD,CAAWC,MAAOuJ,EAAlB,iBACA,cAAC,IAAD,CAAWvJ,MAAOuJ,EAAlB,SAA8BQ,IAC9B,cAAC,IAAD,CAAW/J,MAAOuJ,EAAlB,sBACA,cAAC,IAAD,CAAWvJ,MAnUnB,CAACK,MAAM,QAASqG,WAAW,OAAOzG,gBAAgB,UAAU4G,UAAU,SAmU9D,yBAKT,gCAEC4D,EAASvJ,KAAI,SAACwI,EAAKC,GACpB,MAAgB,iBAAbI,EAEK,+BACA,qBAAIH,MAAM,MAAV,UAAiBD,EAAM,EAAvB,OACA,oBAAI3J,MAAO8J,EAAX,SAAwBJ,EAAK/M,eAC7B,oBAAIqD,MAAO8J,EAAX,SAAwBJ,EAAKU,YAC7B,mCAAK,yBAAQrK,UAAU,iBAAkBqB,QAAS,kBAlH/C,SAACxC,EAAGjC,GACxBsK,OAAOC,QAAP,kEAA0EvK,EAA1E,QACCkB,IAAMsJ,OAAN,UAAgBvL,EAAOK,aAAvB,mCAA8D2C,EAA9D,MACCI,MAAK,SAACjB,GACN6B,QAAQC,IAAI,qBAAsB9B,EAASC,SAE9CoJ,OAAM,SAAA1F,GACJ9B,QAAQmB,MAAMW,MAEdF,IAAMC,QAAN,UAAiB9E,EAAjB,+BACD4E,YAAW,kBAAIoJ,MAAoB,IAwGqCO,CAAoBxB,EAAK9K,GAAG8K,EAAK/M,eAAnF,UAAmG,cAAC,IAAD,IAAnG,cAAL,SAJS+M,EAAK9K,IASF,aAAbmL,EAEG,+BACA,qBAAIH,MAAM,MAAV,UAAiBD,EAAM,EAAvB,OACA,oBAAI3J,MAAO8J,EAAX,SAAwBJ,EAAK9M,YAC7B,oBAAIoD,MAAO8J,EAAX,SAAwBJ,EAAKU,YAC7B,mCAAK,yBAAQrK,UAAU,iBAAkBqB,QAAS,kBA/GlD,SAACxC,EAAGhC,GACvBqK,OAAOC,QAAP,kEAA0EtK,EAA1E,QACCiB,IAAMsJ,OAAN,UAAgBvL,EAAOK,aAAvB,gCAA2D2C,EAA3D,MACCI,MAAK,SAACjB,GACN6B,QAAQC,IAAI,qBAAsB9B,EAASC,SAE9CoJ,OAAM,SAAA1F,GACJ9B,QAAQmB,MAAMW,MAEdF,IAAMC,QAAN,UAAiB7E,EAAjB,+BACD2E,YAAW,kBAAIqJ,MAAiB,IAqG0CO,CAAiBzB,EAAK9K,GAAG8K,EAAK9M,YAAhF,UAA6F,cAAC,IAAD,IAA7F,cAAL,SAJS8M,EAAK9K,IASF,iBAAbmL,EAEC,+BACA,qBAAIH,MAAM,MAAV,UAAiBD,EAAM,EAAvB,OACA,oBAAI3J,MAAO8J,EAAX,SAAwBJ,EAAK5M,eAC7B,oBAAIkD,MAAO8J,EAAX,SAAwBJ,EAAKU,YAC7B,mCAAK,yBAAQrK,UAAU,iBAAkBqB,QAAS,kBA5G/C,SAACxC,EAAG9B,GAC1BmK,OAAOC,QAAP,kEAA0EpK,EAA1E,QACCe,IAAMsJ,OAAN,UAAgBvL,EAAOK,aAAvB,mCAA8D2C,EAA9D,MACCI,MAAK,SAACjB,GACN6B,QAAQC,IAAI,qBAAsB9B,EAASC,SAE9CoJ,OAAM,SAAA1F,GACJ9B,QAAQmB,MAAMW,MAEdF,IAAMC,QAAN,UAAiB3E,EAAjB,+BACDyE,YAAW,kBAAIsJ,MAAoB,IAkGuCO,CAAoB1B,EAAK9K,GAAG8K,EAAK5M,eAAnF,UAAmG,cAAC,IAAD,IAAnG,cAAL,SAJS4M,EAAK9K,IASF,WAAbmL,EAEC,+BACA,qBAAIH,MAAM,MAAV,UAAiBD,EAAM,EAAvB,OACA,oBAAI3J,MAAO8J,EAAX,SAAwBJ,EAAK1M,UAC7B,oBAAIgD,MAAO8J,EAAX,SAAwBJ,EAAKU,YAC7B,mCAAK,yBAAQrK,UAAU,iBAAkBqB,QAAS,kBAzGpD,SAACxC,EAAG5B,GACrBiK,OAAOC,QAAP,kEAA0ElK,EAA1E,QACCa,IAAMsJ,OAAN,UAAgBvL,EAAOK,aAAvB,8BAAyD2C,EAAzD,MACCI,MAAK,SAACjB,GACN6B,QAAQC,IAAI,qBAAsB9B,EAASC,SAE9CoJ,OAAM,SAAA1F,GACJ9B,QAAQmB,MAAMW,MAEdF,IAAMC,QAAN,UAAiBzE,EAAjB,+BACDuE,YAAW,kBAAIuJ,MAAe,IA+F4CO,CAAe3B,EAAK9K,GAAG8K,EAAK1M,UAA9E,UAAyF,cAAC,IAAD,IAAzF,cAAL,SAJS0M,EAAK9K,SAFlB,oB,kTCtWhBzC,EAAa,CACf2F,OAAO,GACPC,QAAS,GACTnF,UAAW,GACXD,aAAc,GACdqF,SAAU,GACVC,MAAO,GACPC,GAAI,GACJC,KAAM,GACNC,QAAS,GACTC,WAAY,GACZC,MAAO,GACPC,aAAc,GACdC,SAAU,GACVC,WAAY,GACZC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,WAAY,GACZC,QAAS,GACTC,QAAS,IACTC,QAAS,GACTC,aAAc,GACdC,UAAW,GACXC,QAAS,GACTC,MAAO,IACPC,YAAa,UA6bFC,IAvbD,WAEd,IAAMgI,EAAaC,iBAAO,MACpB,EAAsBrO,mBAASf,GAA/B,mBAAMgB,EAAN,KAAYC,EAAZ,KAEF,EAAwCF,mBAAS,IAAIG,MAArD,mBAGAyE,GAHA,UA4Be3E,EAzBf2E,QACAC,EAwBe5E,EAxBf4E,QACAnF,EAuBeO,EAvBfP,UACAD,EAsBeQ,EAtBfR,aACAqF,EAqBe7E,EArBf6E,SACAC,EAoBe9E,EApBf8E,MACAC,EAmBe/E,EAnBf+E,GACAC,EAkBehF,EAlBfgF,KACAC,EAiBejF,EAjBfiF,QACAC,EAgBelF,EAhBfkF,WACAC,EAeenF,EAffmF,MACAC,EAcepF,EAdfoF,aACAC,EAaerF,EAbfqF,SACAC,EAYetF,EAZfsF,WACAC,EAWevF,EAXfuF,QACAC,EAUexF,EAVfwF,WACAC,EASezF,EATfyF,WACAC,EAQe1F,EARf0F,WACAC,EAOe3F,EAPf2F,QACAC,EAMe5F,EANf4F,QACAC,EAKe7F,EALf6F,QACAC,EAIe9F,EAJf8F,aACAC,EAGe/F,EAHf+F,UACAC,EAEehG,EAFfgG,QACAC,EACejG,EADfiG,MACAC,EAAelG,EAAfkG,YAEA,EAA0CnG,mBAAS,UAAnD,mBAMJ,GANI,UAGiBK,cAGwBL,mBAAS,CAAC,CAAC,aAAe,2BAA2B,CAAC,aAAe,QAAQ,CAAC,aAAe,aAA1I,mBAAwBM,GAAxB,WAGA,GAA2CN,mBAAS,IAApD,qBAA0BQ,IAA1B,aAEMC,GAAqB,uCAAE,4BAAAC,EAAA,sEACJC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,yBADI,OACnB8B,EADmB,OAEzBL,GAAgBK,EAASC,MAFA,2CAAF,qDAQ3B,GAAqCd,mBAAS,IAA9C,qBAAuBgB,IAAvB,aAEMC,GAAkB,uCAAE,4BAAAP,EAAA,sEACDC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,sBADC,OAChB8B,EADgB,OAEtBG,GAAaH,EAASC,MAFA,2CAAF,qDASxB,GAA2Cd,mBAAS,IAApD,qBAA0BmB,IAA1B,aAEMC,GAAqB,uCAAE,4BAAAV,EAAA,sEACJC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,yBADI,OACnB8B,EADmB,OAGzBM,GAAgBN,EAASC,MAHA,2CAAF,qDAU3B,GAAwCd,mBAAS,IAAjD,qBAAqBsB,IAArB,aAEMC,GAAgB,uCAAE,4BAAAb,EAAA,sEACCC,IAAMC,IAAI,yCADX,OACdC,EADc,OAEpBS,GAAkBT,EAASC,MAFP,2CAAF,qDASZU,GAAoB,uCAAE,4BAAAd,EAAA,sEACLC,IAAMC,IAAN,UAAalC,EAAOK,aAApB,aADK,OACpB8B,EADoB,OAE1BP,EAAoBO,EAASC,MAFH,2CAAF,qDAK5BW,qBAAU,WACTD,KACAD,KACAH,KACAH,KACAR,OACE,IAGD,IAAOiB,GAAKC,cAALD,GAsBED,qBAAU,WAEHC,IACIf,IACHC,IADG,UACIlC,EAAOK,aADX,4BAC2C2C,KAC9CI,MAAK,SAACC,GACH7B,EAAS,eAAI6B,EAAKjB,KAAK,KACvBZ,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoBuF,QAASxD,YAAWD,EAAKjB,KAAK,GAAG0E,QAAS,mBACvEtF,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoBwF,WAAYzD,YAAWD,EAAKjB,KAAK,GAAG2E,WAAY,mBAC7EvF,GAAS,SAACD,GAAD,mBAAC,eAAaA,GAAd,IAAoB2F,QAAS5D,YAAWD,EAAKjB,KAAK,GAAG8E,QAAS,oBAExElH,EAAOI,aAAa,SACnBJ,EAAOI,aAAa,WAQ3B,CAAC4C,KAQd,IAmEA,GAAkC1B,mBAAS,IAAIG,MAA/C,qBAEA,IAFA,YAEqBH,mBAAS,CAACwF,KAA/B,qBAEA,IAFA,YAE4BxF,mBAAS,KAArC,qBAAesC,IAAf,aAEA,GAAqBtC,oBAAS,GAA9B,iCACAyB,qBAAU,WACNa,GAAYC,YAAO,IAAIpC,KAAO,iBAIhC,IAWDsB,qBAAU,cAET,CAACxB,IAEF,IAUKoG,GAAU,CAAC9C,QAAQ,GAAGN,MAAM,MAAMI,MAAM,OAAO6H,WAAW,OAE1DoD,GAAY,CAAC/K,QAAQ,GAAGN,MAAM,MAAMI,MAAM,QAWhD,GAAqCrD,oBAAS,GAA9C,iCAIA,OACI,gCAIG,qBAAK8C,MAAO,CAAEO,MAAO,QAAS6D,YAAY,SAA1C,SACA,cAAC,IAAD,CACEqH,QAAS,kBAAI,cAAC,IAAD,CAAQ1L,UAAU,WAAlB,6BACb2L,QAAS,kBAAKJ,EAAaK,SAAU5L,UAAU,qBAMhD,qBAAK6L,IAAKN,EAAV,SACA,eAAC,IAAD,CAAOhL,UAAW,GAAIN,MAlCb,CAAEE,OAAO,QAAQuD,SAAS,QAAQlD,MAAM,SAAUC,OAAO,YAAYP,gBAAgB,SAkC9F,UACA,oBAAIF,UAAU,YAAd,iCACA,qBAAKA,UAAU,mBACf,cAAC,IAAD,CAAMA,UAAU,mBAAhB,SACA,oBAAIA,UAAU,YAAd,mCAEA,sBAAKA,UAAU,SAAf,UACI,eAAC,IAAD,CAAMC,MAAOuD,GAAb,UAEI,uBAAOxD,UAAU,eAAjB,4BACA,wBAAOA,UAAU,cAAjB,cAAiC+B,GAAU,MAE3C,qBAAK/B,UAAU,SACf,uBAAOA,UAAU,eAAjB,2BACA,wBAAOA,UAAU,cAAjB,cAAiCgC,GAAW,MAC5C,uBAAOhC,UAAU,eAAeC,MAAO,CAACoI,WAAW,QAAnD,qBACA,wBAAOrI,UAAU,cAAjB,cAAiCoC,GAAQ,MAEzC,qBAAKpC,UAAU,SACf,uBAAOA,UAAU,eAAjB,0BACA,wBAAOA,UAAU,cAAjB,cAAiCnD,GAAa,SAKlD,eAAC,IAAD,CAAMoD,MAAOuD,GAAb,UAEI,uBAAOxD,UAAU,eAAjB,8BACA,wBAAOA,UAAU,cAAjB,cAAiCpD,GAAgB,MAEjD,qBAAKoD,UAAU,SACf,uBAAOA,UAAU,eAAjB,2BACA,wBAAOA,UAAU,cAAjB,cAAiCkC,GAAS,MAE1C,qBAAKlC,UAAU,SACf,uBAAOA,UAAU,eAAjB,0BACA,uBAAOA,UAAU,cAAjB,SAAgCmC,GAAM,QAG1C,eAAC,IAAD,CAAMlC,MAAOuD,GAAb,UAEI,uBAAOxD,UAAU,eAAjB,0BACA,wBAAOA,UAAU,cAAjB,cAAiCiC,GAAY,MAC7C,qBAAKjC,UAAU,SAEf,uBAAOA,UAAU,eAAjB,0BACA,wBAAOA,UAAU,cAAjB,cAAiCqC,GAAW,MAE5C,qBAAKrC,UAAU,SACf,uBAAOA,UAAU,eAAjB,6BACA,wBAAOA,UAAU,cAAjB,cAAiCsC,GAAc,YAKvD,cAAC,IAAD,CAAMtC,UAAU,mBAAhB,SACA,oBAAIA,UAAU,YAAd,4BAGA,sBAAKA,UAAU,SAAf,UACI,sBAAKC,MAAOuD,GAAZ,UAEI,uBAAOxD,UAAU,eAAjB,6BACA,wBAAOA,UAAU,cAAjB,cAAiCuC,GAAS,MAE1C,qBAAKvC,UAAU,SACf,uBAAOA,UAAU,eAAjB,6BACA,uBAAOA,UAAU,cAAjB,SAAgCwC,GAAgB,KAEhD,qBAAKxC,UAAU,SACf,uBAAOA,UAAU,eAAjB,mCACA,wBAAOA,UAAU,cAAjB,cAAiC0C,GAAc,MAE/C,qBAAK1C,UAAU,SACf,uBAAOA,UAAU,eAAjB,oCACA,wBAAOA,UAAU,cAAjB,cAAiC2C,GAAW,MAE5C,qBAAK3C,UAAU,SACf,uBAAOA,UAAU,eAAjB,mCACA,wBAAOA,UAAU,cAAjB,cAAiC4C,GAAc,SAInD,sBAAK3C,MAlHC,CAACS,QAAQ,GAAGN,MAAM,MAAMI,MAAM,QAkHpC,UACI,uBAAOR,UAAU,eAAjB,uCACA,wBAAOA,UAAU,gBAAjB,cAAmCyC,GAAY,MAC/C,qBAAKzC,UAAU,SACf,uBAAOA,UAAU,eAAjB,oCACA,uBAAOA,UAAU,cAAjB,SAAgCyC,GAAY,WAKpD,cAAC,IAAD,CAAMzC,UAAU,mBAAhB,SACA,oBAAIA,UAAU,YAAd,yBAGA,sBAAKA,UAAU,SAAf,UACI,sBAAKC,MAAOwL,GAAZ,UAEI,uBAAOzL,UAAU,eAAjB,2BACA,wBAAOA,UAAU,cAAjB,cAAiC6C,GAAc,MAE/C,uBAAO7C,UAAU,eAAcC,MAAO,CAACoI,WAAW,QAAlD,2BACA,uBAAOrI,UAAU,cAAjB,SAAgC8C,GAAc,KAE9C,qBAAK9C,UAAU,SACf,uBAAOA,UAAU,eAAjB,mCACA,wBAAOA,UAAU,cAAjB,cAAiC+C,GAAW,MAE5C,qBAAK/C,UAAU,SACf,uBAAOA,UAAU,eAAjB,iCACA,wBAAOA,UAAU,cAAjB,cAAiCgD,GAAW,MAC5C,qBAAKhD,UAAU,SACf,uBAAOA,UAAU,eAAjB,kCACA,wBAAOA,UAAU,cAAjB,cAAiCmD,GAAa,MAC9C,qBAAKnD,UAAU,SACf,uBAAOA,UAAU,eAAjB,mCACA,wBAAOA,UAAU,cAAjB,cAAiCkD,GAAgB,SAGrD,sBAAKjD,MAAOwL,GAAZ,UACI,uBAAOzL,UAAU,eAAjB,kCACA,wBAAOA,UAAU,cAAjB,cAAiCiD,GAAW,MAE5C,qBAAKjD,UAAU,SACf,uBAAOA,UAAU,eAAjB,gCACA,wBAAOA,UAAU,cAAjB,cAAiCqD,GAAS,SAI9C,sBAAKpD,MAAOwL,GAAZ,UAEI,uBAAOzL,UAAU,eAAjB,wBACA,wBAAOA,UAAU,cAAjB,cAAiCoD,GAAW,MAC5C,qBAAKpD,UAAU,SAEf,uBAAOA,UAAU,eAAjB,6BACA,wBAAOA,UAAU,cAAjB,cAAiCsD,GAAe,uB,iKC5epE,W,0eCyFewI,EA5EC,WACZ,IASA,EAA0B3O,mBAAS,IAAIG,MAAvC,6BACA,OACI,8BAGA,eAACyO,EAAA,EAAD,WAGQ,cAACA,EAAA,EAAD,CAAMhM,MAAM,SAAZ,SAEI,sBAAKC,UAAU,OAAf,UACA,qBAAKA,UAAU,SACf,sBAAKA,UAAU,aAAf,UACA,cAACgM,EAAA,EAAD,CAAQ/L,MArBN,CAACC,gBAAgB,QAAQC,OAAO,OAAOC,MAAM,QAqBnBJ,UAAU,aAAtC,SACA,mCAAM,cAAC,IAAD,CAAaK,KAAK,OAAOC,MAAM,YAArC,SAGA,uBAAON,UAAU,SAAjB,6BAEA,qBAAKA,UAAU,cAKnB,eAACuI,EAAA,EAAD,CAAOhI,UAAW,GAAIN,MAjCjB,CAAEE,OAAO,OAAOC,MAAM,MAAMI,MAAM,SAAUC,OAAO,YAAYP,gBAAgB,SAiCpF,UACA,sBAAKD,MAhCD,CAACS,QAAQ,GAAGN,MAAM,MAAMI,MAAM,QAgClC,UAKQ,cAACyL,EAAA,EAAD,CAAYtL,MAAM,cAAcC,YAAY,cAAcC,WAAS,EAACb,UAAU,WAAW4D,SAAS,SACtG,qBAAK5D,UAAU,SACf,cAACiM,EAAA,EAAD,CAAYtL,MAAM,gBAAgBC,YAAY,gBAAgBC,WAAS,EAAEb,UAAU,WAAW4D,SAAS,SACvG,qBAAK5D,UAAU,SACf,cAACiM,EAAA,EAAD,CAAYtL,MAAM,SAASC,YAAY,SAASC,WAAS,EAAEb,UAAU,WAAW4D,SAAS,SACzF,qBAAK5D,UAAU,YAEnB,sBAAKC,MA3CD,CAACS,QAAQ,GAAGN,MAAM,MAAMI,MAAM,SA2ClC,UAGI,cAACyL,EAAA,EAAD,CAAYtL,MAAM,UAAUC,YAAY,UAAUC,WAAS,EAAEb,UAAU,UAAU4D,SAAS,SAC1F,qBAAK5D,UAAU,SACf,gCACI,wBAAQiB,KAAK,SAASjB,UAAU,WAAWC,MA7CpD,CAACG,MAAM,QAAQI,MAAM,SA6CZ,oBACA,eAAC,IAAD,CAAMqB,GAAG,IAAT,UACA,sBAAM0C,IAAI,aAAaC,KAAK,uFAE5B,yBAAQvD,KAAK,SAASjB,UAAU,WAAWC,MAhDpD,CAACG,MAAM,QAAQI,MAAM,QAgDZ,cAA0D,mBAAGsB,MAAM,eAAnE,oBAMA,qBAAK9B,UAAU,qB,4DCxCxBkM,MAVf,WACE,OACE,qCACF,cAACC,EAAA,EAAD,IACE,8C,kBCcWC,MA/Bf,WACE,OACC,mCACA,cAAC,IAAD,UACA,sBAAKpM,UAAU,MAAf,UACA,cAAC,IAAD,CAAgBqM,SAAS,cAGtB,eAAC,IAAD,WAEG,cAAC,IAAD,CAAOC,OAAK,EAAClD,KAAK,IAAImD,QAAS,cAAC9H,EAAA,EAAD,MAC/B,cAAC,IAAD,CAAO2E,KAAK,YAAYmD,QAAS,cAACrP,EAAA,EAAD,MACjC,cAAC,IAAD,CAAOkM,KAAK,cAAcmD,QAAS,cAACrP,EAAA,EAAD,MAEnC,cAAC,IAAD,CAAOkM,KAAK,aAAamD,QAAS,cAAC,EAAD,MAElC,cAAC,IAAD,CAAOnD,KAAK,aAAcmD,QAAS,cAACnH,EAAA,EAAD,MACnC,cAAC,IAAD,CAAOgE,KAAK,WAAWmD,QAAS,cAAChJ,EAAA,EAAD,MAChC,cAAC,IAAD,CAAO6F,KAAK,kBAAkBmD,QAAS,cAAChJ,EAAA,EAAD,MACvC,cAAC,IAAD,CAAO6F,KAAK,YAAYmD,QAAS,cAAChD,EAAA,EAAD,MACjC,cAAC,IAAD,CAAOH,KAAK,WAAWmD,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOnD,KAAK,iBAAiBmD,QAAS,cAACzC,EAAA,EAAD,MACtC,cAAC,IAAD,CAAOV,KAAK,aAAamD,QAAS,cAACC,EAAA,EAAD,iBCvB5BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1N,MAAK,YAAkD,IAA/C2N,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3C,SAASC,eAAe,SAM1BgC,K,iJCqFeN,IA1Ff,WACA,MAA4BhP,oBAAS,GAArC,mBAAOiQ,EAAP,KAAgBC,EAAhB,KACMC,EAAY,kBAAID,GAAYD,IAClC,EAAqBjQ,oBAAS,GAA9B,mBAAOoQ,EAAP,KACA,GADA,KACoBpQ,mBAAS,WAA7B,mBAOE,OAPF,UAUK,qBAAK6C,UAAU,SAAf,SAEQ,eAAC,IAAYwN,SAAb,CAAsBhO,MAAO,CAACc,MAAM,QAApC,UAET,sBAAKN,UAAU,SAAf,UAGI,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CAAM6B,GAAG,IAAI7B,UAAU,YAAvB,SACA,cAAC,IAAD,CAAgBA,UAAU,aAAaqB,QAASiM,QAGxD,sBAAKtN,UAAU,cAAf,UACA,cAAC,IAAD,CAAM6B,GAAG,IAAT,SACA,cAAC,IAAD,CAAkB7B,UAAU,cAE1B,uBAAOA,UAAU,YAAjB,SAA+BnE,EAAOG,kBAKvCuR,GAAQ,qBAAMvN,UAAU,eAAhB,SAER,gDAcD,qBAAKA,UAAWoN,EAAU,kBAAmB,WAA7C,SAEI,qBAAIpN,UAAU,iBAAiBqB,QAASiM,EAAxC,UACG,oBAAItN,UAAU,eAAd,SACC,cAAC,IAAD,CAAM6B,GAAG,IAAI7B,UAAU,YAAvB,SACA,cAAC,IAAD,QAICkJ,IAAY/H,KAAI,SAACwI,EAAKC,GACnB,OAEI,qBAAK5J,UAAU,UAAf,SACC,oBAAgBA,UAAW2J,EAAKL,MAAhC,SACI,eAAC,IAAD,CAAMzH,GAAI8H,EAAKP,KAAf,UACKO,EAAKN,KACN,+BAAOM,EAAKR,YAHXS,qB","file":"static/js/main.3a4a1c11.chunk.js","sourcesContent":["global.User_retrive=\"No\"\r\nglobal.Navbarclick=\"No\"\r\nglobal.employeid=\"\"\r\nglobal.task_retrive=\"No\"\r\nglobal.DB_HOST_PORT=\"http://localhost:5000\"","import React, { useState,useEffect } from 'react';\r\nimport { Avatar, Grid,Paper, TextField,Select, MenuItem,FormControl,InputLabel } from \"@mui/material\";\r\nimport { AiTwotoneHome } from 'react-icons/ai';\r\nimport { GiArchiveRegister } from 'react-icons/gi';\r\nimport \"./Register.css\";\r\nimport { Form,Button,Checkbox,Input,Space } from \"antd\";\r\nimport DatePicker from 'react-date-picker';\r\nimport { red } from \"@mui/material/colors\";\r\nimport { width } from \"@mui/system\";\r\nimport { HomeOutlined  } from \"@ant-design/icons\"\r\n import { format } from \"date-fns\";\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport { Calendar } from 'react-date-range';\r\nimport Moment from 'moment';\r\nimport dateFormat from 'dateformat';\r\nimport '../GlobalVariables'\r\nimport '../cssdesign/Button.css'\r\n\r\nimport {useNavigate as useHistory,useParams, Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport {Dropdown,DropdownToggle,DropdownMenu,DropdownItem} from \"reactstrap\"\r\n\r\nvar onsubmittxtCheck=\"No\";\r\n\r\n\r\nconst initialState={\r\n    empid:\"\", \r\n    empname:\"\",\r\n    emailid:\"\", \r\n    mobileno:\"\", \r\n    password:\"\", \r\n    designation:\"\", \r\n    dob:\"\", \r\n    designsector:\"\", \r\n    perimeter:\"\", \r\n    responsible:\"\", \r\n    worklocation:\"\", \r\n    leadaccess:\"\", \r\n    company:\"\",\r\n    \r\n };\r\n \r\n\r\n\r\nconst Register=()=>{\r\n\r\n\r\n    \r\n    // let arraydesignation = [\r\n    //     { \"designsector\": \"Engineer\" },\r\n    //     { \"designsector\": \"Boss\" },\r\n    //     { \"designsector\": \"Super Boss  \" }\r\n    // ]\r\n\r\n    let [fruit, setFruit] = useState(\"⬇️ Select a fruit ⬇️\")\r\n    let handleFruitChange = (e) => {\r\n        setFruit(e.target.value)\r\n      }\r\n\r\n\r\n    const[state,setState]=useState(initialState);\r\n\r\n    const [dobvalue, dobonChange] = useState(new Date());\r\n\r\n    const {empid,empname,emailid,mobileno, password, designation, dob, designsector, perimeter, responsible, worklocation, leadaccess, company}=state;\r\n    \r\n    const[selecteddesignation,setDesignation]=useState(\"Selete\")\r\n    \r\n\r\n    const navigate = useHistory();\r\n\r\n   \r\nconst [arraydesignation,setArrayDesignation]=useState([{\"designsector\":\"Electrical & Electronic\"},{\"designsector\":\"LEAD\"},{\"designsector\":\"Worker\"}]);\r\n\r\n// TODO:Start *** designsector Retrive Functions ***\r\nconst[designsectorRetrive,setdesignsector]=useState([]);\r\n\r\nconst Arry_loaddesignsector= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/designsectorget`);\r\n    setdesignsector(response.data);\r\n\r\n}\r\n// Complete *** designsector Retrive Functions ***\r\n\r\n// TODO:Start *** perimeter Retrive Functions ***\r\nconst[perimeterRetrive,setperimeter]=useState([]);\r\n\r\nconst Arry_loadperimeter= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/perimeterget`);\r\n    setperimeter(response.data);\r\n\r\n}\r\n// Complete *** perimeter Retrive Functions ***\r\n \r\n\r\n// TODO:Start *** worklocation Retrive Functions ***\r\nconst[worklocationRetrive,setWorklocation]=useState([]);\r\n\r\nconst Arry_loadworklocation= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/worklocationget`);\r\n    setWorklocation(response.data);\r\n\r\n}\r\n// Complete *** worklocation Retrive Functions ***\r\n\r\n\r\n// TODO:Start *** company Retrive Functions ***\r\nconst[companyRetrive,setCompanyRetrive]=useState([]);\r\n\r\nconst Arry_loadCompany= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/companyget`);\r\n    setCompanyRetrive(response.data);\r\n\r\n}\r\n\r\n// Complete *** company Retrive Functions ***\r\n\r\n\r\n    const loadarraydesignation= async() =>{\r\n      const response=await axios.get(`${global.DB_HOST_PORT}/api/get`);\r\n      setArrayDesignation(response.data);\r\n      //setDataSource(response.data);\r\n  }\r\n  useEffect(() => {\r\n   loadarraydesignation();\r\n   Arry_loadCompany();\r\n   Arry_loadworklocation();\r\n   Arry_loadperimeter();\r\n   Arry_loaddesignsector();\r\n  }, []);\r\n   \r\n   \r\n    const{ id }=useParams();\r\n    \r\n\r\n    const triggerDateChange = (e)=> {\r\n        // alert(e.target.value)\r\n       \r\n               setDateField(e.target.value )\r\n               setState((state)=>({...state,dob:e.target.value}));\r\n        //setState({...state,dob:e.target.value});\r\n            \r\n              Check2()\r\n        }\r\n\r\n        const [dateField, setDateField] = useState(\"\");\r\n       \r\n\r\n\r\n       \r\n             useEffect(()=>{\r\n\r\n                if (id) {\r\n                        axios\r\n                    .get(`${global.DB_HOST_PORT}/api/get/${id}`)\r\n                    .then((resp) => {\r\n                        setState({...resp.data[0]})\r\n                        setDateField(dateFormat(resp.data[0].dob, 'yyyy-mm-dd') ) \r\n                    if(global.User_retrive=\"Yes\"){\r\n                        global.User_retrive=\"No\"\r\n                       // dobonChange(resp.data[0].dob) \r\n                    }\r\n                       \r\n                        \r\n\r\n                        })\r\n                \r\n            }  },[id]);\r\n      \r\n\r\n\r\n   \r\n   \r\n \r\n\r\n    const handleSubmit= (e) =>{\r\n       \r\n        e.preventDefault();  \r\n          \r\n        if(!empid || !empname || !emailid || !mobileno || !password || !designation || !designsector \r\n              || !perimeter ||!responsible || !worklocation || !leadaccess || !company){\r\n             toast.error(\"Please fill all input field\")\r\n             onsubmittxtCheck=\"Yes\"\r\n          \r\n            \r\n        }else{\r\n            if(!dob  ){\r\n                               toast.error(\"Please Reselect DOB\")\r\n            }else{\r\n                DOB_Database_Format()\r\n     if(!id){\r\n         try{\r\n            axios.post(`${global.DB_HOST_PORT}/api/post`,{\r\n                empid,\r\n                empname,\r\n                emailid,\r\n                mobileno, \r\n                password, \r\n                designation, \r\n                dob, \r\n                designsector, \r\n                perimeter, \r\n                responsible, \r\n                worklocation, \r\n                leadaccess, \r\n                company,\r\n                })\r\n                toast.success(\"Sucessfully Registered \");\r\n                setTimeout(()=> navigate(\"/\"),100);\r\n\r\n         }catch(err){\r\n            toast.error(\"Can't Reach your Server!!!\")\r\n        console.log(err.response.data);\r\n        }}else{\r\n            try{\r\n\r\n                axios.put(`${global.DB_HOST_PORT}/api/updateuserlist/${id}`,{\r\n                    empid,\r\n                empname,\r\n                emailid,\r\n                mobileno, \r\n                password, \r\n                designation, \r\n                dob, \r\n                designsector, \r\n                perimeter, \r\n                responsible, \r\n                worklocation, \r\n                leadaccess, \r\n                company,\r\n                }) \r\n              \r\n                setTimeout(()=> navigate(\"/\"),100);\r\n                toast.success(`Contact updated sucessfully ${id}`);\r\n\r\n            }catch(err){\r\n            toast.error(\"Can't Reach your Server!!!\")\r\n        console.log(err.response.data);\r\n        }\r\n    \r\n\r\n        }\r\n    \r\n    }\r\n    \r\n        }\r\n    };\r\n\r\n    const handleSubmit1= (e) =>{\r\n        e.preventDefault();\r\n        // if(!empid || !empname){\r\n        //     toast.error(\"Please fill all input field\")\r\n        // } else {\r\n            axios.post(`${global.DB_HOST_PORT}/api/post1`,{empid, empname, emailid, mobileno,dob}\r\n               \r\n            ).then(()=>{\r\n                setState({empid:\"\",empname:\"\",emailid:\"\"});\r\n            }).catch((err)=>toast.error(err.response.data));\r\n            //  navigate(\"/\");\r\n           toast.success(\"Contact added sucessfully\");\r\n           // setTimeout(()=> navigate(\"/\"),100);\r\n        // }\r\n              \r\n    };\r\n\r\n    const handleInputChange=(e) =>{\r\n       const {name,value}=e.target;\r\n        setState({...state,[name]:value});\r\n        // console.log(e.target.value);\r\n       //  console.log(e.target.id);\r\n    \r\n        \r\n    };\r\n\r\n   \r\n  \r\n    \r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    const [date,setDate]=useState([dob]);\r\n\r\n    const[calender,setCalender]=useState(\"\")\r\n\r\n    const[open, setOpen]=useState(false)\r\n    useEffect(()=>{\r\n        setCalender(format(new Date(),'dd/MM/yyyy'))\r\n        // document.addEventListener(\"keydown\",hideOnEscape,true)\r\n        // document.addEventListener(\"click\",hideOnClickOutside,true)\r\n        \r\n    },[])\r\n    const handleSelect=(date)=>{\r\n        setCalender(format(date,\"dd/MM/yyyy\"))\r\n          //  console.log(date); // native Date object\r\n          }\r\n\r\n\r\n\r\n    const handledate=(e)=>{\r\n             const getNewDate=e.target.value;\r\n      setDate(getNewDate);\r\n  \r\n     }\r\n   \r\n     const DOB_Database_Format=()=>{\r\n              setState({...state,dob:dateFormat(dob,\"yyyy-mm-dd\")});\r\n              setState({...state,empid:2027357});\r\n        // console.log(dob);\r\n        // console.log(state.empid);\r\n        // console.log(global.User_retrive);\r\n     }\r\n\r\n     useEffect(()=>{\r\n       // console.log(state);\r\n    },[state])\r\n\r\n     const Check2=()=>{\r\n        console.log(state);\r\n        //console.log(arraydesignationNew);\r\n       // setArrayDesignation([\"Enginner\",\"Senior\",\"Lead\",\"Subsenior\"])\r\n     }\r\n    \r\n    const handleDOBchange=(e) =>{\r\n      \r\n        const Getdate=dateFormat(dobvalue,\"yyyy-mm-dd\");\r\n        \r\n        setState({...state,dob:Getdate});\r\n        console.log(Getdate);\r\n        console.log(dob);\r\n\r\n        // handleSubmit(e);\r\n\r\n        //console.log(dobvalue);\r\n        //const localDate = dobvalue.toLocaleDateString();\r\n         \r\n          //console.log(localDate);\r\n        \r\n     };\r\n   \r\n   function button_function(){\r\n    \r\n    setState({...state,dob:dob});\r\n    console.log(dob);\r\n    console.log(dobvalue);\r\n    console.log(id);\r\n    \r\n   }\r\n     \r\n    const paperStyle={ height:'85vh',width:'80%',float:'center' ,margin:\"20px auto\",backgroundColor:\"white\"}\r\n    const avatarStyle={backgroundColor:'white',height:'70px',width:'70px'}\r\n    const bodyMovel={padding:30,width:'50%',float:'left'  }\r\n    const bodyMover={padding:30,width:'50%',float:'right'  }\r\n\r\n    const dobl={padding:5,width:'60px',float:'left'  }\r\n    const dobr={width:'auto',float:'left'  }\r\n    const btnl={width:'150px',float:'right'  }\r\n    const btnr={width:'150px',float:'left'  }\r\n\r\n    const [dropdownOpen,setDropdownOpen]=useState(false);\r\n    const toggle=()=>setDropdownOpen(prevState=>!prevState);\r\n\r\n   \r\n    return(\r\n        <div>\r\n            \r\n      \r\n        <Grid>\r\n            \r\n            \r\n                <Grid align=\"center\">\r\n                    \r\n                    <div className=\"div1\">\r\n                    <div className=\"Gap1\"></div>\r\n                    <div className=\"Title-text\">\r\n                    <Avatar style={avatarStyle} className=\"Title-text\" >                    \r\n                    <h2 > <GiArchiveRegister size=\"40px\" color=\"#03364b\"/> </h2> \r\n                    </Avatar>                     \r\n                    <label className=\"label1\" > New User Registration</label>   \r\n                    </div>\r\n                    <div className=\"Gap1\"></div>\r\n                    \r\n                    </div>\r\n                        \r\n                </Grid>\r\n                <Paper elevation={20} style={paperStyle}>        \r\n                <div style={bodyMovel}>\r\n                    {/* <Form.Item name=\"fullname\" label=\"Full name\">\r\n                        <Input placeholder=\"Type Your Name\"/>\r\n                    </Form.Item> */}\r\n                    \r\n                        <TextField \r\n                        \r\n                        id='empid' \r\n                        name='empid' \r\n                        label='Employee ID' \r\n                        placeholder=\"Employee ID\" \r\n                        fullWidth \r\n                        required \r\n                        className=\"TextUser\" \r\n                        value={empid || \"\"}\r\n                        onChange={handleInputChange}\r\n                        error={!empid && onsubmittxtCheck==\"Yes\"} \r\n                       \r\n                        />\r\n\r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <TextField \r\n                    id='empname' \r\n                    name='empname'  \r\n                    label='Employee Name' \r\n                    placeholder=\"Employee Name\" \r\n                    fullWidth \r\n                    required \r\n                    className=\"TextUser\" \r\n                    value={empname || \"\"}\r\n                    onChange={handleInputChange}\r\n                    error={!empname}/>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    \r\n                    <TextField \r\n                    id='emailid' \r\n                    name='emailid'  \r\n                    label='Email Id' \r\n                    placeholder=\"Email Id\" \r\n                    fullWidth required \r\n                    className=\"TextUser\" \r\n                    value={emailid || \"\"}\r\n                    onChange={handleInputChange}/>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <TextField \r\n                    id='mobileno' \r\n                    name='mobileno' \r\n                    label='Mobile No.' \r\n                    placeholder=\"Mobile No.\" \r\n                    fullWidth \r\n                    required \r\n                    className=\"TextUser\"\r\n                    value={mobileno || \"\"} \r\n                    onChange={handleInputChange}/>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <TextField \r\n                    id='password' \r\n                    name='password' \r\n                    label='New Password' \r\n                    placeholder=\" New Password\" \r\n                    type=\"password\" \r\n                    fullWidth \r\n                    required \r\n                    value={password || \"\"} \r\n                    onChange={handleInputChange}/>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n\r\n                        {/* <TextField  \r\n                        label='Confirm Password' \r\n                        placeholder=\" Confirm Password\" \r\n                        type=\"password\" \r\n                        fullWidth \r\n                        required                   \r\n                        onChange={handleInputChange}/>\r\n\r\n                        <div className=\"Gap2\"></div> */}\r\n\r\n                    <TextField \r\n                    id='designation' \r\n                    name='designation' \r\n                    label='Designation' \r\n                    placeholder=\"Designation\" \r\n                    fullWidth \r\n                    required \r\n                    className=\"TextUser\" \r\n                    value={designation || \"\"} \r\n                    onChange={handleInputChange}/>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                   \r\n                    <div>                    \r\n                    <InputLabel style={dobl} >DOB*</InputLabel>\r\n                    <FormControl style={dobr}>                                      \r\n                    \r\n                    <input type=\"date\" id=\"dob\" name=\"dob\" placeholder=\"yyyy-mm-dd\" value={dateField} onChange={(e)=>triggerDateChange(e)}className=\"DatePicker\"/>\r\n                 \r\n{/*               \r\n                    <DatePicker \r\n                    id='dob' \r\n                    name='dob' \r\n                    // onChange={(e)=>handledate(e)}\r\n                    onChange={dobonChange} \r\n                    value={dobvalue }  \r\n                    format=\"dd-MM-yyyy\" \r\n                    showWeekNumbers=\"false\" \r\n                    fullWidth \r\n                    onCalendarClose={handleDOBchange} /> */}\r\n\r\n\r\n                    </FormControl >\r\n                    </div>\r\n                </div>\r\n                <div style={bodyMover}> \r\n\r\n                    {/* <TextField \r\n                    id='designsector' \r\n                    name='designsector' \r\n                    label='Design Sector' \r\n                    placeholder=\"Design Sector\" \r\n                    fullWidth \r\n                    required \r\n                    className=\"TextUser\" \r\n                    value={designsector || \"\"} \r\n                    onChange={handleInputChange}/> */}\r\n\r\n                    \r\n                    <FormControl fullWidth>                                      \r\n                    <InputLabel>Design Sector*</InputLabel>\r\n                    <Select id='designsector' name='designsector' label='Design Sector' placeholder=\"Select your Design Sector\"  fullWidth required className=\"TextUser\" value={designsector || \"\"} onChange={handleInputChange}  >\r\n                    {designsectorRetrive.map((val) => <MenuItem value={val.designsector}>{val.designsector}</MenuItem>)}\r\n                                        \r\n                    </Select>                    \r\n                    </FormControl>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    {/* <TextField id='perimeter' name='perimeter' label='Perimeter' \r\n                    placeholder=\"Perimeter\"  fullWidth  required className=\"TextUser\" \r\n                    value={perimeter || \"\"} onChange={handleInputChange}/> */}\r\n\r\n                    <FormControl fullWidth>                                      \r\n                    <InputLabel>Perimeter*</InputLabel>\r\n                    <Select id='perimeter' name='perimeter' label='Perimeter' placeholder=\"Select your Perimeter\"  fullWidth required className=\"TextUser\" value={perimeter || \"\"} onChange={handleInputChange}  >\r\n                    {perimeterRetrive.map((val) => <MenuItem value={val.perimeter}>{val.perimeter}</MenuItem>)}\r\n                                        \r\n                    </Select>                    \r\n                    </FormControl>\r\n                  \r\n\r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <TextField id='responsible' name='responsible' label='Responsible' placeholder=\"Responsible Component\" fullWidth required className=\"TextUser\"  value={responsible || \"\"}  onChange={handleInputChange}/>\r\n                    <div className=\"Gap2\"></div>\r\n                    {/* <TextField id='worklocation' name='worklocation' label='Work Location' placeholder=\"Work Location\" fullWidth required className=\"TextUser\" value={worklocation || \"\"} onChange={handleInputChange}/> */}\r\n                    <FormControl fullWidth>                                      \r\n                  <InputLabel>Work Location*</InputLabel>\r\n                    <Select id='worklocation' name='worklocation' label='Work Location' placeholder=\"Select your WorkLocation\"  fullWidth required className=\"TextUser\" value={worklocation || \"\"} onChange={handleInputChange}  >\r\n                    {worklocationRetrive.map((val) => <MenuItem value={val.worklocation}>{val.worklocation}</MenuItem>)}\r\n                                        \r\n                    </Select>                    \r\n                    </FormControl>\r\n                    \r\n                   \r\n                    <div className=\"Gap2\"></div>   \r\n                    <FormControl fullWidth>                                      \r\n                  <InputLabel>Lead Access*</InputLabel>\r\n                    <Select  id='leadaccess' name='leadaccess' label='Lead Access' placeholder=\"Do you want Lead Access\" fullWidth required className=\"TextUser\" value={leadaccess || \"\"} onChange={handleInputChange} >\r\n                    <MenuItem value='Yes' >Yes</MenuItem>\r\n                    <MenuItem value='No' >No</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <FormControl fullWidth>                                      \r\n                  <InputLabel>Company*</InputLabel>\r\n                    <Select id='company' name='company' label='Company' placeholder=\"Select your Company\"  fullWidth required className=\"TextUser\" value={company || \"\"} onChange={handleInputChange}  >\r\n                    {companyRetrive.map((val) => <MenuItem value={val.company}>{val.company}</MenuItem>)}\r\n                                  \r\n                    </Select>                    \r\n                    </FormControl>\r\n\r\n\r\n\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    \r\n                    <Space>                \r\n                    </Space>                 \r\n                      \r\n                   \r\n\r\n                    \r\n                    <div className=\"Gap2\"></div>\r\n                        <button type='submit' className=\"buttonD5\" style={btnl} onClick={handleSubmit} > Register </button>\r\n                        <Link to=\"/\">\r\n                        <button type='submit' className=\"buttonD5\" style={btnr} > <i class=\"fa fa-home\"></i>   Home </button>\r\n                        </Link>\r\n                    </div>\r\n                       \r\n                 \r\n\r\n\r\n                    </Paper>\r\n           \r\n          \r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React, { useState,useEffect } from 'react';\r\nimport { Avatar, Grid,Paper, TextField,Select, MenuItem,FormControl,InputLabel } from \"@mui/material\";\r\nimport { AiTwotoneHome } from 'react-icons/ai';\r\nimport { GiArchiveRegister } from 'react-icons/gi';\r\nimport \"../mainpages/Register.css\";\r\nimport { Form,Button,Checkbox,Input,Space } from \"antd\";\r\nimport DatePicker from 'react-date-picker';\r\nimport { red } from \"@mui/material/colors\";\r\nimport { width } from \"@mui/system\";\r\nimport { HomeOutlined  } from \"@ant-design/icons\"\r\n import { format } from \"date-fns\";\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport { Calendar } from 'react-date-range';\r\nimport Moment from 'moment';\r\nimport dateFormat from 'dateformat';\r\nimport '../GlobalVariables'\r\nimport '../cssdesign/Button.css'\r\nimport Navbar from '../components/Navbar'\r\nimport * as ImIcons from \"react-icons/im\";\r\nimport * as FiIcons from \"react-icons/fi\";\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\n\r\nimport {useNavigate as useHistory,useParams, Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport {Dropdown,DropdownToggle,DropdownMenu,DropdownItem} from \"reactstrap\"\r\n\r\nvar onsubmittxtCheck=\"No\";\r\n\r\n\r\nconst initialState={\r\n    actuid:\"\",\r\n    project :\"\",\r\n    perimeter :\"\",\r\n    designsector :\"\",\r\n    partname :\"\",\r\n    econo :\"\",\r\n    pa :\"\",\r\n    list :\"\",\r\n    leadeid :\"\",\r\n    taskassign :\"\",\r\n    reqby :\"\",\r\n    taskcategory :\"\",\r\n    taskdesc :\"\",\r\n    ioreceived :\"\",\r\n    reqdate :\"\",\r\n    targetdate :\"\",\r\n    completion :\"\",\r\n    taskstatus :\"\",\r\n    deldate :\"\",\r\n    spendhr :\"0\",\r\n    plmlink :\"\",\r\n    qualityaccpt :\"\",\r\n    signofact :\"\",\r\n    remarks :\"\",\r\n    query :\"0\",\r\n    querystatus :\"Closed\",\r\n   \r\n };\r\n \r\n\r\n\r\nconst Addtask=()=>{\r\n\r\n\r\n      const[state,setState]=useState(initialState);\r\n\r\n    const [reqdatevalue, reqdateonChange] = useState(new Date());\r\n\r\n    const { \r\n    actuid,\r\n    project,\r\n    perimeter ,\r\n    designsector ,\r\n    partname ,\r\n    econo ,\r\n    pa ,\r\n    list ,\r\n    leadeid ,\r\n    taskassign ,\r\n    reqby ,\r\n    taskcategory ,\r\n    taskdesc ,\r\n    ioreceived ,\r\n    reqdate ,\r\n    targetdate ,\r\n    completion ,\r\n    taskstatus ,\r\n    deldate ,\r\n    spendhr ,\r\n    plmlink ,\r\n    qualityaccpt ,\r\n    signofact ,\r\n    remarks ,\r\n    query ,\r\n    querystatus ,}=state;\r\n    \r\n    const[selecteddesignation,setDesignation]=useState(\"Selete\")\r\n    \r\n\r\n    const navigate = useHistory();\r\n\r\n   \r\nconst [arraydesignation,setArrayDesignation]=useState([{\"designsector\":\"Electrical & Electronic\"},{\"designsector\":\"LEAD\"},{\"designsector\":\"Worker\"}]);\r\n\r\n// TODO:Start *** designsector Retrive Functions ***\r\nconst[designsectorRetrive,setdesignsector]=useState([]);\r\n\r\nconst Arry_loaddesignsector= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/designsectorget`);\r\n    setdesignsector(response.data);\r\n\r\n}\r\n// Complete *** designsector Retrive Functions ***\r\n\r\n// TODO:Start *** perimeter Retrive Functions ***\r\nconst[perimeterRetrive,setperimeter]=useState([]);\r\n\r\nconst Arry_loadperimeter= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/perimeterget`);\r\n    setperimeter(response.data);\r\n\r\n}\r\n// Complete *** perimeter Retrive Functions ***\r\n \r\n\r\n// TODO:Start *** worklocation Retrive Functions ***\r\nconst[worklocationRetrive,setWorklocation]=useState([]);\r\n\r\nconst Arry_loadworklocation= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/worklocationget`);\r\n    setWorklocation(response.data);\r\n\r\n}\r\n// Complete *** worklocation Retrive Functions ***\r\n\r\n\r\n// TODO:Start *** company Retrive Functions ***\r\nconst[companyRetrive,setCompanyRetrive]=useState([]);\r\n\r\nconst Arry_loadCompany= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/companyget`);\r\n    setCompanyRetrive(response.data);\r\n\r\n}\r\n\r\n// Complete *** company Retrive Functions ***\r\n\r\n\r\n    const loadarraydesignation= async() =>{\r\n      const response=await axios.get(`${global.DB_HOST_PORT}/api/get`);\r\n      setArrayDesignation(response.data);\r\n      //setDataSource(response.data);\r\n  }\r\n  useEffect(() => {\r\n   loadarraydesignation();\r\n   Arry_loadCompany();\r\n   Arry_loadworklocation();\r\n   Arry_loadperimeter();\r\n   Arry_loaddesignsector();\r\n  }, []);\r\n   \r\n   \r\n    const{ id }=useParams();\r\n    \r\n// TODO: handle Date change\r\n\r\n    const handlereqdate = (e)=> {  \r\n         setState((state)=>({...state,reqdate:e.target.value}));\r\n      \r\n    }\r\n\r\n    const handletargetdate = (e)=> {  \r\n            setState((state)=>({...state,targetdate:e.target.value}));\r\n            setState((state)=>({...state,deldate:e.target.value}));\r\n    }\r\n\r\n    const handledeldate = (e)=> {  \r\n        setState((state)=>({...state,deldate:e.target.value}));\r\n}\r\n       \r\n       \r\n\r\n\r\n       \r\n             useEffect(()=>{\r\n\r\n                if (id) {\r\n                        axios\r\n                    .get(`${global.DB_HOST_PORT}/api/tasklistget/${id}`)\r\n                    .then((resp) => {\r\n                        setState({...resp.data[0]})\r\n                        setState((state)=>({...state,reqdate:(dateFormat(resp.data[0].reqdate, 'yyyy-mm-dd'))}));\r\n                        setState((state)=>({...state,targetdate:(dateFormat(resp.data[0].targetdate, 'yyyy-mm-dd'))}));\r\n                        setState((state)=>({...state,deldate:(dateFormat(resp.data[0].deldate, 'yyyy-mm-dd'))}));\r\n                       // setState(dateFormat(...resp.data[0].reqdate, 'yyyy-mm-dd') ) \r\n                    if(global.task_retrive=\"Yes\"){\r\n                        global.task_retrive=\"No\"\r\n                       // dobonChange(resp.data[0].dob) \r\n                    }\r\n                       \r\n                        \r\n\r\n                        })\r\n                \r\n            }  },[id]);\r\n      \r\n\r\n\r\n   \r\n   \r\n \r\n\r\n    const handleSubmit= (e) =>{\r\n       \r\n        e.preventDefault();  \r\n          \r\n        if(!project ){\r\n             toast.error(\"Please fill all input field\")\r\n             onsubmittxtCheck=\"Yes\"\r\n          \r\n            \r\n        }else{\r\n            if(!reqdate  ){\r\n                               toast.error(\"Please Reselect reqdate\")\r\n            }else{\r\n              \r\n\r\n         try{\r\n            axios.post(`${global.DB_HOST_PORT}/api/trackerpost`,{\r\n                project,\r\n                perimeter ,\r\n                designsector ,\r\n                partname ,\r\n                econo ,\r\n                pa ,\r\n                list ,\r\n                leadeid ,\r\n                taskassign ,\r\n                reqby ,\r\n                taskcategory ,\r\n                taskdesc ,\r\n                ioreceived ,\r\n                reqdate ,\r\n                targetdate ,\r\n                completion ,\r\n                taskstatus ,\r\n                deldate ,\r\n                spendhr ,\r\n                plmlink ,\r\n                qualityaccpt ,\r\n                signofact ,\r\n                remarks ,\r\n                query ,\r\n                querystatus ,\r\n                })\r\n                toast.success(\"Sucessfully Registered \");\r\n              //  setTimeout(()=> navigate(\"/\"),100);\r\n\r\n         }catch(err){\r\n            toast.error(\"Can't Reach your Server!!!\")\r\n        console.log(err.response.data);\r\n        }}\r\n    \r\n        }\r\n    };\r\n\r\n   \r\n    const handleInputChange=(e) =>{\r\n       const {name,value}=e.target;\r\n        setState({...state,[name]:value});\r\n        // console.log(e.target.value);\r\n       //  console.log(e.target.id);\r\n    \r\n        \r\n    };\r\n\r\n   \r\n  \r\n    \r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    const [date,setDate]=useState([reqdate]);\r\n\r\n    const[calender,setCalender]=useState(\"\")\r\n\r\n    const[open, setOpen]=useState(false)\r\n    useEffect(()=>{\r\n        setCalender(format(new Date(),'dd/MM/yyyy'))\r\n        // document.addEventListener(\"keydown\",hideOnEscape,true)\r\n        // document.addEventListener(\"click\",hideOnClickOutside,true)\r\n        \r\n    },[])\r\n   \r\n\r\n\r\n    const handledate=(e)=>{\r\n             const getNewDate=e.target.value;\r\n      setDate(getNewDate);\r\n  \r\n     }\r\n   \r\n   \r\n     useEffect(()=>{\r\n       // console.log(state);\r\n    },[state])\r\n\r\n     const Check2=()=>{\r\n        console.log(state);\r\n        //console.log(arraydesignationNew);\r\n       // setArrayDesignation([\"Enginner\",\"Senior\",\"Lead\",\"Subsenior\"])\r\n     }\r\n    \r\n   \r\n       \r\n    const paperStyle={ height:'100vh',maxWidth:'200vh',float:'center' ,margin:\"auto auto\",backgroundColor:\"white\"}\r\n    const avatarStyle={backgroundColor:'white',height:'70px',width:'70px'}\r\n    const bodyMovel={padding:30,width:'33.33%',float:'left'  }\r\n    const txtwithbutton={ display:\"inline-flex\" }\r\n\r\n    const bodyMover={padding:30,width:'33.33%',float:'right'  }\r\n\r\n    const dobl={padding:5,width:'60px'  }\r\n    const dobr={width:'auto',float:'left'  }\r\n    const btnl={width:'150px',float:'right',marginTop:\"10px\"  }\r\n    const btnr={width:'150px',float:'left'  }\r\n    const div2column={width:'auto',float:'left'  }\r\n\r\n    const [dropdownOpen,setDropdownOpen]=useState(false);\r\n    const toggle=()=>setDropdownOpen(prevState=>!prevState);\r\n\r\n   \r\n    return(\r\n        <div>\r\n        \r\n            \r\n           <div class=\"sticky\" ><Navbar/></div>\r\n           \r\n        \r\n            \r\n      \r\n                 <Grid>\r\n            \r\n            \r\n             \r\n                <Paper elevation={10} style={paperStyle}>        \r\n                <div style={bodyMovel}>\r\n                  \r\n                    <div style={txtwithbutton} >\r\n                        <TextField  id='actuid' name='actuid' label='Activity ID' placeholder=\"Activity ID\"               \r\n                         fullWidth disabled size=\"small\" className=\"TextUser\" variant=\"filled\"\r\n                         value={actuid || \"\"} onChange={handleInputChange}                       \r\n                        />\r\n                        <Button className=\"buttonD10\" style={{width:\"220px\"}}>Auto Fill <ImIcons.ImPointDown size={15}/></Button>\r\n                        <Button className=\"buttonD10\" style={{width:\"10%\"}}><FiIcons.FiSettings size={15}/></Button>\r\n          \r\n                    </div>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <TextField  id='project' name='project' label='Project' placeholder=\"Project\"               \r\n                         fullWidth required size=\"small\" className=\"TextUser\" variant=\"standard\"\r\n                         value={project || \"\"} onChange={handleInputChange}                       \r\n                        />\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <FormControl fullWidth>                                      \r\n                    <InputLabel>Perimeter*</InputLabel>\r\n                    <Select id='perimeter' size=\"small\" variant=\"standard\" name='perimeter' label='Perimeter' placeholder=\"Select your Perimeter\"  fullWidth required className=\"TextUser\" value={perimeter || \"\"} onChange={handleInputChange}  >\r\n                    {perimeterRetrive.map((val) => <MenuItem value={val.perimeter}>{val.perimeter}</MenuItem>)}\r\n                    </Select>                    \r\n                    </FormControl>\r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <FormControl fullWidth>                                      \r\n                    <InputLabel>Design Sector*</InputLabel>\r\n                    <Select id='designsector' name='designsector' label='Design Sector' placeholder=\"Select your Design Sector\"  \r\n                    fullWidth required className=\"TextUser\" size=\"small\" variant=\"standard\" value={designsector || \"\"} onChange={handleInputChange}  >\r\n                    {designsectorRetrive.map((val) => <MenuItem value={val.designsector}>{val.designsector}</MenuItem>)}\r\n                    </Select>                    \r\n                    </FormControl>\r\n                    <div className=\"Gap2\"></div>\r\n\r\n                   \r\n                    <TextField  id='partname' name='partname' label='Part Name' placeholder=\"Part Name\"               \r\n                         fullWidth required size=\"small\" className=\"TextUser\" variant=\"standard\"\r\n                         value={partname || \"\"} onChange={handleInputChange}                       \r\n                        />\r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <TextField  id='econo' name='econo' label='ECO No.' placeholder=\"ECO No.\"               \r\n                         fullWidth required size=\"small\" className=\"TextUser\" variant=\"standard\"\r\n                         value={econo || \"\"} onChange={handleInputChange}                       \r\n                        />                        \r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <TextField  id='pa' name='pa' label='PA No.' placeholder=\"PA No.\"               \r\n                         fullWidth required size=\"small\" className=\"TextUser\" variant=\"standard\"\r\n                         value={pa || \"\"} onChange={handleInputChange}                       \r\n                        />                        \r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <TextField  id='list' name='list' label='New/CO/FETE' placeholder=\"New/CO/FETE\"               \r\n                         fullWidth required size=\"small\" className=\"TextUser\" variant=\"standard\"\r\n                         value={list || \"\"} onChange={handleInputChange}                       \r\n                    />                        \r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <TextField  id='leadeid' name='leadeid' label='Lead EID' placeholder=\"Lead EID\"               \r\n                         fullWidth required size=\"small\" className=\"TextUser\" variant=\"standard\" \r\n                         value={leadeid || \"\"} onChange={handleInputChange}                       \r\n                    />                        \r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <TextField  id='taskassign' name='taskassign' label='Task Assigner EID' placeholder=\"Task Assigner EID\"               \r\n                         fullWidth required size=\"small\" className=\"TextUser\" variant=\"standard\" \r\n                         value={taskassign || \"\"} onChange={handleInputChange}                       \r\n                    />                        \r\n                    <div className=\"Gap2\"></div>\r\n                                       \r\n                    \r\n                </div>\r\n\r\n                <div style={bodyMovel}>\r\n\r\n                <TextField  id='reqby' name='reqby' label='Task Requested By' placeholder=\"Task Requested By\"               \r\n                         fullWidth required size=\"small\" className=\"TextUser\" variant=\"standard\" \r\n                         value={reqby || \"\"} onChange={handleInputChange}                       \r\n                    />   \r\n                    <div className=\"Gap2\"></div>\r\n                <TextField  id='taskcategory' name='taskcategory' label='Task Category' placeholder=\"Task Category\"               \r\n                         fullWidth required size=\"small\" className=\"TextUser\" variant=\"standard\" \r\n                         value={taskcategory || \"\"} onChange={handleInputChange}                       \r\n                    /> \r\n                     <div className=\"Gap2\"></div>\r\n                 <div className=\"Gap2\"></div>\r\n                    <TextField  id='taskdesc' name='taskdesc' label='Task Description' placeholder=\"Task Description\"               \r\n                         fullWidth required  multiline rows={13} size=\"small\" className=\"TextUser\" variant=\"outlined\" \r\n                         value={taskdesc || \"\"} onChange={handleInputChange}                       \r\n                     /> \r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <FormControl fullWidth>                                      \r\n                  <InputLabel>All Input Received*</InputLabel>\r\n                    <Select  id='ioreceived' name='ioreceived' label='All Input Received' placeholder=\"All Input Received\" \r\n                    fullWidth required size=\"small\" variant=\"standard\" className=\"TextUser\"\r\n                     value={ioreceived || \"\"} onChange={handleInputChange} >\r\n                    <MenuItem value='Yes' >Yes</MenuItem>\r\n                    <MenuItem value='No' >No</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n\r\n                <div className=\"Gap2\"></div>\r\n\r\n                    <div style={{float:\"left\"}}>                    \r\n                    <InputLabel >Task Requested Date</InputLabel>\r\n                    <FormControl style={dobr}> \r\n                    <input type=\"date\" id=\"reqdate\" name=\"reqdate\" placeholder=\"yyyy-mm-dd\" \r\n                    value={state.reqdate} onChange={(e)=>handlereqdate(e)}className=\"DatePicker\"/>\r\n                    </FormControl >\r\n                    </div>   \r\n                    \r\n                    <div style={{float:\"left\"}}>\r\n                        <label></label>\r\n                    </div>\r\n                    <div style={{float:\"right\"}}>                    \r\n                    <InputLabel >Target to Complete</InputLabel>\r\n                    <FormControl style={dobr}> \r\n                    <input type=\"date\" id=\"targetdate\" name=\"targetdate\" placeholder=\"yyyy-mm-dd\" \r\n                    value={targetdate} onChange={(e)=>handletargetdate(e)}className=\"DatePicker\"/>\r\n                    </FormControl >\r\n                    </div>   \r\n                </div>\r\n\r\n                  \r\n                <div style={bodyMover}> \r\n\r\n                <FormControl fullWidth>                                      \r\n                  <InputLabel>Completion %*</InputLabel>\r\n                    <Select  id='completion' name='completion' label='All Input Received' placeholder=\"All Input Received\" \r\n                    fullWidth required size=\"small\" variant=\"standard\" className=\"TextUser\" value={completion || \"\"} onChange={handleInputChange} >\r\n                    <MenuItem value='0%' >0%</MenuItem>\r\n                    <MenuItem value='25%' >25%</MenuItem>\r\n                    <MenuItem value='50%' >50%</MenuItem>\r\n                    <MenuItem value='75%' >75%</MenuItem>\r\n                    <MenuItem value='80%' >80%</MenuItem>\r\n                    <MenuItem value='90%' >90%</MenuItem>\r\n                    <MenuItem value='100%' >100%</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n                <div className=\"Gap2\"></div>\r\n\r\n                <FormControl fullWidth>                                      \r\n                  <InputLabel>Task Status</InputLabel>\r\n                    <Select  id='taskstatus' name='taskstatus' label='Task Status' placeholder=\"Task Status\" \r\n                    fullWidth required size=\"small\" variant=\"standard\" className=\"TextUser\" value={taskstatus || \"\"} onChange={handleInputChange} >\r\n                    <MenuItem value='Created' >Created</MenuItem>\r\n                    <MenuItem value='In-Work' >In-Work</MenuItem>\r\n                    <MenuItem value='On-Query' >On-Query</MenuItem>\r\n                    <MenuItem value='Closed' >Closed</MenuItem>\r\n                                   </Select>\r\n                    </FormControl>\r\n                <div className=\"Gap2\"></div>\r\n                <div st>    \r\n                <div style={{float:\"left\"}}>                    \r\n                    <InputLabel >Task Delivery Date</InputLabel>\r\n                    <FormControl style={dobr}> \r\n                    <input type=\"date\"  id=\"deldate\" name=\"deldate\" placeholder=\"yyyy-mm-dd\" \r\n                    value={deldate} onChange={(e)=>handledeldate(e)}className=\"DatePicker\"/>\r\n                    </FormControl >\r\n                </div>    \r\n                \r\n                <TextField style={{float:\"right\", width:\"200px\",paddingTop:\"10px\"}} id='spendhr' name='spendhr' label='Total Spend Hour' placeholder=\"Total Spend Hour\"               \r\n                          required size=\"standard\" className=\"TextUser\" variant=\"outlined\" \r\n                         value={spendhr || \"\"} onChange={handleInputChange}                       \r\n                    />   \r\n\r\n                </div> \r\n\r\n                <div className=\"Gap2\" fullWidth></div>\r\n               \r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <TextField  id='plmlink' name='plmlink' label='PLM/DOC Info Link' placeholder=\"PLM/DOC Info Link\"               \r\n                         fullWidth required size=\"small\" className=\"TextUser\" variant=\"standard\" \r\n                         value={plmlink || \"\"} onChange={handleInputChange}                       \r\n                    />  \r\n\r\n                    \r\n                <div className=\"Gap2\"></div>\r\n                <FormControl fullWidth>                                      \r\n                  <InputLabel>Quality Acceptance*</InputLabel>\r\n                    <Select  id='qualityaccpt' name='qualityaccpt' label='Quality Acceptance' placeholder=\"Quality Acceptance\" \r\n                    fullWidth required size=\"small\" variant=\"standard\" className=\"TextUser\" value={qualityaccpt || \"\"} onChange={handleInputChange} >\r\n                    <MenuItem value='Yes' >Yes</MenuItem>\r\n                    <MenuItem value='No' >No</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <FormControl fullWidth>                                      \r\n                  <InputLabel>Sign-off Actitivity</InputLabel>\r\n                    <Select  id='signofact' name='signofact' label='Sign-off Actitivity' placeholder=\"Sign-off Actitivity\" \r\n                    fullWidth required size=\"small\" variant=\"standard\" className=\"TextUser\" value={signofact || \"\"} onChange={handleInputChange} >\r\n                    <MenuItem value='Yes' >Yes</MenuItem>\r\n                    <MenuItem value='No' >No</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <TextField  id='remarks' name='remarks' label='Remarks' placeholder=\"Remarks\"               \r\n                         fullWidth   multiline rows={5} size=\"small\" className=\"TextUser\" variant=\"outlined\" \r\n                         value={remarks || \"\"} onChange={handleInputChange}                       \r\n                     /> \r\n                     \r\n                          <div className=\"Gap2\" fullWidth style={{height:\"10px\"}}></div>\r\n                          <div style={{float:\"left\"}}>\r\n                            <TextField  id='query'  name='query' label='query' placeholder=\"query\"               \r\n                           disabled size=\"small\" className=\"TextUser\" variant=\"filled\"\r\n                           value={query || \"\"} onChange={handleInputChange}      \r\n                           style={{float:\"left\", width:\"70px\",marginRight:\"20px\"}}                 \r\n                          />    \r\n\r\n                          <div className=\"Gap2\" fullWidth style={{height:\"10px\", float:\"left\"}}></div>\r\n                         <TextField  id='querystatus' name='querystatus' label='Query Status' placeholder=\"Query Status\"               \r\n                          disabled size=\"small\" className=\"TextUser\" variant=\"filled\"\r\n                         value={querystatus || \"\"} onChange={handleInputChange}     \r\n                         style={{float:\"left\", width:\"200px\",marginRight:\"20px\"}}                   \r\n                        />  \r\n                        </div>  \r\n                    \r\n                    <div className=\"Gap2\"></div>\r\n                    <div>\r\n                        <button type='submit' className=\"buttonD5\" style={btnl} onClick={handleSubmit}  > {id ? \"Update\": \" Submit  \"}</button>\r\n                     \r\n                    </div>\r\n                    </div>\r\n                    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n                 \r\n\r\n                    </Paper>\r\n           \r\n          \r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addtask;","import React  from \"react\";\r\nimport { Avatar, Button, Grid,Paper, TextField } from \"@mui/material\";\r\nimport { FaUserLock } from 'react-icons/fa';\r\nimport { GiArchiveRegister } from 'react-icons/gi';\r\nimport \"./Login.css\";\r\n\r\nimport { red } from \"@mui/material/colors\";\r\nimport {Link} from \"react-router-dom\";\r\nimport '../cssdesign/Button.css'\r\nimport '../GlobalVariables'\r\n\r\nconst Login=()=>{\r\n    const paperStyle={ height:'80vh',width:310 ,margin:\"20px auto\",backgroundColor:\"white\"}\r\n    const avatarStyle={backgroundColor:'white',height:'70px',width:'70px'}\r\n    const bodyMove={padding:20}\r\n\r\n    const Onchangetext =(e)=>{\r\n        global.employeid=e.target.value\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n      \r\n        <Grid>\r\n            \r\n            <Paper elevation={20} style={paperStyle}>\r\n                <Grid align=\"center\">\r\n                    \r\n                    <div className=\"div1\">\r\n                    <div className=\"Gap1\"></div>\r\n                    <Avatar style={avatarStyle}>\r\n                    <h2 > <FaUserLock size=\"40px\" color=\"#03364b\"/> </h2> \r\n                    </Avatar>\r\n                     \r\n                    <label className=\"label1\" > Sign In</label>                                 \r\n                    <div className=\"Gap2\"></div>\r\n                    \r\n                    </div>\r\n                        \r\n                        </Grid>\r\n                        \r\n                        <div style={bodyMove}>\r\n                            \r\n                        <TextField  label='Employee ID' placeholder=\"Employee ID\" \r\n                        fullWidth required className=\"TextUser\" onChange={Onchangetext}/>\r\n                    <div className=\"Gap2\"></div>\r\n                        <TextField label='Password' placeholder=\"Password\" type=\"password\" fullWidth required/>\r\n                        <div className=\"Gap2\"></div>\r\n                        <Link to=\"/Dashboard\">\r\n                        <button type='submit'  className=\"buttonD5 \" > Login </button>\r\n                        </Link>\r\n                        <br/>\r\n                        <div className=\"Gap2\"></div>\r\n                        <Link to=\"/Register\">\r\n                       <button className=\"buttonD7\"> New user Registration </button>\r\n                       </Link>\r\n                       <div className=\"Gap2\"></div>\r\n                       \r\n\r\n                       <Link to=\"/Checkuser\">\r\n                       <button className=\"buttonD7\"> Check user status </button>\r\n                       </Link>\r\n\r\n                    \r\n                    {/* <a href=\"#\"> Click me</a> */}\r\n                        \r\n                    </div>\r\n            </Paper>\r\n          \r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useState,useEffect} from \"react\";\r\nimport Navbar from '../components/Navbar'\r\nimport '../GlobalVariables'\r\nimport \"./Userlist.css\";\r\nimport \"./Dashboard.css\";\r\nimport {toast} from \"react-toastify\";\r\nimport axios from   \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Typography } from '@mui/material';\r\nimport { borderRadius, color } from \"@mui/system\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Input, theme } from \"antd\";\r\nimport { yellow } from \"@mui/material/colors\";\r\n\r\nimport { FcSearch } from 'react-icons/fc';\r\nimport { FiEdit } from 'react-icons/fi';\r\nimport { RiDeleteBin5Fill } from 'react-icons/ri';\r\nimport { MdApproval } from 'react-icons/md';\r\nimport { AiTwotonePrinter } from 'react-icons/ai';\r\n\r\nimport dateFormat from 'dateformat';\r\nimport { Button } from \"antd\";\r\nimport { Avatar, Grid, TextField,Select, MenuItem,FormControl,InputLabel } from \"@mui/material\";\r\n\r\nimport { PlusCircleOutlined,EditOutlined,DeleteOutlined,EyeOutlined  } from \"@ant-design/icons\"\r\nimport Datalist from './Datalist'\r\nimport BasicTable from './Tablecheck2'\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbar,useGridApiEventHandler,useGridApiContext } from '@mui/x-data-grid';\r\n\r\n\r\nconst initialsearchstate= {\r\n  fproject:\"\", \r\n  fpartname:\"\", \r\n  fperimeter:\"\", \r\n  fdesignsector:\"\", \r\n  ftaskassign:\"\", \r\n  fleadname:\"\",\r\n  fcompletion:\"\", \r\n  ftaskstatus:\"\", \r\n  fquerystatus:\"\",\r\n  empid:global.employeid,\r\n};\r\n\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n  const [selectedRow,setSelectedRow]=useState(null);\r\n  const Retrivefunction=()=>{\r\n    global.User_retrive=\"Yes\"\r\n    console.log(global.User_retrive)\r\n  }\r\nconst[rowdata,setRowdata]=useState(null)\r\n \r\nconst handleRowClick = (params) => {\r\n   // console.log(`Movie \"${params.row.id}\" clicked`);\r\n    setRowdata(`Movie \"${params.row.id}\" clicked`);\r\n  };\r\n\r\n  const handleClick=(event,cellValues)=>{\r\n    console.log(cellValues.row.id)\r\n    console.log(cellValues.row.project)\r\n  }\r\n  const columns = [\r\n    {\r\n      field:\"Edit\",width:2 ,headerClassName: 'header_Style_format',sortable: false,\r\n      renderCell: (cellValues)=>{\r\n          return(\r\n            <Link to={`/taskupdate/${cellValues.id}`}>\r\n          <button className=\"btn btn-edit\" onClick={(event)=>{\r\n            Retrivefunction(event,cellValues);\r\n          }} > {<FiEdit />}</button>\r\n          </Link>\r\n                    )\r\n              } \r\n            },\r\n    { field: 'id', headerName: 'ID',width: 70,headerClassName: 'header_Style_format'},\r\n    { field: 'project', headerName: 'Project', width: 120,headerClassName: 'header_Style_format'},\r\n    { field: 'perimeter', headerName: 'Perimeter', width: 120,headerClassName: 'header_Style_format' },\r\n    { field: 'designsector', headerName: 'Design Sector', width: 120,headerClassName: 'header_Style_format' },\r\n    { field: 'partname', headerName: 'PartName', width: 120,headerClassName: 'header_Style_format' },\r\n    { field: 'leadeid', headerName: 'Lead EID', width: 120,headerClassName: 'header_Style_format' },\r\n    { field: 'taskassign', headerName: 'Task Assignee', width: 120,headerClassName: 'header_Style_format' },\r\n    { field: 'reqby', headerName: 'Task Req. By', width: 120,headerClassName: 'header_Style_format' },\r\n    { field: 'taskdesc', headerName: 'Task Desc.', width: 180,headerClassName: 'header_Style_format' },\r\n    { field: 'reqdate', headerName: 'Req. Date', width: 100,headerClassName: 'header_Style_format', type: 'date',valueFormatter:({value})=>{return dateFormat(value,'yyyy-mm-dd')} },\r\n    { field: 'targetdate', headerName: 'Target Date', width: 100,headerClassName: 'header_Style_format', type: 'date',valueFormatter:({value})=>{return dateFormat(value,'yyyy-mm-dd')} },\r\n    { field: 'completion', headerName: 'Completion', width: 100,headerClassName: 'header_Style_format' },\r\n    { field: 'taskstatus', headerName: 'Task Status', width: 100,headerClassName: 'header_Style_format' },\r\n    { field: 'deldate', headerName: 'Delivery Date', width: 100,headerClassName: 'header_Style_format', type: 'date',valueFormatter:({value})=>{return dateFormat(value,'yyyy-mm-dd')} },\r\n    { field: 'query', headerName: 'Query', width: 70,headerClassName: 'header_Style_format' },\r\n    { field: 'querystatus', headerName: 'Query Status', width: 100,headerClassName: 'header_Style_format' },\r\n   \r\n    {\r\n      field:\"Delete\",width: 10,headerClassName: 'header_Style_format',sortable: false,\r\n      renderCell: (cellValues)=>{\r\n          return(\r\n            <button className=\"btn btn-delete \"  onClick={()=> deletelist(cellValues.row.id)}>{<RiDeleteBin5Fill />}</button>\r\n           \r\n         \r\n            )\r\n      }\r\n    },\r\n  \r\n    {\r\n      field:\"View\",width: 10,headerClassName: 'header_Style_format',sortable: false,\r\n      renderCell: (cellValues)=>{\r\n          return(\r\n            <button className=\"btn btn-view \" onClick={()=> console.log(cellValues.row.id)}>{<MdApproval />}</button>\r\n                )\r\n      }\r\n    },\r\n\r\n   \r\n    {\r\n      field:\"print\",width:2 ,headerClassName: 'header_Style_format',sortable: false,\r\n      renderCell: (cellValues)=>{\r\n          return(\r\n            <Link to={`/print/${cellValues.id}`}>\r\n          <button className=\"btn btn-print\" onClick={(event)=>{\r\n            Retrivefunction(event,cellValues);\r\n          }} > {<AiTwotonePrinter />}</button>\r\n          </Link>\r\n                    )\r\n              } \r\n            },\r\n  \r\n  ];\r\n \r\n  \r\n\r\n  const [data,setData]=useState([]);\r\n\r\n  const loadData= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/trackerget`,{fproject,});\r\n    setData(response.data);\r\n    settableFilter(response.data)\r\n    // setDataSource(response.data);\r\n    alert(global.DB_HOST_PORT)\r\n}\r\nuseEffect(() => {\r\n  loadData();\r\n}, []);\r\n\r\n\r\nconst useStyle = makeStyles((theme)=>({\r\n  table: {\r\n    minWidth:650,\r\n  },\r\n\r\nstatus:{\r\n  fontWeight:'bold',\r\n  fontSize:'1em',\r\n  color:'white',\r\n  backgroundColor:'gray',\r\n  borderRadius:18,\r\n    display:'block',\r\n    margin: \"15px\",\r\n    padding: \"13px\",\r\n    textAlign:\"center\"\r\n\r\n}\r\n}));\r\n\r\nconst classes=useStyle();\r\n\r\nconst[value,setValue]=useState('');\r\n// const[dataSource, setDataSource]=useState([]);\r\nconst[tableFilter,settableFilter]=useState([]);\r\n\r\nconst[query,setQuery]=useState([]);\r\nconst search=(data)=>{\r\n  return data.filter(item=>item.project.toLowerCase().includes(query));\r\n}\r\n\r\nconst filterData=(e)=>{\r\n  if(e.target.value != \"\"){\r\n    setValue(e.target.value);\r\n    const filterTable=data.filter(o=>Object.keys(o).some(k=>\r\n      String(o[k]).toLowerCase().includes(e.target.value.toLowerCase())));\r\n      settableFilter([...filterTable])\r\n    }else{\r\n      settableFilter([...data])\r\n    //   setData([...data]);\r\n    \r\n  }\r\n}\r\nuseEffect(()=>{\r\n \r\n},[]);\r\n\r\nconst deletelist =(id) =>{\r\n  if(window.confirm(`Are you sure, Do you want to DELETE Activity :\\n Activity ID: ${id} `)){\r\n      axios.delete(`${global.DB_HOST_PORT}/api/trackerremove/${id} `)\r\n      .then((response) => {\r\n       console.log(\"RESPONSE FROM POST\", response.data);\r\n   })\r\n   .catch(err =>{\r\n      console.error(err);\r\n   })\r\n      toast.success(`${id} Deleted successfully !!! `);\r\n     setTimeout(()=>loadData(),10);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst[searchstate,setSearchstate]=useState(initialsearchstate);\r\n\r\nconst {\r\n  fproject, fpartname, fperimeter, fdesignsector, ftaskassign, fleadname,fcompletion, ftaskstatus, fquerystatus,empid\r\n}= searchstate\r\n\r\n\r\nconst handleSearchInputChange=(e) =>{\r\n  const {name,value}=e.target;\r\n  setSearchstate({...searchstate,[name]:value});\r\n\r\n // setSearchstate({...searchstate,empid:global.employeid});\r\n     // console.log(e.target.value);\r\n    //  console.log(e.target.id);\r\n  };\r\n\r\n  const ButtonSearch_filter=()=>{\r\n    loadData();\r\n  }\r\n\r\n// TODO:Start *** perimeter Retrive Functions ***\r\nconst[perimeterRetrive,setperimeter]=useState([]);\r\n\r\nconst Arry_loadperimeter= async() =>{\r\n    const response=await axios.get(\"http://localhost:5000/api/perimeterget\");\r\n    setperimeter(response.data);\r\n\r\n}\r\n// Complete *** perimeter Retrive Functions ***\r\n \r\n\r\n// TODO:Start *** designsector Retrive Functions ***\r\nconst[designsectorRetrive,setdesignsector]=useState([]);\r\n\r\nconst Arry_loaddesignsector= async() =>{\r\n    const response=await axios.get(\"http://localhost:5000/api/designsectorget\");\r\n    setdesignsector(response.data);\r\n\r\n}\r\n// Complete *** designsector Retrive Functions ***\r\n\r\n//TODO:Save filter function\r\nconst savefilterfunction=()=>{\r\n  try{\r\n\r\n    axios.put(`${global.DB_HOST_PORT}/api/trackerget/${global.employeid}`,{\r\n      fproject, fpartname, fperimeter, fdesignsector, ftaskassign, fleadname,fcompletion, ftaskstatus, fquerystatus,\r\n    }) \r\n // toast.success(`Saved Filter Function ${empid}`);\r\n  toast.success(`Saved Filter Function`);\r\n}catch(err){\r\ntoast.error(\"Can't Reach your Server!!!\")\r\nconsole.log(err.response.data);\r\n}\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n  Arry_loadperimeter();\r\n  Arry_loaddesignsector();\r\n }, []);\r\n\r\nconst [Navebarclick, setNavebarclick]=useState(global.Navbarclick);\r\nconst tablecell={color:\"white\" ,fontWeight:'bold',backgroundColor:'#03364b',textAlign:\"center\"}\r\nconst tablecelldate={color:\"white\" ,fontWeight:'bold',backgroundColor:'#03364b',textAlign:\"center\",width:\"200px\"}\r\n\r\nconst tableContainer={borderRadius:15, margin:\"10px 10px\",maxWidth: '99%', maxHeight:\"200vh\"}\r\nconst tableContainersearch={borderRadius:15, margin:\"10px 10px \",maxWidth:\"200vh\", maxHeight:\"83vh\"}\r\n\r\nconst headerTablerow={position: \"sticky\",top: 0}\r\nconst searchtext={size:\"small\",  variant:\"standard\"}\r\n\r\nconst [showSearchbox,setshowSearchbox]=useState(false);\r\n\r\n  return (\r\n    <>\r\n\r\n      \r\n   <div ><Navbar/></div> \r\n   {/* <div><BasicTable/></div> */}\r\n   {/* <div><Datalist/></div> */}\r\n    <div>\r\n      <div className=\"Box\"></div>\r\n     \r\n    <TextField onChange={filterData} placeholder=\"Search\" className=\"SearchBox\" variant=\"standard\" fontWeight=\"bold\" float=\"right\"> </TextField>\r\n    <FcSearch size=\"30px\" className=\"Searchicon\"/>\r\n    <Button className=\"buttonD7\" style={{marginTop:\"15px\",marginLeft:\"15px\"}}\r\n        onClick={()=>{\r\n    // setShow(!show)\r\n   // Setfunction1()\r\n   setshowSearchbox(!showSearchbox)\r\n}\r\n}> {showSearchbox==true ? \"Hide Search Panel\":\"Show Search Panel\"} </Button>          \r\n    </div>\r\n\r\n   \r\n    <div>\r\n     <div>\r\n    \r\n     {showSearchbox && <TableContainer component={Paper} style={tableContainersearch}>\r\n<div style={{marginTop:\"10px\",marginLeft:\"20px\"}}>\r\n     <TextField  id='fproject' name='fproject' label='Project' placeholder=\"Project\"               \r\n        size=\"small\" className=\"searchtext\" variant=\"standard\" color=\"warning\"\r\n        value={fproject || \"\"} onChange={handleSearchInputChange}   \r\n        style={{marginLeft:\"10px\"}}  /> \r\n   \r\n      <TextField  id='fpartname' name='fpartname' label='Part Name' placeholder=\"Part Name\"               \r\n        size=\"small\" className=\"searchtext\" variant=\"standard\" color=\"warning\"\r\n        value={fpartname || \"\"} onChange={handleSearchInputChange}     \r\n        style={{marginLeft:\"10px\"}}/> \r\n      <FormControl> \r\n     <InputLabel>Perimeter</InputLabel>\r\n      <Select id='fperimeter' size=\"fperimeter\" variant=\"standard\" name='fperimeter' label='Perimeter' placeholder=\"Select your Perimeter\"  className=\"searchtext\" value={fperimeter || \"\"} onChange={handleSearchInputChange}  >\r\n      {perimeterRetrive.map((val) => <MenuItem value={val.perimeter}>{val.perimeter}</MenuItem>)}\r\n      </Select>                    \r\n      </FormControl>\r\n      \r\n      <FormControl >                                      \r\n           <InputLabel>Design Sector</InputLabel>\r\n       <Select id='fdesignsector' name='fdesignsector' label='Design Sector' placeholder=\"Select your Design Sector\"  \r\n        className=\"searchtext\" size=\"small\" variant=\"standard\" value={fdesignsector || \"\"} onChange={handleSearchInputChange}  >\r\n       {designsectorRetrive.map((val) => <MenuItem value={val.designsector}>{val.designsector}</MenuItem>)}\r\n        </Select>                    \r\n       </FormControl>\r\n      \r\n       \r\n               \r\n        \r\n        <FormControl >                                      \r\n           <InputLabel>Task Assigner</InputLabel>\r\n       <Select id='ftaskassign' name='ftaskassign' label='Design Sector' placeholder=\"Select your Design Sector\"  \r\n        className=\"searchtext\" size=\"small\" variant=\"standard\" value={ftaskassign || \"\"} onChange={handleSearchInputChange}  >\r\n       {designsectorRetrive.map((val) => <MenuItem value={val.designsector}>{val.designsector}</MenuItem>)}\r\n        </Select>                    \r\n       </FormControl> \r\n     \r\n       \r\n       <FormControl >                                      \r\n           <InputLabel>Lead Name</InputLabel>\r\n       <Select id='fleadname' name='fleadname' label='Design Sector' placeholder=\"Select your Design Sector\"  \r\n        className=\"searchtext\" size=\"small\" variant=\"standard\" value={fleadname || \"\"} onChange={handleSearchInputChange}  >\r\n       {designsectorRetrive.map((val) => <MenuItem value={val.designsector}>{val.designsector}</MenuItem>)}\r\n        </Select>                    \r\n       </FormControl> \r\n\r\n         <FormControl >                                      \r\n                  <InputLabel>fcompletion %</InputLabel>\r\n                    <Select  id='fcompletion' name='fcompletion' label='All Input Received' placeholder=\"All Input Received\" \r\n                     size=\"small\" variant=\"standard\" className=\"searchtext\" value={fcompletion || \"\"} onChange={handleSearchInputChange} >\r\n                    <MenuItem value='0%' >0%</MenuItem>\r\n                    <MenuItem value='25%' >25%</MenuItem>\r\n                    <MenuItem value='50%' >50%</MenuItem>\r\n                    <MenuItem value='75%' >75%</MenuItem>\r\n                    <MenuItem value='80%' >80%</MenuItem>\r\n                    <MenuItem value='90%' >90%</MenuItem>\r\n                    <MenuItem value='100%' >100%</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n             \r\n\r\n                <FormControl >                                      \r\n                  <InputLabel>Task Status</InputLabel>\r\n                    <Select  id='ftaskstatus' name='ftaskstatus' label='Task Status' placeholder=\"Task Status\" \r\n                     size=\"small\" variant=\"standard\" className=\"searchtext\" value={ftaskstatus || \"\"} onChange={handleSearchInputChange} >\r\n                    <MenuItem value='Created' >Created</MenuItem>\r\n                    <MenuItem value='In-Work' >In-Work</MenuItem>\r\n                    <MenuItem value='On-Query' >On-Query</MenuItem>\r\n                    <MenuItem value='Closed' >Closed</MenuItem>\r\n                                   </Select>\r\n                    </FormControl>       \r\n\r\n                    <FormControl >                                      \r\n                  <InputLabel>Query Status</InputLabel>\r\n                    <Select  id='fquerystatus' name='fquerystatus' label='Task Status' placeholder=\"Task Status\" \r\n                     size=\"small\" variant=\"standard\" className=\"searchtext\" value={fquerystatus || \"\"} onChange={handleSearchInputChange} >\r\n                    <MenuItem value='Open' >Created</MenuItem>\r\n                    <MenuItem value='Closed' >In-Work</MenuItem>\r\n                                                     </Select>\r\n                    </FormControl>  \r\n                    <Button className=\"buttonD7\" style={{marginTop:\"15px\",marginLeft:\"15px\"}} onClick={ButtonSearch_filter}>Search</Button>\r\n                    <Button className=\"buttonD7\" style={{marginTop:\"15px\",marginLeft:\"15px\"}} onClick={savefilterfunction}>Save Filter</Button>\r\n                   \r\n                    </div>\r\n                    </TableContainer>\r\n}     \r\n    </div> \r\n\r\n    <Box\r\n      sx={{\r\n        height: 300,\r\n        width: '100%',\r\n        '& .header_Style_format': {\r\n          backgroundColor: '#03364b',color:'#FCE77E',fontWeight: \"bold\"\r\n        },\r\n      }}\r\n    >\r\n    <TableContainer component={Paper} style={tableContainer}>\r\n    <div style={{ height: 700, width: '100%' }}>\r\n      <DataGrid\r\n        rows={tableFilter}\r\n        columns={columns}\r\n        pageSize={15}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        components={{ Toolbar: GridToolbar }}\r\n\r\n        onRowClick={handleRowClick} {...data}\r\n       // onCellClick={handleCellClick}\r\n       // onRowClick={handleRowClick}\r\n      />\r\n   \r\n      \r\n</div> \r\n\r\n   \r\n            </TableContainer>\r\n            </Box>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React from 'react';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as TbIcons from \"react-icons/tb\";\r\n\r\nexport const SidebarData=[\r\n    {\r\n        title:'Dashboard',\r\n        path:'/dashboard',\r\n        icon:<AiIcons.AiFillDashboard />,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'Add Task',\r\n        path:'/addtask',\r\n        icon:<AiIcons.AiFillFileAdd />,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'User List',\r\n        path:'/userlist',\r\n        icon:<AiIcons.AiOutlineUserSwitch />,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'Dropdown Items',\r\n        path:'/dropdownitems',\r\n        icon:<IoIcons.IoIosArrowDropdownCircle />,\r\n        cName:'nav-text'\r\n    },\r\n    {\r\n        title:'Version',\r\n        path:'/version',\r\n        icon:<TbIcons.TbVersions />,\r\n        cName:'nav-text'\r\n    }\r\n   \r\n\r\n]","import React, {useState,useEffect} from \"react\";\r\nimport Navbar from '../components/Navbar'\r\nimport '../GlobalVariables'\r\nimport \"./Userlist.css\";\r\nimport {toast} from \"react-toastify\";\r\nimport axios from   \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Typography } from '@mui/material';\r\nimport { borderRadius, color } from \"@mui/system\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Input, theme } from \"antd\";\r\nimport { yellow } from \"@mui/material/colors\";\r\nimport {InputLabel,TextField } from \"@mui/material\";\r\nimport { FcSearch } from 'react-icons/fc';\r\nimport { FiEdit } from 'react-icons/fi';\r\nimport { RiDeleteBin5Fill } from 'react-icons/ri';\r\nimport { MdApproval } from 'react-icons/md';\r\n\r\nimport { PlusCircleOutlined,EditOutlined,DeleteOutlined,EyeOutlined  } from \"@ant-design/icons\"\r\n\r\nfunction Userlist() {\r\n  \r\n \r\n\r\n  const [data,setData]=useState([]);\r\n\r\n  const loadData= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/get`);\r\n    setData(response.data);\r\n    // setDataSource(response.data);\r\n}\r\nuseEffect(() => {\r\n  loadData();\r\n}, []);\r\n\r\nconst tablecell={color:\"white\" ,fontWeight:'bold',backgroundColor:'#03364b',textAlign:\"center\"}\r\nconst tableContainer={borderRadius:15, margin:\"10px 10px\",maxWidth:1350}\r\nconst headerTablerow={position: \"sticky\",top: 0}\r\nconst useStyle = makeStyles((theme)=>({\r\n  table: {\r\n    minWidth:650,\r\n  },\r\n\r\n \r\ntablecell:{\r\n  \r\n},\r\n\r\nstatus:{\r\n  fontWeight:'bold',\r\n  fontSize:'1em',\r\n  color:'white',\r\n  backgroundColor:'gray',\r\n  borderRadius:18,\r\n    display:'block',\r\n    margin: \"15px\",\r\n    padding: \"13px\",\r\n    textAlign:\"center\"\r\n\r\n}\r\n}));\r\n\r\nconst classes=useStyle();\r\n\r\nconst[value,setValue]=useState('');\r\n// const[dataSource, setDataSource]=useState([]);\r\nconst[tableFilter,settableFilter]=useState([]);\r\n\r\nconst filterData=(e)=>{\r\n  if(e.target.value != \"\"){\r\n    setValue(e.target.value);\r\n    const filterTable=data.filter(o=>Object.keys(o).some(k=>\r\n      String(o[k]).toLowerCase().includes(e.target.value.toLowerCase())));\r\n      settableFilter([...filterTable])\r\n    }else{\r\n        setValue(e.target.value);\r\n       setData([...data]);\r\n    \r\n  }\r\n}\r\nuseEffect(()=>{\r\n\r\n},[]);\r\n\r\nconst deleteUserlist =(id,empid,empname) =>{\r\n  if(window.confirm(`Are you sure, Do you want to DELETE User :\\n ID: ${empid} \\n Name: ${empname} `)){\r\n      axios.delete(`${global.DB_HOST_PORT}/api/remove/${id} `)\r\n      .then((response) => {\r\n       console.log(\"RESPONSE FROM POST\", response.data);\r\n   })\r\n   .catch(err =>{\r\n      console.error(err);\r\n   })\r\n      toast.success(`${empid} deleted successfully !!! `);\r\n     setTimeout(()=>loadData(),500);\r\n  }\r\n}\r\n\r\nconst Retrivefunction=()=>{\r\n  global.User_retrive=\"Yes\"\r\n  console.log(global.User_retrive)\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n    <Navbar/>\r\n    <div>\r\n      <div className=\"Box\"></div>\r\n     \r\n    <TextField onChange={filterData} placeholder=\"Search\" className=\"SearchBox\" variant=\"standard\" fontWeight=\"bold\" float=\"right\"> </TextField>\r\n    <FcSearch size=\"30px\" className=\"Searchicon\"/>\r\n    </div>\r\n    <div>\r\n      \r\n    <TableContainer component={Paper} style={tableContainer}>\r\n    <Table className=\"styled-table\" >\r\n              <TableHead >\r\n              \r\n          <TableRow >\r\n                                    <TableCell style={tablecell}>No.</TableCell>\r\n                         <TableCell style={tablecell}>Emp.ID</TableCell>\r\n                         <TableCell style={tablecell}>Emp.Name</TableCell>\r\n                         <TableCell style={tablecell}>Email</TableCell>\r\n                         <TableCell style={tablecell}>Contact No.</TableCell>\r\n                         <TableCell style={tablecell}>Designation</TableCell>\r\n                         <TableCell style={tablecell}>Design Sector</TableCell>\r\n                         <TableCell style={tablecell}>Perimeter</TableCell>\r\n                         <TableCell style={tablecell}>Responsible</TableCell>\r\n                         <TableCell style={tablecell}>Work Location</TableCell>\r\n                         <TableCell style={tablecell}>Lead</TableCell>\r\n                         <TableCell style={tablecell}>Company</TableCell>\r\n                         <TableCell style={tablecell}>Action</TableCell>\r\n                                                </TableRow>\r\n                    \r\n                 </TableHead>\r\n                <tbody >\r\n             \r\n                    {value.length > 0 ? tableFilter.map((item,index) =>{\r\n                      \r\n                        return (\r\n                            <tr key={item.id}>\r\n                                <th scope=\"row\">{index+1} </th>\r\n                                <TableCell >{item.empid}</TableCell>\r\n                                <td>{item.empname}</td>\r\n                                <td>{item.emailid}</td>\r\n                                <td>{item.mobileno}</td>\r\n                                <td>{item.designation}</td>\r\n                                <td>{item.designsector}</td>\r\n                                <td>{item.perimeter}</td>\r\n                                <td>{item.responsible }</td>\r\n                                <td>{item.worklocation }</td>\r\n                                <td>{item.leadaccess }</td>\r\n                                <td >{item.company  }</td>\r\n                                <td className=\"act-btn\" style={{width:\"140px\"}}>\r\n                              {/* <div style={{float:\"right\"}}> */}\r\n                              <Link to={`/update/${item.id}`}>\r\n                                <button className=\"btn btn-edit \" onClick={Retrivefunction}> {<FiEdit />}</button>\r\n                                </Link>\r\n                                <button className=\"btn btn-delete \"  onClick={()=> deleteUserlist(item.id, item.empid,item.empname)}>{<RiDeleteBin5Fill />}</button>\r\n                              \r\n                                <button className=\"btn btn-view \" >{<MdApproval />} </button>\r\n                                {/* </div>  */}\r\n                                </td> \r\n\r\n\r\n                                {/* <td>\r\n                                    <Link to={`/update/${item.id}`}>\r\n                                        <button className=\"btn btn-edit \"> {<EditOutlined />}Edit</button>\r\n                                    </Link>\r\n\r\n                                    \r\n                                        <button className=\"btn btn-delete \" onClick={()=> deleteContact(item.id)}>{<DeleteOutlined />}Delete</button>\r\n                                    \r\n\r\n                                    <Link to={`/view/${item.id}`}>\r\n                                        <button className=\"btn btn-view \">{<EyeOutlined />}View</button>\r\n                                       \r\n                                    </Link>\r\n                                </td> */}\r\n                            </tr>\r\n                        ); \r\n                    })\r\n                  :\r\n\r\n                  data.map((item,index) =>{\r\n                    return (\r\n                        <tr key={item.id}>\r\n                            <th scope=\"row\">{index+1} </th>\r\n                            <td>{item.empid}</td>\r\n                            <td>{item.empname}</td>\r\n                            <td>{item.emailid}</td>\r\n                            <td>{item.mobileno}</td>\r\n                            <td>{item.designation}</td>\r\n                            <td>{item.designsector}</td>\r\n                            <td>{item.perimeter}</td>\r\n                            <td>{item.responsible }</td>\r\n                            <td>{item.worklocation }</td>\r\n                            <td>{item.leadaccess }</td>\r\n                            <td >{item.company  }</td>\r\n                            {/* className={classes.status} */}\r\n                            <td className=\"act-btn\" >\r\n                              {/* <div style={{float:\"right\"}}> */}\r\n                              <Link to={`/update/${item.id}`}>\r\n                                <button className=\"btn btn-edit \" onClick={Retrivefunction} > {<FiEdit />}</button>\r\n                               </Link>\r\n                                <button className=\"btn btn-delete \"  onClick={()=> deleteUserlist(item.id, item.empid,item.empname)}>{<RiDeleteBin5Fill />}</button>\r\n                                <button className=\"btn btn-view \" >{<MdApproval />}</button>\r\n                                {/* </div>  */}\r\n                                </td> \r\n                       \r\n                              \r\n                        </tr>\r\n                    ); \r\n                })\r\n                  }\r\n                </tbody>\r\n            </Table>\r\n            </TableContainer>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Userlist","import React, {useState,useEffect} from \"react\";\r\nimport Navbar from '../components/Navbar'\r\nimport '../GlobalVariables'\r\nimport '../cssdesign/Button.css'\r\nimport \"./Userlist.css\";\r\nimport \"./Dropdownitems.css\";\r\nimport {toast} from \"react-toastify\";\r\nimport axios from   \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Typography } from '@mui/material';\r\nimport { borderRadius, color } from \"@mui/system\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Input, theme } from \"antd\";\r\nimport { yellow } from \"@mui/material/colors\";\r\nimport {InputLabel,TextField } from \"@mui/material\";\r\nimport { FcSearch } from 'react-icons/fc';\r\nimport { FiEdit } from 'react-icons/fi';\r\nimport { RiDeleteBin5Fill } from 'react-icons/ri';\r\nimport { MdApproval } from 'react-icons/md';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport \"../mainpages/Register.css\";\r\n\r\n\r\n\r\nfunction Dropdownitems() {\r\n\r\nconst tablecell={color:\"white\" ,fontWeight:'bold',backgroundColor:'#03364b',textAlign:\"center\"}\r\nconst tablecell1={color:\"white\" ,fontWeight:'bold',backgroundColor:'#03364b',textAlign:\"right\"}\r\nconst tablebody={textAlign:\"center\"}\r\n\r\n\r\n\r\nconst tableContainer={borderRadius:15, margin:\"10px 10px\",maxWidth:850}\r\nconst headerTablerow={position: \"sticky\",top: 0}\r\nconst Inputtext={fontWeight:'bold'}\r\nconst [buttonValue,setButtonValue]=useState(\"Design Sector\")\r\n\r\nconst[stateValue,setStateValue]=useState(\"\");\r\nconst {txtinput,designsector,perimeter,worklocation,company,createdby, createddate}=stateValue;\r\n    \r\n\r\nconst DesignSectoronclk= ()=>{\r\n    setButtonValue(\"Design Sector\");\r\n    load_designsector();\r\n    ClearAllStatevariable();\r\n   \r\n  }\r\n\r\nconst Perimeteronclk= ()=>{\r\n    setButtonValue(\"Perimeter\");\r\n    load_perimeter();\r\n    ClearAllStatevariable();\r\n    \r\n}\r\n\r\nconst Worklocationonclk= ()=>{\r\n    setButtonValue(\"Work Location\");\r\n    load_worklocation();\r\n    ClearAllStatevariable();\r\n\r\n}\r\n\r\nconst Companyononclk= ()=>{\r\n    setButtonValue(\"Company\");\r\n    load_company();\r\n    ClearAllStatevariable();\r\n\r\n  }\r\n\r\nconst handleInputChange=(e) =>{\r\n    //const {name,value}=e.target;\r\n    //setStateValue({...stateValue,[name]:value});\r\n\r\n    if(buttonValue==\"Design Sector\"){\r\n        setStateValue({...stateValue,designsector:e.target.value});\r\n       \r\n     }\r\n\r\n     if(buttonValue==\"Perimeter\"){\r\n        setStateValue({...stateValue,perimeter:e.target.value});\r\n      \r\n      }\r\n\r\n      if(buttonValue==\"Work Location\"){\r\n        setStateValue({...stateValue,worklocation:e.target.value});\r\n\r\n      }\r\n\r\n      if(buttonValue==\"Company\"){\r\n        setStateValue({...stateValue,company:e.target.value});\r\n\r\n      }\r\n\r\n  // console.log(stateValue,buttonValue)\r\n\r\n };\r\n\r\n\r\n const ClearAllStatevariable=() =>{\r\n    document.getElementById(\"textfield1\").value = \"\";\r\n    setStateValue({stateValue,designsector:\"\"});\r\n    // setStateValue({...stateValue,perimeter:\"\"});\r\n    // setStateValue({...stateValue,worklocation:\"\"});\r\n    // setStateValue({...stateValue,company:\"\"});\r\n }\r\n\r\n//Server Side with Front End\r\n\r\n\r\n\r\nconst [loaddata,setLoaddata]=useState([]);\r\n\r\n\r\n  const load_designsector= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/designsectorget`);\r\n    setLoaddata(response.data);\r\n }\r\n\r\n const load_perimeter= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/perimeterget`);\r\n    setLoaddata(response.data);\r\n  }\r\n\r\n const load_worklocation= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/worklocationget`);\r\n    setLoaddata(response.data);\r\n }\r\n\r\n const load_company= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/companyget`);\r\n    setLoaddata(response.data);\r\n }\r\n\r\n\r\nuseEffect(() => {\r\n    handleRefresh()\r\n\r\n   \r\n}, []);\r\n\r\n\r\n\r\nconst handleSubmit= (e) =>{\r\n       \r\n    e.preventDefault();     \r\n    AddNewcategoryList()\r\n\r\n    }\r\n\r\nconst handleRefresh=()=>{\r\n    if(buttonValue==\"Design Sector\"){\r\n        load_designsector();\r\n       \r\n     }\r\n\r\n     if(buttonValue==\"Perimeter\"){\r\n        load_perimeter();\r\n      }\r\n\r\n      if(buttonValue==\"Work Location\"){\r\n        load_worklocation()\r\n      }\r\n\r\n      if(buttonValue==\"Company\"){\r\n        load_company()\r\n      }\r\n}\r\n\r\n\r\nconst AddNewcategoryList=()=>{\r\n \r\n       \r\n    try{\r\n        \r\n\r\n        if(buttonValue==\"Design Sector\"){\r\n\r\n            if(!designsector ){\r\n                toast.error(\"Please Enter the Input\")\r\n             }else{\r\n           axios.post(`${global.DB_HOST_PORT}/api/designsectorpost`,{\r\n           designsector, createdby, createddate\r\n           })\r\n           ClearAllStatevariable()\r\n           toast.success(\"Sucessfully Registered \");\r\n           setTimeout(()=>load_designsector(),0);\r\n          \r\n        }\r\n        }\r\n\r\n\r\n        \r\n\r\n        if(buttonValue==\"Perimeter\"){\r\n\r\n            if(!perimeter ){\r\n                toast.error(\"Please Enter the Input\")\r\n           }else{\r\n            axios.post(`${global.DB_HOST_PORT}/api/perimeterpost`,{\r\n                perimeter, createdby, createddate\r\n            })\r\n            ClearAllStatevariable()\r\n            toast.success(\"Sucessfully Registered \");\r\n            setTimeout(()=>load_perimeter(),0);\r\n           \r\n         }\r\n        }\r\n\r\n      \r\n         if(buttonValue==\"Work Location\"){\r\n            if(!worklocation ){\r\n                toast.error(\"Please Enter the Input\")\r\n           }else{\r\n            axios.post(`${global.DB_HOST_PORT}/api/worklocationpost`,{\r\n                worklocation, createdby, createddate\r\n            })\r\n            ClearAllStatevariable()\r\n            toast.success(\"Sucessfully Registered \");\r\n            setTimeout(()=>load_worklocation(),0);\r\n           \r\n         }\r\n        }\r\n\r\n     \r\n         if(buttonValue==\"Company\"){\r\n            if(!company ){\r\n                toast.error(\"Please Enter the Input\")\r\n           }else{\r\n            axios.post(`${global.DB_HOST_PORT}/api/companypost`,{\r\n            company, createdby, createddate\r\n            })\r\n            ClearAllStatevariable()\r\n            toast.success(\"Sucessfully Registered \");\r\n            setTimeout(()=>load_company(),0);\r\n           \r\n         }\r\n        }\r\n\r\n\r\n          \r\n\r\n    }catch(err){\r\n       toast.error(\"Can't Reach your Server!!!\")\r\n   console.log(err.response.data);\r\n   }}\r\n\r\n\r\n\r\n\r\n    \r\nconst delete_designsector =(id,designsector) =>{\r\n    if(window.confirm(`Are you sure, Do you want to DELETE? \\n Design Sector : ${designsector} `)){\r\n        axios.delete(`${global.DB_HOST_PORT}/api/designsectorremove/${id} `)\r\n        .then((response) => {\r\n         console.log(\"RESPONSE FROM POST\", response.data);\r\n     })\r\n     .catch(err =>{\r\n        console.error(err);\r\n     })\r\n        toast.success(`${designsector} deleted successfully !!! `);\r\n       setTimeout(()=>load_designsector(),0);\r\n    }\r\n  }\r\n\r\n  const delete_perimeter =(id,perimeter) =>{\r\n    if(window.confirm(`Are you sure, Do you want to DELETE? \\n Design Sector : ${perimeter} `)){\r\n        axios.delete(`${global.DB_HOST_PORT}/api/perimeterremove/${id} `)\r\n        .then((response) => {\r\n         console.log(\"RESPONSE FROM POST\", response.data);\r\n     })\r\n     .catch(err =>{\r\n        console.error(err);\r\n     })\r\n        toast.success(`${perimeter} deleted successfully !!! `);\r\n       setTimeout(()=>load_perimeter(),0);\r\n    }\r\n  }\r\n\r\n  const delete_worklocation =(id,worklocation) =>{\r\n    if(window.confirm(`Are you sure, Do you want to DELETE? \\n Design Sector : ${worklocation} `)){\r\n        axios.delete(`${global.DB_HOST_PORT}/api/worklocationremove/${id} `)\r\n        .then((response) => {\r\n         console.log(\"RESPONSE FROM POST\", response.data);\r\n     })\r\n     .catch(err =>{\r\n        console.error(err);\r\n     })\r\n        toast.success(`${worklocation} deleted successfully !!! `);\r\n       setTimeout(()=>load_worklocation(),0);\r\n    }\r\n  }\r\n\r\n  const delete_company =(id,company) =>{\r\n    if(window.confirm(`Are you sure, Do you want to DELETE? \\n Design Sector : ${company} `)){\r\n        axios.delete(`${global.DB_HOST_PORT}/api/companyremove/${id} `)\r\n        .then((response) => {\r\n         console.log(\"RESPONSE FROM POST\", response.data);\r\n     })\r\n     .catch(err =>{\r\n        console.error(err);\r\n     })\r\n        toast.success(`${company} deleted successfully !!! `);\r\n       setTimeout(()=>load_company(),0);\r\n    }\r\n  }\r\n\r\n  return (\r\n<>\r\n<Navbar/>\r\n<div>\r\n      <div className=\"Box\"></div>\r\n     \r\n    <TextField  placeholder=\"Search\" className=\"SearchBox\" variant=\"standard\" fontWeight=\"bold\" float=\"right\"> </TextField>\r\n    <FcSearch size=\"30px\" className=\"Searchicon\"/>\r\n    </div>\r\n    <div>\r\n        <button className=\"buttonD3\" onClick={DesignSectoronclk} > Design Sector </button>\r\n        <button className=\"buttonD3\" onClick={Perimeteronclk}> Perimeter </button>\r\n        <button className=\"buttonD3\" onClick={Worklocationonclk}> Work Location </button>\r\n        <button className=\"buttonD3\" onClick={Companyononclk}> Company </button>\r\n    </div>   \r\n    <div className=\"AddNewpanel\">\r\n        <label className=\"AddNewpanel-label\"> Enter {buttonValue} </label>\r\n    <TextField placeholder=\"Enter ...\" \r\n    id='textfield1' \r\n    name='textfield1'    \r\n    size=\"100px\" \r\n    variant=\"outlined\" \r\n    fontWeight=\"bold\" \r\n    float=\"right\"    \r\n    onChange={handleInputChange}\r\n    required\r\n    inputProps={{style: {fontSize: 15,fontWeight:\"bold\" }}}\r\n    > </TextField>\r\n\r\n    <button className=\"buttonD4\" onClick={handleSubmit}><AiIcons.AiFillFileAdd className=\"addbtn\" style={{ width: 30, height: 30}} />  Add New  </button>\r\n    <button className=\"buttonD4\" onClick={handleRefresh }><IoIcons.IoMdRefreshCircle className=\"addbtn\" style={{ width: 30, height: 30}} />  Refresh  </button>\r\n\r\n    </div>\r\n\r\n    <div>\r\n      \r\n    <TableContainer component={Paper} style={tableContainer}>\r\n    <Table className=\"styled-table\" >\r\n              <TableHead >\r\n              \r\n          <TableRow >\r\n                         <TableCell style={tablecell}>No.</TableCell>\r\n                         <TableCell style={tablecell}>{buttonValue}</TableCell> \r\n                         <TableCell style={tablecell}>Added By</TableCell>                        \r\n                         <TableCell style={tablecell1}>Action</TableCell>\r\n                        \r\n          </TableRow>\r\n                    \r\n                 </TableHead>\r\n                <tbody >\r\n             \r\n               { loaddata.map((item,index) =>{\r\n                if(buttonValue==\"Design Sector\"){\r\n                      return ( \r\n                        <tr key={item.id}>\r\n                        <th scope=\"row\">{index+1} </th>\r\n                        <td style={tablebody} >{item.designsector}</td>\r\n                        <td style={tablebody} >{item.createdby}</td>\r\n                        <td> <button className=\"btn delete_DD \"  onClick={()=> delete_designsector(item.id,item.designsector)}>{<RiDeleteBin5Fill />} Delete </button> </td>\r\n                        </tr> \r\n                      )\r\n                    }\r\n\r\n                    if(buttonValue==\"Perimeter\"){\r\n                        return ( \r\n                          <tr key={item.id}>\r\n                          <th scope=\"row\">{index+1} </th>\r\n                          <td style={tablebody} >{item.perimeter}</td>\r\n                          <td style={tablebody} >{item.createdby}</td>\r\n                          <td> <button className=\"btn delete_DD \"  onClick={()=> delete_perimeter(item.id,item.perimeter)}>{<RiDeleteBin5Fill />} Delete </button> </td>\r\n                          </tr> \r\n                        )\r\n                      }\r\n\r\n                      if(buttonValue==\"Work Location\"){\r\n                        return ( \r\n                          <tr key={item.id}>\r\n                          <th scope=\"row\">{index+1} </th>\r\n                          <td style={tablebody} >{item.worklocation}</td>\r\n                          <td style={tablebody} >{item.createdby}</td>\r\n                          <td> <button className=\"btn delete_DD \"  onClick={()=> delete_worklocation(item.id,item.worklocation)}>{<RiDeleteBin5Fill />} Delete </button> </td>\r\n                          </tr> \r\n                        )\r\n                      }\r\n\r\n                      if(buttonValue==\"Company\"){\r\n                        return ( \r\n                          <tr key={item.id}>\r\n                          <th scope=\"row\">{index+1} </th>\r\n                          <td style={tablebody} >{item.company}</td>\r\n                          <td style={tablebody} >{item.createdby}</td>\r\n                          <td> <button className=\"btn delete_DD \"  onClick={()=> delete_company(item.id,item.company)}>{<RiDeleteBin5Fill />} Delete </button> </td>\r\n                          </tr> \r\n                        )\r\n                      }\r\n\r\n\r\n\r\n\r\n                })\r\n                  }\r\n\r\n                               \r\n                          \r\n                    \r\n                 \r\n                       \r\n                     \r\n                </tbody>\r\n            </Table>\r\n            </TableContainer>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dropdownitems","import React, { useState,useEffect,useRef } from 'react';\r\nimport { Avatar, Grid,Paper, TextField,Select, MenuItem,FormControl,InputLabel } from \"@mui/material\";\r\nimport { AiTwotoneHome } from 'react-icons/ai';\r\nimport { GiArchiveRegister } from 'react-icons/gi';\r\nimport \"../mainpages/Register.css\";\r\nimport { Form,Button,Checkbox,Input,Space } from \"antd\";\r\nimport DatePicker from 'react-date-picker';\r\nimport { red } from \"@mui/material/colors\";\r\nimport { width } from \"@mui/system\";\r\nimport { HomeOutlined  } from \"@ant-design/icons\"\r\n import { format } from \"date-fns\";\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport { Calendar } from 'react-date-range';\r\nimport Moment from 'moment';\r\nimport dateFormat from 'dateformat';\r\nimport '../GlobalVariables'\r\nimport '../cssdesign/Button.css'\r\nimport \"./Print.css\";\r\nimport Navbar from '../components/Navbar'\r\nimport * as ImIcons from \"react-icons/im\";\r\nimport * as FiIcons from \"react-icons/fi\";\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\n\r\nimport {useNavigate as useHistory,useParams, Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport {Dropdown,DropdownToggle,DropdownMenu,DropdownItem} from \"reactstrap\"\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\n\r\nvar onsubmittxtCheck=\"No\";\r\n\r\n\r\nconst initialState={\r\n    actuid:\"\",\r\n    project :\"\",\r\n    perimeter :\"\",\r\n    designsector :\"\",\r\n    partname :\"\",\r\n    econo :\"\",\r\n    pa :\"\",\r\n    list :\"\",\r\n    leadeid :\"\",\r\n    taskassign :\"\",\r\n    reqby :\"\",\r\n    taskcategory :\"\",\r\n    taskdesc :\"\",\r\n    ioreceived :\"\",\r\n    reqdate :\"\",\r\n    targetdate :\"\",\r\n    completion :\"\",\r\n    taskstatus :\"\",\r\n    deldate :\"\",\r\n    spendhr :\"0\",\r\n    plmlink :\"\",\r\n    qualityaccpt :\"\",\r\n    signofact :\"\",\r\n    remarks :\"\",\r\n    query :\"0\",\r\n    querystatus :\"Closed\",\r\n   \r\n };\r\n \r\n\r\n\r\nconst Addtask=()=>{\r\n\r\nconst componentRef=useRef(null)\r\n      const[state,setState]=useState(initialState);\r\n\r\n    const [reqdatevalue, reqdateonChange] = useState(new Date());\r\n\r\n    const { \r\n    actuid,\r\n    project,\r\n    perimeter ,\r\n    designsector ,\r\n    partname ,\r\n    econo ,\r\n    pa ,\r\n    list ,\r\n    leadeid ,\r\n    taskassign ,\r\n    reqby ,\r\n    taskcategory ,\r\n    taskdesc ,\r\n    ioreceived ,\r\n    reqdate ,\r\n    targetdate ,\r\n    completion ,\r\n    taskstatus ,\r\n    deldate ,\r\n    spendhr ,\r\n    plmlink ,\r\n    qualityaccpt ,\r\n    signofact ,\r\n    remarks ,\r\n    query ,\r\n    querystatus ,}=state;\r\n    \r\n    const[selecteddesignation,setDesignation]=useState(\"Selete\")\r\n    \r\n\r\n    const navigate = useHistory();\r\n\r\n   \r\nconst [arraydesignation,setArrayDesignation]=useState([{\"designsector\":\"Electrical & Electronic\"},{\"designsector\":\"LEAD\"},{\"designsector\":\"Worker\"}]);\r\n\r\n// TODO:Start *** designsector Retrive Functions ***\r\nconst[designsectorRetrive,setdesignsector]=useState([]);\r\n\r\nconst Arry_loaddesignsector= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/designsectorget`);\r\n    setdesignsector(response.data);\r\n\r\n}\r\n// Complete *** designsector Retrive Functions ***\r\n\r\n// TODO:Start *** perimeter Retrive Functions ***\r\nconst[perimeterRetrive,setperimeter]=useState([]);\r\n\r\nconst Arry_loadperimeter= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/perimeterget`);\r\n    setperimeter(response.data);\r\n\r\n}\r\n// Complete *** perimeter Retrive Functions ***\r\n \r\n\r\n// TODO:Start *** worklocation Retrive Functions ***\r\nconst[worklocationRetrive,setWorklocation]=useState([]);\r\n\r\nconst Arry_loadworklocation= async() =>{\r\n    const response=await axios.get(`${global.DB_HOST_PORT}/api/worklocationget`\r\n    );\r\n    setWorklocation(response.data);\r\n\r\n}\r\n// Complete *** worklocation Retrive Functions ***\r\n\r\n\r\n// TODO:Start *** company Retrive Functions ***\r\nconst[companyRetrive,setCompanyRetrive]=useState([]);\r\n\r\nconst Arry_loadCompany= async() =>{\r\n    const response=await axios.get(\"${global.DB_HOST_PORT}/api/companyget\");\r\n    setCompanyRetrive(response.data);\r\n\r\n}\r\n\r\n// Complete *** company Retrive Functions ***\r\n\r\n\r\n    const loadarraydesignation= async() =>{\r\n      const response=await axios.get(`${global.DB_HOST_PORT}/api/get`);\r\n      setArrayDesignation(response.data);\r\n      //setDataSource(response.data);\r\n  }\r\n  useEffect(() => {\r\n   loadarraydesignation();\r\n   Arry_loadCompany();\r\n   Arry_loadworklocation();\r\n   Arry_loadperimeter();\r\n   Arry_loaddesignsector();\r\n  }, []);\r\n   \r\n   \r\n    const{ id }=useParams();\r\n    \r\n// TODO: handle Date change\r\n\r\n    const handlereqdate = (e)=> {  \r\n         setState((state)=>({...state,reqdate:e.target.value}));\r\n      \r\n    }\r\n\r\n    const handletargetdate = (e)=> {  \r\n            setState((state)=>({...state,targetdate:e.target.value}));\r\n            setState((state)=>({...state,deldate:e.target.value}));\r\n    }\r\n\r\n    const handledeldate = (e)=> {  \r\n        setState((state)=>({...state,deldate:e.target.value}));\r\n}\r\n       \r\n       \r\n\r\n\r\n       \r\n             useEffect(()=>{\r\n\r\n                if (id) {\r\n                        axios\r\n                    .get(`${global.DB_HOST_PORT}/api/tasklistget/${id}`)\r\n                    .then((resp) => {\r\n                        setState({...resp.data[0]})\r\n                        setState((state)=>({...state,reqdate:(dateFormat(resp.data[0].reqdate, 'yyyy-mm-dd'))}));\r\n                        setState((state)=>({...state,targetdate:(dateFormat(resp.data[0].targetdate, 'yyyy-mm-dd'))}));\r\n                        setState((state)=>({...state,deldate:(dateFormat(resp.data[0].deldate, 'yyyy-mm-dd'))}));\r\n                       // setState(dateFormat(...resp.data[0].reqdate, 'yyyy-mm-dd') ) \r\n                    if(global.task_retrive=\"Yes\"){\r\n                        global.task_retrive=\"No\"\r\n                       // dobonChange(resp.data[0].dob) \r\n                    }\r\n                       \r\n                        \r\n\r\n                        })\r\n                \r\n            }  },[id]);\r\n      \r\n\r\n\r\n   \r\n   \r\n \r\n\r\n    const handleSubmit= (e) =>{\r\n       \r\n        e.preventDefault();  \r\n          \r\n        if(!project ){\r\n             toast.error(\"Please fill all input field\")\r\n             onsubmittxtCheck=\"Yes\"\r\n          \r\n            \r\n        }else{\r\n            if(!reqdate  ){\r\n                               toast.error(\"Please Reselect reqdate\")\r\n            }else{\r\n              \r\n\r\n         try{\r\n            axios.post(`${global.DB_HOST_PORT}/api/trackerpost`,{\r\n                project,\r\n                perimeter ,\r\n                designsector ,\r\n                partname ,\r\n                econo ,\r\n                pa ,\r\n                list ,\r\n                leadeid ,\r\n                taskassign ,\r\n                reqby ,\r\n                taskcategory ,\r\n                taskdesc ,\r\n                ioreceived ,\r\n                reqdate ,\r\n                targetdate ,\r\n                completion ,\r\n                taskstatus ,\r\n                deldate ,\r\n                spendhr ,\r\n                plmlink ,\r\n                qualityaccpt ,\r\n                signofact ,\r\n                remarks ,\r\n                query ,\r\n                querystatus ,\r\n                })\r\n                toast.success(\"Sucessfully Registered \");\r\n              //  setTimeout(()=> navigate(\"/\"),100);\r\n\r\n         }catch(err){\r\n            toast.error(\"Can't Reach your Server!!!\")\r\n        console.log(err.response.data);\r\n        }}\r\n    \r\n        }\r\n    };\r\n\r\n   \r\n    const handleInputChange=(e) =>{\r\n       const {name,value}=e.target;\r\n        setState({...state,[name]:value});\r\n        // console.log(e.target.value);\r\n       //  console.log(e.target.id);\r\n    \r\n        \r\n    };\r\n\r\n   \r\n  \r\n    \r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    const [date,setDate]=useState([reqdate]);\r\n\r\n    const[calender,setCalender]=useState(\"\")\r\n\r\n    const[open, setOpen]=useState(false)\r\n    useEffect(()=>{\r\n        setCalender(format(new Date(),'dd/MM/yyyy'))\r\n        // document.addEventListener(\"keydown\",hideOnEscape,true)\r\n        // document.addEventListener(\"click\",hideOnClickOutside,true)\r\n        \r\n    },[])\r\n   \r\n\r\n\r\n    const handledate=(e)=>{\r\n             const getNewDate=e.target.value;\r\n      setDate(getNewDate);\r\n  \r\n     }\r\n   \r\n   \r\n     useEffect(()=>{\r\n       // console.log(state);\r\n    },[state])\r\n\r\n     const Check2=()=>{\r\n        console.log(state);\r\n        //console.log(arraydesignationNew);\r\n       // setArrayDesignation([\"Enginner\",\"Senior\",\"Lead\",\"Subsenior\"])\r\n     }\r\n    \r\n   \r\n       \r\n    const paperStyle={ height:'100vh',maxWidth:'200vh',float:'center' ,margin:\"auto auto\",backgroundColor:\"white\"}\r\n    const avatarStyle={backgroundColor:'white',height:'70px',width:'70px'}\r\n    const bodyMovel={padding:20,width:'32%',float:'left',marginLeft:\"5px\"  }\r\n    const bodyMovel_2={padding:10,width:'64%',float:'left'  }\r\n    const bodyMovel_3={padding:10,width:'31%',float:'left'  }\r\n    const txtwithbutton={ display:\"inline-flex\" }\r\n\r\n    const bodyMover={padding:30,width:'33.33%',float:'right'  }\r\n\r\n    const dobl={padding:5,width:'60px'  }\r\n    const dobr={width:'auto',float:'left'  }\r\n    const btnl={width:'150px',float:'right',marginTop:\"10px\"  }\r\n    const btnr={width:'150px',float:'left'  }\r\n    const div2column={width:'auto',float:'left'  }\r\n\r\n    const [dropdownOpen,setDropdownOpen]=useState(false);\r\n    const toggle=()=>setDropdownOpen(prevState=>!prevState);\r\n\r\n   \r\n    return(\r\n        <div>\r\n        \r\n            \r\n           {/* <div class=\"sticky\" ><Navbar/></div> */}\r\n           <div style={{ float: \"right\", marginRight:\"100px\"}}>\r\n           <ReactToPrint \r\n             trigger={()=><Button className='buttonD7'>Print/Download</Button>}\r\n             content={()=> componentRef.current } className=\"ButtonPosition\" />\r\n            </div>\r\n      \r\n               \r\n            \r\n                \r\n            <div ref={componentRef}>\r\n            <Paper elevation={10} style={paperStyle}  >    \r\n            <h1 className='HeadingD1'>Task Activity Sheet</h1>  \r\n            <div className='HeadingBtmLine'></div>  \r\n            <Grid className='HeadingBtmLine-2'>\r\n            <h1 className='HeadingD2'>General Information</h1> \r\n            </Grid> \r\n            <div className='Para-1'>\r\n                <Grid style={bodyMovel}>                \r\n                 \r\n                    <label className='Heading-Ques'> Activity-ID :</label>\r\n                    <label className='Heading-Ans'> {actuid || \"\"}</label>                                  \r\n              \r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Project    :</label>\r\n                    <label className='Heading-Ans'> {project || \"\"}</label>\r\n                    <label className='Heading-Ques' style={{marginLeft:\"20px\"}}> Type :</label>\r\n                    <label className='Heading-Ans'> {list || \"\"}</label>  \r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Perimeter :</label>\r\n                    <label className='Heading-Ans'> {perimeter || \"\"}</label>\r\n\r\n                    \r\n                </Grid>\r\n\r\n                <Grid style={bodyMovel}>\r\n                     \r\n                    <label className='Heading-Ques'> Design Sector :</label>\r\n                    <label className='Heading-Ans'> {designsector || \"\"}</label>\r\n                    \r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> ECO Number :</label>\r\n                    <label className='Heading-Ans'> {econo || \"\"}</label>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> PA Number :</label>\r\n                    <label className='Heading-Ans'>{pa || \"\"}</label>\r\n                </Grid>\r\n\r\n                <Grid style={bodyMovel}> \r\n                \r\n                    <label className='Heading-Ques'> Part Name :</label>\r\n                    <label className='Heading-Ans'> {partname || \"\"}</label>                                      \r\n                    <div className=\"Gap2\"></div>\r\n\r\n                    <label className='Heading-Ques'> LEAD Name :</label>\r\n                    <label className='Heading-Ans'> {leadeid || \"\"}</label>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Task Assigner:</label>\r\n                    <label className='Heading-Ans'> {taskassign || \"\"}</label>\r\n\r\n                </Grid>\r\n            </div>\r\n            \r\n            <Grid className='HeadingBtmLine-2'>\r\n            <h1 className='HeadingD3'>Task Details</h1> \r\n            </Grid> \r\n            \r\n            <div className='Para-2'>\r\n                <div style={bodyMovel}>                \r\n                 \r\n                    <label className='Heading-Ques'> Task Req. By :</label>\r\n                    <label className='Heading-Ans'> {reqby || \"\"}</label>                                  \r\n              \r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Task Category:</label>\r\n                    <label className='Heading-Ans'>{taskcategory || \"\"}</label>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> All Input Received :</label>\r\n                    <label className='Heading-Ans'> {ioreceived || \"\"}</label>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Task Requested Date :</label>\r\n                    <label className='Heading-Ans'> {reqdate || \"\"}</label>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Target to Complete :</label>\r\n                    <label className='Heading-Ans'> {targetdate || \"\"}</label>\r\n                   \r\n                </div>\r\n\r\n                <div style={bodyMovel_2}>\r\n                    <label className='Heading-Ques'> Task Short Description :</label>\r\n                    <label className='Heading-Ans_2'> {taskdesc || \"\"}</label>                                      \r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Details Description :</label>\r\n                    <label className='Heading-Ans'>{taskdesc || \"\"}</label>\r\n\r\n                </div>                              \r\n            </div>\r\n\r\n            <Grid className='HeadingBtmLine-2'>\r\n            <h1 className='HeadingD3'>Status...</h1> \r\n            </Grid> \r\n            \r\n            <div className='Para-3'>\r\n                <div style={bodyMovel_3}>                \r\n                 \r\n                    <label className='Heading-Ques'> Completion :</label>\r\n                    <label className='Heading-Ans'> {completion || \"\"}</label>                                  \r\n              \r\n                    <label className='Heading-Ques'style={{marginLeft:\"20px\"}}> Task Status:</label>\r\n                    <label className='Heading-Ans'>{taskstatus || \"\"}</label>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Task Delivery Date :</label>\r\n                    <label className='Heading-Ans'> {deldate || \"\"}</label>\r\n\r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Total Spend Hour :</label>\r\n                    <label className='Heading-Ans'> {spendhr || \"\"}</label>\r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques' > Sign-off Activity :</label>\r\n                    <label className='Heading-Ans'> {signofact || \"\"}</label>\r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Quality Acceptance :</label>\r\n                    <label className='Heading-Ans'> {qualityaccpt || \"\"}</label>\r\n                </div>\r\n\r\n                <div style={bodyMovel_3}>\r\n                    <label className='Heading-Ques'> PLM/Doc Info Link :</label>\r\n                    <label className='Heading-Ans'> {plmlink || \"\"}</label>                                      \r\n                   \r\n                    <div className=\"Gap2\"></div>\r\n                    <label className='Heading-Ques'> Number of Query :</label>\r\n                    <label className='Heading-Ans'> {query || \"\"}</label>\r\n\r\n                   \r\n                </div>   \r\n                <div style={bodyMovel_3}>\r\n                   \r\n                    <label className='Heading-Ques'> Remarks :</label>\r\n                    <label className='Heading-Ans'> {remarks || \"\"}</label>\r\n                    <div className=\"Gap2\"></div>\r\n                   \r\n                    <label className='Heading-Ques' > Query Status :</label>\r\n                    <label className='Heading-Ans'> {querystatus || \"\"}</label>\r\n                   \r\n                </div>                              \r\n            </div>\r\n         </Paper>\r\n                  \r\n                    </div>\r\n          \r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addtask;","import React ,{useState} from 'react'\r\n\r\nfunction Child(props) {\r\n    return(\r\n        <>\r\n{/* <h1>{props.data}</h1> */}\r\n<button onClick={()=>props.changetitle (\"Title updated\")}> Clickme</button>\r\n        <h2> Welcom to child</h2>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Child;","import React, { useState } from 'react';\r\nimport { Avatar, Grid,Paper, TextField,Select, MenuItem,FormControl,InputLabel } from \"@mui/material\";\r\nimport { AiTwotoneHome } from 'react-icons/ai';\r\nimport { ImUserCheck } from 'react-icons/im';\r\nimport \"./Checkuser.css\";\r\nimport \"./Register.css\";\r\nimport { Form,Button,Checkbox,Input,Space } from \"antd\";\r\nimport DatePicker from 'react-date-picker';\r\nimport { red } from \"@mui/material/colors\";\r\nimport { width } from \"@mui/system\";\r\nimport { HomeOutlined  } from \"@ant-design/icons\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Checkuser=()=>{\r\n    const paperStyle={ height:'75vh',width:'80%',float:'center' ,margin:\"20px auto\",backgroundColor:\"white\"}\r\n    const avatarStyle={backgroundColor:'white',height:'70px',width:'70px'}\r\n    const bodyMovel={padding:30,width:'50%',float:'left'  }\r\n    const bodyMover={padding:30,width:'50%',float:'right'  }\r\n\r\n    const dobl={padding:5,width:'60px',float:'left'  }\r\n    const dobr={width:'auto',float:'left'  }\r\n    const btnl={width:'150px',float:'right'  }\r\n    const btnr={width:'150px',float:'left'  }\r\n    const [value, onChange] = useState(new Date());\r\n    return(\r\n        <div>\r\n            \r\n      \r\n        <Grid>\r\n            \r\n            \r\n                <Grid align=\"center\">\r\n                    \r\n                    <div className=\"div1\">\r\n                    <div className=\"Gap1\"></div>\r\n                    <div className=\"Title-text\">\r\n                    <Avatar style={avatarStyle} className=\"Title-text\">\r\n                    <h2 > <ImUserCheck size=\"40px\" color=\"#03364b\"/> </h2> \r\n                    </Avatar>\r\n                     \r\n                    <label className=\"label1\" > User Status</label> \r\n                    </div>                                \r\n                    <div className=\"Gap1\"></div>\r\n                    \r\n                    </div>\r\n                        \r\n                </Grid>\r\n                <Paper elevation={20} style={paperStyle}>        \r\n                <div style={bodyMovel}>\r\n                    {/* <Form.Item name=\"fullname\" label=\"Full name\">\r\n                        <Input placeholder=\"Type Your Name\"/>\r\n                    </Form.Item> */}\r\n                    \r\n                        <TextField  label='Employee ID' placeholder=\"Employee ID\" fullWidth className=\"TextUser\" disabled=\"true\"/>\r\n                    <div className=\"Gap2\"></div>\r\n                    <TextField  label='Employee Name' placeholder=\"Employee Name\" fullWidth  className=\"TextUser\" disabled=\"true\"/>\r\n                    <div className=\"Gap2\"></div>\r\n                    <TextField  label='Status' placeholder=\"Status\" fullWidth  className=\"TextUser\" disabled=\"true\"/>\r\n                    <div className=\"Gap2\"></div>\r\n                </div>\r\n                <div style={bodyMover}> \r\n                        \r\n                                       \r\n                    <TextField  label='Remarks' placeholder=\"Remarks\" fullWidth  className=\"remarks\" disabled=\"true\" />\r\n                    <div className=\"Gap2\"></div>\r\n                    <div>\r\n                        <button type='submit' className=\"buttonD5\" style={btnl}> Edit </button>\r\n                        <Link to=\"/\">\r\n                        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n                    \r\n                        <button type='submit' className=\"buttonD5\" style={btnr} > <i class=\"fa fa-home\"></i>   Home </button>\r\n                        </Link>\r\n                        \r\n                        \r\n                        </div>\r\n                        \r\n                        <div className=\"Gap2\"></div>\r\n                       \r\n                    \r\n                    </div>\r\n                    \r\n                    </Paper>\r\n           \r\n          \r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkuser;","\r\nimport Navbar from '../components/Navbar'\r\n\r\nimport * as React from 'react';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nfunction Version() {\r\n  return (\r\n    <>\r\n  <Navbar/>\r\n    <div>Version</div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Version","import './App.css';\nimport Login  from './mainpages/Login';\nimport Register from './mainpages/Register';\nimport Checkuser from './mainpages/Checkuser';\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Dashboard from './pages/Dashboard'\nimport Addtask from './pages/Addtask'\nimport Userlist from './pages/Userlist';\nimport Version from './pages/Version';\nimport Dropdownitems from './pages/Dropdownitems';\nimport Print from './pages/Print'\nfunction App() {\n  return (\n   <>\n   <BrowserRouter>\n   <div className='App'>\n   <ToastContainer position=\"top-right\"/>\n  \n   {/* <Navbar/> */}\n      <Routes>\n        \n         <Route exact path='/' element={<Login/>}/>\n         <Route path='/Register' element={<Register/>}/>\n         <Route path=\"/update/:id\" element={<Register/>}/>\n         \n         <Route path='/checkuser' element={<Checkuser/>}/>\n\n         <Route path='/dashboard'  element={<Dashboard/>} />\n         <Route path='/addtask' element={<Addtask/>}/>\n         <Route path=\"/taskupdate/:id\" element={<Addtask/>}/>\n         <Route path='/userlist' element={<Userlist/>}/>\n         <Route path='/version' element={<Version/>}/>\n         <Route path='/dropdownitems' element={<Dropdownitems/>}/>\n         <Route path='/print/:id' element={<Print/>}/>\n      </Routes>\n      \n   </div>\n   </BrowserRouter>\n   </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React ,{useState} from 'react'\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as TbIcons from \"react-icons/tb\";\r\nimport {Link} from 'react-router-dom';\r\nimport {SidebarData} from './SidebarData'\r\nimport \"./Navbar.css\"\r\nimport {IconContext}  from \"react-icons\";\r\nimport Child from './Child';\r\nimport { Avatar, Grid,Paper, TextField,Select, MenuItem,FormControl,InputLabel } from \"@mui/material\";\r\nimport '../GlobalVariables'\r\nfunction Navbar() {\r\nconst [sidebar, setSidebar]=useState(false);\r\nconst showSidebar=()=>setSidebar(!sidebar);\r\nconst [show,setShow]=useState(false);\r\nconst[word,setWord]=useState(\"Parent\");\r\n\r\n\r\nfunction Setfunction1(){\r\n    setShow(!show)\r\n}\r\n\r\n  return (\r\n    \r\n\r\n     <div className='sticky'>\r\n    \r\n             <IconContext.Provider value={{color:'#fff'}}>\r\n          \r\n    <div className='navbar' >\r\n        \r\n\r\n        <div className='menu-div'>\r\n            <Link to=\"#\" className='menu-bars'>\r\n            <FaIcons.FaBars className='close-icon' onClick={showSidebar}/>\r\n            </Link>\r\n        </div>\r\n    <div className='log-out-div'>\r\n    <Link to=\"/\">\r\n    <TbIcons.TbLogout className='log-out'/>\r\n    </Link>\r\n      <label className='empdetail'>{ global.employeid}</label>\r\n         </div>\r\n    </div>\r\n    \r\n   \r\n    {show && <div  className='navbar_check'>\r\n   \r\n     <p> show content</p>\r\n   \r\n    </div>}\r\n \r\n\r\n{/* <button className=\"HSBtn\" onClick={()=>{\r\n    // setShow(!show)\r\n    Setfunction1()\r\n}\r\n}>\r\n {show==true ? \"Hide\":\"Show\"}</button>\r\n  */}\r\n\r\n     \r\n    <nav className={sidebar ? 'nav-menu active': 'nav-menu'}>\r\n     \r\n        <ul className='nav-menu-items' onClick={showSidebar}>\r\n           <li className='navar-toggle'>\r\n            <Link to='#' className='menu-bars'>\r\n            <AiIcons.AiOutlineClose/>\r\n            </Link>\r\n           \r\n            </li> \r\n            {SidebarData.map((item,index) =>{\r\n                return  (\r\n                   \r\n                    <div className='sticky1'>\r\n                     <li key={index} className={item.cName}>\r\n                         <Link to={item.path}>\r\n                             {item.icon} \r\n                             <span>{item.title}</span>\r\n                           \r\n                         </Link>\r\n                     </li>\r\n                     </div>\r\n              \r\n                   \r\n                );\r\n            })}\r\n        </ul>\r\n     \r\n    </nav>\r\n   \r\n    </IconContext.Provider>\r\n\r\n {/* <Child data=\"Data from navbar\"/> */}\r\n {/* <h1>{word}</h1>\r\n     <Child changetitle={text =>setWord(text)}/> */}\r\n\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default Navbar"],"sourceRoot":""}